The Linux-Libre deblob script that is used to make the Trisquel kernel packages disables all functionality related to loading nonfree firmware blobs. Even if the user chooses to install the blob files, these would still not be loaded and the driver would not activate.
An alternative solution is to preserve the loading functionality and remove the *advertisment* to the user of the blob filenames when these fail to be loaded, as to not imply that those files are recommended in any way, so the driver would just print "failed to load firmware" or equivalent. This allows the user to use the driver if they so decide.

This method is done by a patch (silent-accept-firmware.patch) that removes all the instances where the blob filenames are printed to the user (via kernel logs), and a section on the package helper that takes care of preventing the deblob script from acting on the files modified by the patch. This is done manually, for individual drivers (usually those for very common devices). It needs to be reviewed on any new major release, checking that no new lines were added to the upstream driver in where it prints the blob filename on the log.
Printing the blob filename on success operations (that is, when the blob file is present) is acceptable. If in doubt, all instances of printing the blob filenames should be removed.

diff -Nru linux-5.15.0a/arch/x86/kernel/cpu/microcode/amd.c linux-5.15.0b/arch/x86/kernel/cpu/microcode/amd.c
--- linux-5.15.0a/arch/x86/kernel/cpu/microcode/amd.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/arch/x86/kernel/cpu/microcode/amd.c	2022-05-12 17:31:21.286518721 -0500
@@ -901,7 +901,7 @@
 		snprintf(fw_name, sizeof(fw_name), "amd-ucode/microcode_amd_fam%.2xh.bin", c->x86);
 
 	if (request_firmware_direct(&fw, (const char *)fw_name, device)) {
-		pr_debug("failed to load file %s\n", fw_name);
+		pr_debug("failed to load file\n");
 		goto out;
 	}
 
diff -Nru linux-5.15.0a/arch/x86/kernel/cpu/microcode/intel.c linux-5.15.0b/arch/x86/kernel/cpu/microcode/intel.c
--- linux-5.15.0a/arch/x86/kernel/cpu/microcode/intel.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/arch/x86/kernel/cpu/microcode/intel.c	2022-05-12 17:34:56.726972573 -0500
@@ -940,7 +940,7 @@
 		c->x86, c->x86_model, c->x86_stepping);
 
 	if (request_firmware_direct(&firmware, name, device)) {
-		pr_debug("data file %s load failed\n", name);
+		pr_debug("data file load failed\n");
 		return UCODE_NFOUND;
 	}
 
diff -Nru linux-5.15.0a/drivers/base/firmware_loader/fallback.c linux-5.15.0b/drivers/base/firmware_loader/fallback.c
--- linux-5.15.0a/drivers/base/firmware_loader/fallback.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/base/firmware_loader/fallback.c	2022-05-12 17:40:38.151694598 -0500
@@ -522,7 +522,7 @@
 	if (fw_priv->opt_flags & FW_OPT_UEVENT) {
 		fw_priv->need_uevent = true;
 		dev_set_uevent_suppress(f_dev, false);
-		dev_dbg(f_dev, "firmware: requesting %s\n", fw_priv->fw_name);
+		dev_dbg(f_dev, "firmware: requesting\n");
 		kobject_uevent(&fw_sysfs->dev.kobj, KOBJ_ADD);
 	} else {
 		timeout = MAX_JIFFY_OFFSET;
@@ -560,15 +560,13 @@
 	if (opt_flags & FW_OPT_NOWAIT) {
 		timeout = usermodehelper_read_lock_wait(timeout);
 		if (!timeout) {
-			dev_dbg(device, "firmware: %s loading timed out\n",
-				name);
+			dev_dbg(device, "firmware: loading timed out\n");
 			return -EBUSY;
 		}
 	} else {
 		ret = usermodehelper_read_trylock();
 		if (WARN_ON(ret)) {
-			dev_err(device, "firmware: %s will not be loaded\n",
-				name);
+			dev_err(device, "firmware: will not be loaded\n");
 			return ret;
 		}
 	}
@@ -651,10 +649,8 @@
 		return ret;
 
 	if (!(opt_flags & FW_OPT_NO_WARN))
-		dev_warn(device, "Falling back to sysfs fallback for: %s\n",
-				 name);
+		dev_warn(device, "Falling back to sysfs fallback\n");
 	else
-		dev_dbg(device, "Falling back to sysfs fallback for: %s\n",
-				name);
+		dev_dbg(device, "Falling back to sysfs fallback\n");
 	return fw_load_from_user_helper(fw, name, device, opt_flags);
 }
diff -Nru linux-5.15.0a/drivers/base/firmware_loader/main.c linux-5.15.0b/drivers/base/firmware_loader/main.c
--- linux-5.15.0a/drivers/base/firmware_loader/main.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/base/firmware_loader/main.c	2022-05-12 17:52:35.513216324 -0500
@@ -539,11 +539,10 @@
 						       READING_FIRMWARE);
 		if (rc < 0) {
 			if (rc != -ENOENT)
-				dev_warn(device, "loading %s failed with error %d\n",
-					 path, rc);
+				dev_warn(device, "loading failed with error %d\n",
+					 rc);
 			else
-				dev_dbg(device, "loading %s failed for no such file or directory.\n",
-					 path);
+				dev_dbg(device, "loading failed for no such file or directory.\n");
 			continue;
 		}
 		size = rc;
@@ -562,8 +561,7 @@
 				continue;
 			}
 		} else {
-			dev_dbg(device, "direct-loading %s\n",
-				fw_priv->fw_name);
+            dev_dbg(device, "direct-loading\n");
 			if (!fw_priv->data)
 				fw_priv->data = buffer;
 			fw_priv->size = size;
@@ -738,7 +736,7 @@
 	}
 
 	if (fw_get_builtin_firmware(firmware, name, dbuf, size)) {
-		dev_dbg(device, "using built-in %s\n", name);
+		dev_dbg(device, "using built-in\n");
 		return 0; /* assigned */
 	}
 
@@ -828,8 +826,8 @@
 	if (ret) {
 		if (!(opt_flags & FW_OPT_NO_WARN))
 			dev_warn(device,
-				 "Direct firmware load for %s failed with error %d\n",
-				 name, ret);
+				 "Direct firmware load failed with error %d\n",
+				 ret);
 		if (nondirect)
 			ret = firmware_fallback_sysfs(fw, name, device,
 						      opt_flags, ret);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2022-05-12 17:55:12.377549557 -0500
@@ -419,7 +419,7 @@
 
 			err = amdgpu_ucode_validate(adev->pm.fw);
 			if (err) {
-				DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+				DRM_ERROR("Failed to load firmware");
 				release_firmware(adev->pm.fw);
 				adev->pm.fw = NULL;
 				return err;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c	2022-05-12 18:00:49.027791216 -0500
@@ -1978,15 +1978,13 @@
 	err = request_firmware(&adev->firmware.gpu_info_fw, fw_name, adev->dev);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to load gpu_info firmware \"%s\"\n",
-			fw_name);
+			"Failed to load gpu_info firmware\n");
 		goto out;
 	}
 	err = amdgpu_ucode_validate(adev->firmware.gpu_info_fw);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to validate gpu_info firmware \"%s\"\n",
-			fw_name);
+			"Failed to validate gpu_info firmware\n");
 		goto out;
 	}
 
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2022-05-12 18:02:08.384418664 -0500
@@ -216,15 +216,13 @@
 
 	r = request_firmware(&adev->uvd.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->uvd.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_uvd: Can't validate firmware\n");
 		release_firmware(adev->uvd.fw);
 		adev->uvd.fw = NULL;
 		return r;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2022-05-12 18:04:20.985348719 -0500
@@ -160,15 +160,13 @@
 
 	r = request_firmware(&adev->vce.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vce: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->vce.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vce: Can't validate firmware\n");
 		release_firmware(adev->vce.fw);
 		adev->vce.fw = NULL;
 		return r;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c	2022-05-12 18:09:17.867041073 -0500
@@ -174,15 +174,13 @@
 
 	r = request_firmware(&adev->vcn.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->vcn.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vcn: Can't validate firmware\n");
 		release_firmware(adev->vcn.fw);
 		adev->vcn.fw = NULL;
 		return r;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2022-05-12 18:10:37.651430068 -0500
@@ -144,7 +144,7 @@
 	}
 out:
 	if (err) {
-		pr_err("cik_sdma: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_sdma: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c	2022-05-12 18:12:56.296059092 -0500
@@ -4358,8 +4358,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx10: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx10: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c	2022-05-12 18:14:37.604488081 -0500
@@ -381,7 +381,7 @@
 
 out:
 	if (err) {
-		pr_err("gfx6: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx6: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2022-05-12 18:23:32.482486029 -0500
@@ -976,7 +976,7 @@
 
 out:
 	if (err) {
-		pr_err("gfx7: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx7: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2022-05-12 18:25:03.922799575 -0500
@@ -1231,8 +1231,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx8: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx8: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c	2022-05-12 18:27:56.567378676 -0500
@@ -1413,8 +1413,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
@@ -1548,8 +1547,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.rlc_fw);
 		adev->gfx.rlc_fw = NULL;
 	}
@@ -1651,8 +1649,7 @@
 	gfx_v9_0_check_fw_write_wait(adev);
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.mec_fw);
 		adev->gfx.mec_fw = NULL;
 		release_firmware(adev->gfx.mec2_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c	2022-05-12 18:28:50.171555720 -0500
@@ -140,8 +140,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-		       "si_mc: Failed to load firmware \"%s\"\n",
-		       fw_name);
+		       "si_mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2022-05-12 18:29:48.251746244 -0500
@@ -163,7 +163,7 @@
 
 out:
 	if (err) {
-		pr_err("cik_mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2022-05-12 18:30:35.683901025 -0500
@@ -271,7 +271,7 @@
 
 out:
 	if (err) {
-		pr_err("mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c	2022-05-12 18:33:10.524815263 -0500
@@ -75,8 +75,7 @@
 		release_firmware(adev->psp.ta_fw);
 		adev->psp.ta_fw = NULL;
 		dev_info(adev->dev,
-			 "psp v10.0: Failed to load firmware \"%s\"\n",
-			 fw_name);
+			 "psp v10.0: Failed to load firmware\n");
 	} else {
 		err = amdgpu_ucode_validate(adev->psp.ta_fw);
 		if (err)
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c	2022-05-12 18:34:24.925322575 -0500
@@ -144,7 +144,7 @@
 			release_firmware(adev->psp.ta_fw);
 			adev->psp.ta_fw = NULL;
 			dev_info(adev->dev,
-				 "psp v11.0: Failed to load firmware \"%s\"\n", fw_name);
+				 "psp v11.0: Failed to load firmware\n");
 		} else {
 			err = amdgpu_ucode_validate(adev->psp.ta_fw);
 			if (err)
@@ -179,7 +179,7 @@
 			release_firmware(adev->psp.ta_fw);
 			adev->psp.ta_fw = NULL;
 			dev_info(adev->dev,
-				 "psp v11.0: Failed to load firmware \"%s\"\n", fw_name);
+				 "psp v11.0: Failed to load firmware\n");
 		} else {
 			err = amdgpu_ucode_validate(adev->psp.ta_fw);
 			if (err)
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2022-05-12 18:40:02.495301516 -0500
@@ -175,7 +175,7 @@
 
 out:
 	if (err) {
-		pr_err("sdma_v2_4: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v2_4: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2022-05-12 18:45:57.373027739 -0500
@@ -331,7 +331,7 @@
 	}
 out:
 	if (err) {
-		pr_err("sdma_v3_0: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v3_0: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c	2022-05-12 18:47:06.221337571 -0500
@@ -702,7 +702,7 @@
 
 out:
 	if (err) {
-		DRM_ERROR("sdma_v4_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v4_0: Failed to load firmware\n");
 		sdma_v4_0_destroy_inst_ctx(adev);
 	}
 	return err;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
--- linux-5.15.0a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c	2022-05-12 18:48:15.981645559 -0500
@@ -303,7 +303,7 @@
 	}
 out:
 	if (err) {
-		DRM_ERROR("sdma_v5_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v5_0: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c linux-5.15.0b/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c
--- linux-5.15.0a/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c	2022-05-12 18:54:56.035329211 -0500
@@ -7673,8 +7673,8 @@
 
 out:
 	if (err) {
-		DRM_ERROR("si_smc: Failed to load firmware. err = %d\"%s\"\n",
-			  err, fw_name);
+		DRM_ERROR("si_smc: Failed to load firmware. err = %d\n",
+			  err);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/drm_edid_load.c linux-5.15.0b/drivers/gpu/drm/drm_edid_load.c
--- linux-5.15.0a/drivers/gpu/drm/drm_edid_load.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/drm_edid_load.c	2022-05-12 19:05:28.245840772 -0500
@@ -188,15 +188,15 @@
 		pdev = platform_device_register_simple(connector_name, -1, NULL, 0);
 		if (IS_ERR(pdev)) {
 			DRM_ERROR("Failed to register EDID firmware platform device "
-				  "for connector \"%s\"\n", connector_name);
+				  "for connector\n");
 			return ERR_CAST(pdev);
 		}
 
 		err = request_firmware(&fw, name, &pdev->dev);
 		platform_device_unregister(pdev);
 		if (err) {
-			DRM_ERROR("Requesting EDID firmware \"%s\" failed (err=%d)\n",
-				  name, err);
+			DRM_ERROR("Requesting EDID firmware failed (err=%d)\n",
+				  err);
 			return ERR_PTR(err);
 		}
 
@@ -205,8 +205,8 @@
 	}
 
 	if (edid_size(fwdata, fwsize) != fwsize) {
-		DRM_ERROR("Size of EDID firmware \"%s\" is invalid "
-			  "(expected %d, got %d\n", name,
+		DRM_ERROR("Size of EDID firmware is invalid "
+			  "(expected %d, got %d\n",
 			  edid_size(fwdata, fwsize), (int)fwsize);
 		edid = ERR_PTR(-EINVAL);
 		goto out;
diff -Nru linux-5.15.0a/drivers/gpu/drm/r128/r128_cce.c linux-5.15.0b/drivers/gpu/drm/r128/r128_cce.c
--- linux-5.15.0a/drivers/gpu/drm/r128/r128_cce.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/r128/r128_cce.c	2022-05-12 19:07:11.977637062 -0500
@@ -162,14 +162,13 @@
 	rc = request_firmware(&fw, FIRMWARE_NAME, &pdev->dev);
 	platform_device_unregister(pdev);
 	if (rc) {
-		pr_err("r128_cce: Failed to load firmware \"%s\"\n",
-		       FIRMWARE_NAME);
+		pr_err("r128_cce: Failed to load firmware\n");
 		return rc;
 	}
 
 	if (fw->size != 256 * 8) {
-		pr_err("r128_cce: Bogus length %zu in firmware \"%s\"\n",
-		       fw->size, FIRMWARE_NAME);
+		pr_err("r128_cce: Bogus length %zu in firmware\n",
+		       fw->size);
 		rc = -EINVAL;
 		goto out_release;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/cik.c linux-5.15.0b/drivers/gpu/drm/radeon/cik.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/cik.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/cik.c	2022-05-12 19:17:42.053680437 -0500
@@ -2049,7 +2049,7 @@
 	default: BUG();
 	}
 
-	DRM_INFO("Loading %s Microcode\n", new_chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", new_chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
@@ -2059,16 +2059,15 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2083,15 +2082,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2106,15 +2104,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2129,15 +2126,14 @@
 		if (err)
 			goto out;
 		if (rdev->mec_fw->size != mec_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mec_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->mec_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->mec_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2167,15 +2163,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("cik_rlc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->rlc_fw->size, fw_name);
+			pr_err("cik_rlc: Bogus length %zu in firmware\n",
+			       rdev->rlc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2190,15 +2185,14 @@
 		if (err)
 			goto out;
 		if (rdev->sdma_fw->size != sdma_req_size) {
-			pr_err("cik_sdma: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->sdma_fw->size, fw_name);
+			pr_err("cik_sdma: Bogus length %zu in firmware\n",
+			       rdev->sdma_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->sdma_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2220,16 +2214,15 @@
 			}
 			if ((rdev->mc_fw->size != mc_req_size) &&
 			    (rdev->mc_fw->size != mc2_req_size)){
-				pr_err("cik_mc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->mc_fw->size, fw_name);
+				pr_err("cik_mc: Bogus length %zu in firmware\n",
+				       rdev->mc_fw->size);
 				err = -EINVAL;
 			}
 			DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
 		} else {
 			err = radeon_ucode_validate(rdev->mc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-				       fw_name);
+				pr_err("cik_fw: validation failed for firmware\n");
 				goto out;
 			} else {
 				new_fw++;
@@ -2245,21 +2238,19 @@
 			snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 			err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 			if (err) {
-				pr_err("smc: error loading firmware \"%s\"\n",
-				       fw_name);
+				pr_err("smc: error loading firmware\n");
 				release_firmware(rdev->smc_fw);
 				rdev->smc_fw = NULL;
 				err = 0;
 			} else if (rdev->smc_fw->size != smc_req_size) {
-				pr_err("cik_smc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->smc_fw->size, fw_name);
+				pr_err("cik_smc: Bogus length %zu in firmware\n",
+				       rdev->smc_fw->size);
 				err = -EINVAL;
 			}
 		} else {
 			err = radeon_ucode_validate(rdev->smc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-				       fw_name);
+				pr_err("cik_fw: validation failed for firmware\n");
 				goto out;
 			} else {
 				new_fw++;
@@ -2279,8 +2270,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("cik_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/r100.c linux-5.15.0b/drivers/gpu/drm/radeon/r100.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/r100.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/r100.c	2022-05-12 19:20:42.194000367 -0500
@@ -1057,10 +1057,10 @@
 
 	err = request_firmware(&rdev->me_fw, fw_name, rdev->dev);
 	if (err) {
-		pr_err("radeon_cp: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("radeon_cp: Failed to load firmware\n");
 	} else if (rdev->me_fw->size % 8) {
-		pr_err("radeon_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		pr_err("radeon_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 		release_firmware(rdev->me_fw);
 		rdev->me_fw = NULL;
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/r600.c linux-5.15.0b/drivers/gpu/drm/radeon/r600.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/r600.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/r600.c	2022-05-12 19:23:55.994420122 -0500
@@ -2548,15 +2548,15 @@
 		rlc_req_size = R600_RLC_UCODE_SIZE * 4;
 	}
 
-	DRM_INFO("Loading %s Microcode\n", chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
 	if (err)
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->pfp_fw->size, fw_name);
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
+		       rdev->pfp_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2566,8 +2566,8 @@
 	if (err)
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2577,8 +2577,8 @@
 	if (err)
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
-		pr_err("r600_rlc: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->rlc_fw->size, fw_name);
+		pr_err("r600_rlc: Bogus length %zu in firmware\n",
+		       rdev->rlc_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2587,13 +2587,13 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", smc_chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			pr_err("smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	}
@@ -2601,8 +2601,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("r600_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("r600_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/radeon_uvd.c linux-5.15.0b/drivers/gpu/drm/radeon/radeon_uvd.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/radeon_uvd.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/radeon_uvd.c	2022-05-12 19:29:38.331283050 -0500
@@ -140,8 +140,7 @@
 		/* Let's try to load the newer firmware first */
 		r = request_firmware(&rdev->uvd_fw, fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
-				fw_name);
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n");
 		} else {
 			struct common_firmware_header *hdr = (void *)rdev->uvd_fw->data;
 			unsigned version_major, version_minor, family_id;
@@ -177,8 +176,7 @@
 	if (!fw_name || r) {
 		r = request_firmware(&rdev->uvd_fw, legacy_fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
-				legacy_fw_name);
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n");
 			return r;
 		}
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/radeon_vce.c linux-5.15.0b/drivers/gpu/drm/radeon/radeon_vce.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/radeon_vce.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/radeon_vce.c	2022-05-12 19:30:17.987389834 -0500
@@ -86,8 +86,7 @@
 
 	r = request_firmware(&rdev->vce_fw, fw_name, rdev->dev);
 	if (r) {
-		dev_err(rdev->dev, "radeon_vce: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(rdev->dev, "radeon_vce: Can't load firmware\n");
 		return r;
 	}
 
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/si.c linux-5.15.0b/drivers/gpu/drm/radeon/si.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/si.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/si.c	2022-05-12 19:35:46.048307449 -0500
@@ -1775,7 +1775,7 @@
 	if (((RREG32(MC_SEQ_MISC0) & 0xff000000) >> 24) == 0x58)
 		si58_fw = true;
 
-	DRM_INFO("Loading %s Microcode\n", new_chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", new_chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
@@ -1785,16 +1785,15 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1809,15 +1808,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1832,15 +1830,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1855,14 +1852,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("si_rlc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_rlc: Bogus length %zu in firmware\n",
 			       rdev->rlc_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1886,16 +1883,15 @@
 		}
 		if ((rdev->mc_fw->size != mc_req_size) &&
 		    (rdev->mc_fw->size != mc2_req_size)) {
-			pr_err("si_mc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mc_fw->size, fw_name);
+			pr_err("si_mc: Bogus length %zu in firmware\n",
+			       rdev->mc_fw->size);
 			err = -EINVAL;
 		}
 		DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
 	} else {
 		err = radeon_ucode_validate(rdev->mc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1913,20 +1909,19 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("si_smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			pr_err("si_smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->smc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1944,8 +1939,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("si_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2100.c linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2100.c
--- linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2022-05-12 19:38:03.816705976 -0500
@@ -8372,8 +8372,8 @@
 
 	if (rc < 0) {
 		printk(KERN_ERR DRV_NAME ": "
-		       "%s: Firmware '%s' not available or load failed.\n",
-		       priv->net_dev->name, fw_name);
+		       "%s: Firmware not available or load failed.\n",
+		       priv->net_dev->name);
 		return rc;
 	}
 	IPW_DEBUG_INFO("firmware data %p size %zd\n", fw->fw_entry->data,
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2200.c linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2200.c
--- linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2022-05-12 19:41:09.660743486 -0500
@@ -3397,12 +3397,12 @@
 	/* ask firmware_class module to get the boot firmware off disk */
 	rc = request_firmware(raw, name, &priv->pci_dev->dev);
 	if (rc < 0) {
-		IPW_ERROR("%s request_firmware failed: Reason %d\n", name, rc);
+		IPW_ERROR("request_firmware failed: Reason %d\n", rc);
 		return rc;
 	}
 
 	if ((*raw)->size < sizeof(*fw)) {
-		IPW_ERROR("%s is too small (%zd)\n", name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small (%zd)\n", (*raw)->size);
 		return -EINVAL;
 	}
 
@@ -3410,13 +3410,12 @@
 
 	if ((*raw)->size < sizeof(*fw) + le32_to_cpu(fw->boot_size) +
 	    le32_to_cpu(fw->ucode_size) + le32_to_cpu(fw->fw_size)) {
-		IPW_ERROR("%s is too small or corrupt (%zd)\n",
-			  name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small or corrupt (%zd)\n",
+			  (*raw)->size);
 		return -EINVAL;
 	}
 
-	IPW_DEBUG_INFO("Read firmware '%s' image v%d.%d (%zd bytes)\n",
-		       name,
+	IPW_DEBUG_INFO("Read firmware image v%d.%d (%zd bytes)\n",
 		       le32_to_cpu(fw->ver) >> 16,
 		       le32_to_cpu(fw->ver) & 0xff,
 		       (*raw)->size - sizeof(*fw));
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/3945-mac.c linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/3945-mac.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2022-05-12 19:50:13.188300126 -0500
@@ -1835,19 +1835,19 @@
 		sprintf(buf, "%s%u%s", name_pre, idx, ".ucode");
 		ret = request_firmware(&ucode_raw, buf, &il->pci_dev->dev);
 		if (ret < 0) {
-			IL_ERR("%s firmware file req failed: %d\n", buf, ret);
+			IL_ERR("Firmware file req failed: %d\n", ret);
 			if (ret == -ENOENT)
 				continue;
 			else
 				goto error;
 		} else {
 			if (idx < api_max)
-				IL_ERR("Loaded firmware %s, "
+				IL_ERR("Loaded firmware, "
 				       "which is deprecated. "
-				       " Please use API v%u instead.\n", buf,
+				       " Please use API v%u instead.\n",
 				       api_max);
-			D_INFO("Got firmware '%s' file "
-			       "(%zd bytes) from disk\n", buf, ucode_raw->size);
+			D_INFO("Got firmware file "
+			       "(%zd bytes) from disk\n", ucode_raw->size);
 			break;
 		}
 	}
@@ -3692,7 +3692,7 @@
 		goto out_unset_hw_params;
 	}
 
-	IL_INFO("Detected Intel Wireless WiFi Link %s\n", il->cfg->name);
+	IL_INFO("Detected Intel Wireless WiFi Link\n");
 
 	/***********************
 	 * 7. Setup Services
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/4965-mac.c linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/4965-mac.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2022-05-12 19:52:00.660378264 -0500
@@ -4684,7 +4684,7 @@
 
 	sprintf(il->firmware_name, "%s%s%s", name_pre, tag, ".ucode");
 
-	D_INFO("attempting to load firmware '%s'\n", il->firmware_name);
+	D_INFO("attempting to load firmware\n");
 
 	return request_firmware_nowait(THIS_MODULE, 1, il->firmware_name,
 				       &il->pci_dev->dev, GFP_KERNEL, il,
@@ -4774,8 +4774,7 @@
 
 	if (!ucode_raw) {
 		if (il->fw_idx <= il->cfg->ucode_api_max)
-			IL_ERR("request for firmware file '%s' failed.\n",
-			       il->firmware_name);
+			IL_ERR("request for firmware file failed.\n");
 		goto try_again;
 	}
 
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/dvm/main.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/dvm/main.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/dvm/main.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/dvm/main.c	2022-05-12 19:55:22.028606519 -0500
@@ -1253,7 +1253,7 @@
 	 ************************/
 	hw = iwl_alloc_all();
 	if (!hw) {
-		pr_err("%s: Cannot allocate network device\n", trans->name);
+		pr_err("Cannot allocate network device\n");
 		goto out;
 	}
 
@@ -1381,8 +1381,7 @@
 	/***********************
 	 * 2. Read REV register
 	 ***********************/
-	IWL_INFO(priv, "Detected %s, REV=0x%X\n",
-		priv->trans->name, priv->trans->hw_rev);
+	IWL_INFO(priv, "Detected, REV=0x%X\n", priv->trans->hw_rev);
 
 	if (iwl_trans_start_hw(priv->trans))
 		goto out_free_hw;
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2022-05-15 03:37:15.624660826 -0500
@@ -185,27 +185,13 @@
 
 	if (drv->fw_index < cfg->ucode_api_min) {
 		IWL_ERR(drv, "no suitable firmware found!\n");
-
-		if (cfg->ucode_api_min == cfg->ucode_api_max) {
-			IWL_ERR(drv, "%s%d is required\n", cfg->fw_name_pre,
-				cfg->ucode_api_max);
-		} else {
-			IWL_ERR(drv, "minimum version required: %s%d\n",
-				cfg->fw_name_pre, cfg->ucode_api_min);
-			IWL_ERR(drv, "maximum version supported: %s%d\n",
-				cfg->fw_name_pre, cfg->ucode_api_max);
-		}
-
-		IWL_ERR(drv,
-			"check git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git\n");
 		return -ENOENT;
 	}
 
 	snprintf(drv->firmware_name, sizeof(drv->firmware_name), "%s%s.ucode",
 		 cfg->fw_name_pre, tag);
 
-	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware '%s'\n",
-			  drv->firmware_name);
+	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware\n");
 
 	return request_firmware_nowait(THIS_MODULE, 1, drv->firmware_name,
 				       drv->trans->dev,
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2022-05-12 20:04:15.885520948 -0500
@@ -1496,13 +1496,13 @@
 	 */
 	ret = request_firmware(&fw_entry, nvm_file_name, trans->dev);
 	if (ret) {
-		IWL_ERR(trans, "ERROR: %s isn't available %d\n",
-			nvm_file_name, ret);
+		IWL_ERR(trans, "ERROR: firmware isn't available %d\n",
+			ret);
 		return ret;
 	}
 
-	IWL_INFO(trans, "Loaded NVM file %s (%zu bytes)\n",
-		 nvm_file_name, fw_entry->size);
+	IWL_INFO(trans, "Loaded NVM firmware file(%zu bytes)\n",
+		 fw_entry->size);
 
 	if (fw_entry->size > MAX_NVM_FILE_LEN) {
 		IWL_ERR(trans, "NVM file too large\n");
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c	2022-05-12 20:06:24.101778555 -0500
@@ -954,8 +954,7 @@
 		goto out_free;
 	}
 
-	IWL_INFO(mvm, "Detected %s, REV=0x%X\n",
-		 mvm->trans->name, mvm->trans->hw_rev);
+	IWL_INFO(mvm, "Detected, REV=0x%X\n", mvm->trans->hw_rev);
 
 	if (iwlwifi_mod_params.nvm_file)
 		mvm->nvm_file_name = iwlwifi_mod_params.nvm_file;
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c linux-5.15.0b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2022-05-12 20:08:42.726066557 -0500
@@ -2069,9 +2069,9 @@
 	int ret = 0;
 	u16 signature;
 
-	dev_info(dev, "%s: Loading firmware %s\n", DRIVER_NAME, fw_name);
+	dev_info(dev, "%s: Loading firmware\n", DRIVER_NAME);
 	if (request_firmware(&fw, fw_name, &priv->udev->dev)) {
-		dev_warn(dev, "request_firmware(%s) failed\n", fw_name);
+		dev_warn(dev, "request_firmware failed\n");
 		ret = -EAGAIN;
 		goto exit;
 	}
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/core.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/core.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/core.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/core.c	2022-05-12 20:10:37.286310362 -0500
@@ -83,8 +83,7 @@
 			err = request_firmware(&firmware,
 					       rtlpriv->cfg->alt_fw_name,
 					       rtlpriv->io.dev);
-			pr_info("Loading alternative firmware %s\n",
-				rtlpriv->cfg->alt_fw_name);
+			pr_info("Loading alternative firmware\n");
 			if (!err)
 				goto found_alt;
 		}
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2022-05-12 20:11:35.902436758 -0500
@@ -143,7 +143,7 @@
 
 	fw_name = "rtlwifi/rtl8188efw.bin";
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2022-05-12 20:13:41.146709913 -0500
@@ -146,7 +146,7 @@
 		fw_name = "rtlwifi/rtl8192cfw.bin";
 
 	rtlpriv->max_fw_size = 0x4000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2022-05-12 20:14:55.359549610 -0500
@@ -55,7 +55,7 @@
 	}
 	/* provide name of alternative file */
 	rtlpriv->cfg->alt_fw_name = "rtlwifi/rtl8192cufw.bin";
-	pr_info("Loading firmware %s\n", fw_name);
+	pr_info("Loading firmware\n");
 	rtlpriv->max_fw_size = 0x4000;
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      fw_name, rtlpriv->io.dev,
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2022-05-12 20:16:46.224869781 -0500
@@ -154,7 +154,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	pr_info("Driver for Realtek RTL8192DE WLAN interface\n");
-	pr_info("Loading firmware file %s\n", fw_name);
+	pr_info("Loading firmware file\n");
 
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2022-05-12 20:18:03.045677104 -0500
@@ -149,7 +149,7 @@
 	fw_name = "rtlwifi/rtl8192eefw.bin";
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2022-05-12 20:19:57.294744129 -0500
@@ -69,7 +69,7 @@
 		"Firmware callback routine entered!\n");
 	complete(&rtlpriv->firmware_loading_complete);
 	if (!firmware) {
-		pr_err("Firmware %s not available\n", fw_name);
+		pr_err("Firmware not available\n");
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
@@ -185,7 +185,7 @@
 	rtlpriv->max_fw_size = RTL8190_MAX_FIRMWARE_CODE_SIZE*2 +
 			       sizeof(struct fw_hdr);
 	pr_info("Driver for Realtek RTL8192SE/RTL8191SE\n"
-		"Loading firmware %s\n", fw_name);
+		"Loading firmware\n");
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2022-05-12 20:20:52.463210665 -0500
@@ -152,7 +152,7 @@
 		fw_name = "rtlwifi/rtl8723fw_B.bin";
 
 	rtlpriv->max_fw_size = 0x6000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2022-05-12 20:21:30.627517214 -0500
@@ -156,7 +156,7 @@
 	}
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2022-05-12 20:22:48.612106805 -0500
@@ -185,7 +185,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	/*load normal firmware*/
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
@@ -196,7 +196,7 @@
 		return 1;
 	}
 	/*load wowlan firmware*/
-	pr_info("Using firmware %s\n", wowlan_fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      wowlan_fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -ur source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c
--- source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c	2022-08-14 17:01:01.000000000 -0400
+++ source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c	2022-08-14 17:17:35.033981305 -0400
@@ -763,9 +763,6 @@
 	if (!fwreq)
 		return NULL;
 
-	brcmf_info("using %s for chip %s\n",
-		   mapping_table[i].fw_base, chipname);
-
 	mp_path = brcmf_mp_global.firmware_path;
 	mp_path_len = strnlen(mp_path, BRCMF_FW_ALTPATH_LEN);
 	if (mp_path_len)
diff -ur source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c
--- source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c	2022-08-14 17:01:01.000000000 -0400
+++ source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c	2022-08-14 17:11:23.550247718 -0400
@@ -1542,7 +1542,7 @@
 	if (err)
 		return err;
 
-	brcmf_dbg(PCIE, "Download FW %s\n", devinfo->fw_name);
+	brcmf_dbg(PCIE, "Download FW\n");
 	memcpy_toio(devinfo->tcm + devinfo->ci->rambase,
 		    (void *)fw->data, fw->size);
 
diff -ur source.bak/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c source/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c
--- source.bak/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c	2022-08-14 17:09:59.527120902 -0400
@@ -377,16 +377,16 @@
 			UCODE_LOADER_API_VER);
 		status = request_firmware(&wl->fw.fw_bin[i], fw_name, device);
 		if (status) {
-			wiphy_err(wl->wiphy, "%s: fail to load firmware %s\n",
-				  KBUILD_MODNAME, fw_name);
+			wiphy_err(wl->wiphy, "%s: fail to load firmware\n",
+				  KBUILD_MODNAME);
 			return status;
 		}
 		sprintf(fw_name, "%s_hdr-%d.fw", brcms_firmwares[i],
 			UCODE_LOADER_API_VER);
 		status = request_firmware(&wl->fw.fw_hdr[i], fw_name, device);
 		if (status) {
-			wiphy_err(wl->wiphy, "%s: fail to load firmware %s\n",
-				  KBUILD_MODNAME, fw_name);
+			wiphy_err(wl->wiphy, "%s: fail to load firmware\n",
+				  KBUILD_MODNAME);
 			return status;
 		}
 		wl->fw.hdr_num_entries[i] =
