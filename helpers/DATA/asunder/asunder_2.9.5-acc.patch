diff -ruN a/src/callbacks.c b/src/callbacks.c
--- a/src/callbacks.c	2019-08-29 00:18:58.000000000 -0500
+++ b/src/callbacks.c	2021-06-27 15:52:48.030388633 -0500
@@ -734,32 +734,6 @@
 }
 
 void
-on_rip_fdkaac_toggled                     (GtkToggleButton *togglebutton,
-                                        gpointer         user_data)
-{
-    if (gtk_toggle_button_get_active(togglebutton) && !program_exists("fdkaac"))
-    {
-        GtkWidget * dialog;
-        
-        dialog = gtk_message_dialog_new(GTK_WINDOW(win_main), 
-                                        GTK_DIALOG_DESTROY_WITH_PARENT, GTK_MESSAGE_ERROR, GTK_BUTTONS_OK, 
-                                        _("%s was not found in your path. Asunder requires it to create %s files. "
-                                        "All %s functionality is disabled."),
-                                        "'fdkaac'", "AAC", "AAC");
-        gtk_dialog_run(GTK_DIALOG(dialog));
-        gtk_widget_destroy(dialog);
-
-        global_prefs->rip_fdkaac = 0;
-        gtk_toggle_button_set_active(togglebutton, global_prefs->rip_fdkaac);
-    }
-    
-    if (!gtk_toggle_button_get_active(togglebutton))
-        disable_fdkaac_widgets();
-    else
-        enable_fdkaac_widgets();
-}
-
-void
 on_rip_flac_toggled                    (GtkToggleButton *togglebutton,
                                         gpointer         user_data)
 {
diff -ruN a/src/callbacks.h b/src/callbacks.h
--- a/src/callbacks.h	2019-08-29 00:18:58.000000000 -0500
+++ b/src/callbacks.h	2021-06-27 15:54:41.446511848 -0500
@@ -169,10 +169,6 @@
                                         gpointer         user_data);
 
 void
-on_rip_fdkaac_toggled                     (GtkToggleButton *togglebutton,
-                                        gpointer         user_data);
-                                        
-void
 on_rip_wavpack_toggled                 (GtkToggleButton *togglebutton,
                                         gpointer         user_data);
 void
diff -ruN a/src/interface.c b/src/interface.c
--- a/src/interface.c	2019-10-21 07:09:34.000000000 -0500
+++ b/src/interface.c	2021-06-27 16:00:02.926827702 -0500
@@ -714,57 +714,6 @@
                                         NULL);
     /* END OGG */
 
-    /* FDK-AAC  */
-    frame3X = gtk_frame_new (NULL);
-    gtk_frame_set_shadow_type(GTK_FRAME(frame3X), GTK_SHADOW_IN);
-    gtk_widget_show (frame3X);
-    gtk_box_pack_start (GTK_BOX (vbox), frame3X, FALSE, FALSE, 0);
-
-    alignment8X = gtk_alignment_new (0.5, 0.5, 1, 1);
-    gtk_widget_show (alignment8X);
-    gtk_container_add (GTK_CONTAINER (frame3X), alignment8X);
-    gtk_alignment_set_padding (GTK_ALIGNMENT (alignment8X), 2, 2, 12, 2);
-    
-    vbox2X = gtk_vbox_new (FALSE, 0);
-    gtk_widget_show (vbox2X);
-    gtk_container_add (GTK_CONTAINER (alignment8X), vbox2X);
-
-    hbox9X = gtk_hbox_new (FALSE, 0);
-    gtk_widget_show (hbox9X);
-    gtk_box_pack_start (GTK_BOX (vbox2X), hbox9X, TRUE, TRUE, 0);    
-
-    label = gtk_label_new (_("Bitrate"));
-    gtk_widget_show (label);
-    gtk_box_pack_start (GTK_BOX (hbox9X), label, FALSE, FALSE, 0);
-    GLADE_HOOKUP_OBJECT (prefs, label, "fdkaac_bitrate_lbl");
-    
-    fdkaac_bitrate = gtk_hscale_new (GTK_ADJUSTMENT (gtk_adjustment_new (0, 0, 14, 1, 1, 1)));
-    gtk_widget_show (fdkaac_bitrate);
-    gtk_box_pack_start (GTK_BOX (hbox9X), fdkaac_bitrate, TRUE, TRUE, 5);
-    gtk_scale_set_draw_value (GTK_SCALE (fdkaac_bitrate), FALSE);
-    gtk_scale_set_digits (GTK_SCALE (fdkaac_bitrate), 0);
-    g_signal_connect ((gpointer) fdkaac_bitrate, "value_changed",
-                                        G_CALLBACK (on_fdkaac_bitrate_value_changed),
-                                        NULL);
-    
-    tooltips = gtk_tooltips_new ();
-    gtk_tooltips_set_tip (tooltips, fdkaac_bitrate, _("Higher bitrate is better quality but also bigger file. Most people use 192Kbps."), NULL);
-    
-    char kbps_textX[10];
-    snprintf(kbps_textX, 10, _("%dKbps"), 32);
-    label = gtk_label_new (kbps_textX);
-    gtk_widget_show (label);
-    gtk_box_pack_start (GTK_BOX (hbox9X), label, FALSE, FALSE, 0);
-    GLADE_HOOKUP_OBJECT (prefs, label, "fdkaac_bitrate_lbl_2");
-    
-    rip_fdkaac = gtk_check_button_new_with_mnemonic (_("AAC (lossy compression)"));
-    gtk_widget_show (rip_fdkaac);
-    gtk_frame_set_label_widget (GTK_FRAME (frame3X), rip_fdkaac);
-    g_signal_connect ((gpointer) rip_fdkaac, "toggled",
-                                        G_CALLBACK (on_rip_fdkaac_toggled),
-                                        NULL);
-    /* END FDK-AAC */
-    
     /* FLAC */
     frame5 = gtk_frame_new (NULL);
     gtk_frame_set_shadow_type(GTK_FRAME(frame5), GTK_SHADOW_IN);
@@ -1059,15 +1008,6 @@
     GLADE_HOOKUP_OBJECT (prefs, rip_monkey, "rip_monkey");
     /* END MONKEY */
     
-    //~ expander = gtk_expander_new(_("Proprietary encoders"));
-    //~ gtk_widget_show (expander);
-    //~ gtk_box_pack_start (GTK_BOX (vbox), expander, FALSE, FALSE, 0);
-    //~ GLADE_HOOKUP_OBJECT (prefs, expander, "proprietary_formats_expander");
-    
-    //~ hiddenbox = gtk_vbox_new (FALSE, 0);
-    //~ gtk_widget_show (hiddenbox);
-    //~ gtk_container_add (GTK_CONTAINER (expander), hiddenbox);
-    
     label = gtk_label_new (_("Encode"));
     gtk_widget_show (label);
     gtk_notebook_set_tab_label (GTK_NOTEBOOK (notebook1), gtk_notebook_get_nth_page (GTK_NOTEBOOK (notebook1), 2), label);
@@ -1420,20 +1360,6 @@
     gtk_widget_set_sensitive(lookup_widget(win_prefs, "bitrate_lbl_2"), TRUE);
 }
 
-void disable_fdkaac_widgets(void)
-{
-    gtk_widget_set_sensitive(lookup_widget(win_prefs, "fdkaac_bitrate_lbl"), FALSE);
-    gtk_widget_set_sensitive(lookup_widget(win_prefs, "fdkaac_bitrate"), FALSE);
-    gtk_widget_set_sensitive(lookup_widget(win_prefs, "fdkaac_bitrate_lbl_2"), FALSE);
-}
-
-void enable_fdkaac_widgets(void)
-{
-    gtk_widget_set_sensitive(lookup_widget(win_prefs, "fdkaac_bitrate_lbl"), TRUE);
-    gtk_widget_set_sensitive(lookup_widget(win_prefs, "fdkaac_bitrate"), TRUE);
-    gtk_widget_set_sensitive(lookup_widget(win_prefs, "fdkaac_bitrate_lbl_2"), TRUE);
-}
-
 void disable_ogg_widgets(void)
 {
     gtk_widget_set_sensitive(lookup_widget(win_prefs, "ogg_lbl"), FALSE);
@@ -1921,8 +1847,7 @@
 static const char* 
 GBLcomments = 
 N_("An application to save tracks from an Audio CD \n"
-"as WAV, MP3, OGG, FLAC, Wavpack, Opus, Musepack, Monkey's Audio, and/or "
-"AAC files.");
+"as WAV, MP3, OGG, FLAC, Wavpack, Opus, Musepack, Monkey's Audio files.");
 
 static const char* 
 GBLcopyright = 
diff -ruN a/src/interface.h b/src/interface.h
--- a/src/interface.h	2019-08-29 00:18:58.000000000 -0500
+++ b/src/interface.h	2021-06-27 16:00:37.894859872 -0500
@@ -19,8 +19,6 @@
 void enable_monkey_widgets(void);
 void disable_musepack_widgets(void);
 void enable_musepack_widgets(void);
-void disable_fdkaac_widgets(void);
-void enable_fdkaac_widgets(void);
 void show_aboutbox (void);
 void show_completed_dialog(int numOk, int numFailed);
 void toggle_allow_tracknum(void);
diff -ruN a/src/prefs.c b/src/prefs.c
--- a/src/prefs.c	2019-08-29 00:18:58.000000000 -0500
+++ b/src/prefs.c	2021-06-27 16:07:27.299217038 -0500
@@ -127,8 +127,6 @@
     p->wavpack_bitrate = 3;
     p->rip_monkey = 0;
     p->monkey_compression = 2;
-    p->rip_aac = 0;
-    p->aac_quality = 60;
     p->rip_musepack = 0;
     p->musepack_bitrate = 2;
     p->rip_opus = 0;
@@ -203,8 +201,6 @@
     gtk_range_set_value(GTK_RANGE(lookup_widget(win_prefs, "wavpack_bitrate_slider")), p->wavpack_bitrate);
     gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_monkey")), p->rip_monkey);
     gtk_range_set_value(GTK_RANGE(lookup_widget(win_prefs, "monkey_compression_slider")), p->monkey_compression);
-    gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_fdkaac")), p->rip_fdkaac);
-    gtk_range_set_value(GTK_RANGE(lookup_widget(win_prefs, "fdkaac_bitrate")), p->fdkaac_bitrate);
     gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_musepack")), p->rip_musepack);
     gtk_range_set_value(GTK_RANGE(lookup_widget(win_prefs, "musepack_bitrate_slider")), p->musepack_bitrate);
     gtk_toggle_button_set_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_opus")), p->rip_opus);
@@ -242,8 +238,6 @@
         enable_wavpack_widgets(); /* need this to potentially disable hybrid widgets */
     if( !(p->rip_monkey) )
         disable_monkey_widgets();
-    if( !(p->rip_fdkaac) )
-        disable_fdkaac_widgets();
     if( !(p->rip_musepack) )
         disable_musepack_widgets();
     if (!(p->rip_opus))
@@ -304,8 +298,6 @@
     p->wavpack_bitrate = (int)gtk_range_get_value(GTK_RANGE(lookup_widget(win_prefs, "wavpack_bitrate_slider")));
     p->rip_monkey = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_monkey")));
     p->monkey_compression = (int)gtk_range_get_value(GTK_RANGE(lookup_widget(win_prefs, "monkey_compression_slider")));
-    p->rip_fdkaac = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_fdkaac")));
-    p->fdkaac_bitrate = (int)gtk_range_get_value(GTK_RANGE(lookup_widget(win_prefs, "fdkaac_bitrate")));
     p->rip_musepack = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_musepack")));
     p->musepack_bitrate = (int)gtk_range_get_value(GTK_RANGE(lookup_widget(win_prefs, "musepack_bitrate_slider")));
     p->rip_opus = gtk_toggle_button_get_active(GTK_TOGGLE_BUTTON(lookup_widget(win_prefs, "rip_opus")));
@@ -462,8 +454,6 @@
         fprintf(config, "%d\n", p->cddb_port_number);
         fprintf(config, "%d\n", p->rip_monkey);
         fprintf(config, "%d\n", p->monkey_compression);
-        fprintf(config, "%s\n", "unused"); /* used to be p->rip_aac */
-        fprintf(config, "%s\n", "unused"); /* used to be p->aac_quality */
         fprintf(config, "%d\n", p->rip_musepack);
         fprintf(config, "%d\n", p->musepack_bitrate);
         fprintf(config, "%d\n", p->more_formats_expanded);
@@ -683,13 +673,7 @@
         p->track_num_width = read_line_num(fd);
         if (p->track_num_width < 1 || p->track_num_width > 4)
             p->track_num_width = 2;
-        
-        // this one can be 0
-        p->rip_fdkaac = read_line_num(fd);
-        
-        // this one can be 0
-        p->fdkaac_bitrate = read_line_num(fd);
-        
+
         aCharPtr = read_line(fd);
         if (aCharPtr != NULL)
         {
diff -ruN a/src/prefs.h b/src/prefs.h
--- a/src/prefs.h	2019-08-29 00:18:58.000000000 -0500
+++ b/src/prefs.h	2021-06-27 16:20:10.544156626 -0500
@@ -34,8 +34,6 @@
     int cddb_port_number;
     int rip_monkey;
     int monkey_compression;
-    int rip_aac; /* no longer used */
-    int aac_quality; /* no longer used */
     int rip_musepack;
     int musepack_bitrate;
     int more_formats_expanded;
diff -ruN a/src/threads.c b/src/threads.c
--- a/src/threads.c	2019-08-29 00:18:58.000000000 -0500
+++ b/src/threads.c	2021-06-27 16:30:39.049983041 -0500
@@ -41,7 +41,6 @@
 static FILE * playlist_wavpack = NULL;
 static FILE * playlist_monkey = NULL;
 static FILE * playlist_musepack = NULL;
-static FILE * playlist_aac = NULL;
 
 /* ripping or encoding, so that can know not to clear the tracklist on eject */
 bool working;
@@ -63,7 +62,6 @@
 static double wavpack_percent;
 static double monkey_percent;
 static double musepack_percent;
-static double aac_percent;
 static int rip_tracks_completed;
 static int encode_tracks_completed;
 
@@ -92,13 +90,11 @@
         kill(pid, SIGKILL);
     if ((pid = musepack_pid)   != 0)
         kill(pid, SIGKILL);
-    if ((pid = fdkaac_pid)     != 0)
-        kill(pid, SIGKILL);
     
     /* wait until all the worker threads are done */
     while (cdparanoia_pid != 0 || lame_pid != 0 || oggenc_pid != 0 || 
            opusenc_pid != 0 || flac_pid != 0 || wavpack_pid != 0 || monkey_pid != 0 ||
-           musepack_pid != 0 || fdkaac_pid != 0)
+           musepack_pid != 0)
     {
         debugLog("w1");
         usleep(100000);
@@ -120,8 +116,8 @@
     gdk_flush();
     working = false;
     
-    show_completed_dialog(numCdparanoiaOk + numLameOk + numOggOk + numOpusOk + numFlacOk + numWavpackOk + numMonkeyOk + numMusepackOk + numAacOk,
-                          numCdparanoiaFailed + numLameFailed + numOggFailed + numOpusFailed + numFlacFailed + numWavpackFailed + numMonkeyFailed + numMusepackFailed + numAacFailed);
+    show_completed_dialog(numCdparanoiaOk + numLameOk + numOggOk + numOpusOk + numFlacOk + numWavpackOk + numMonkeyOk + numMusepackOk,
+                          numCdparanoiaFailed + numLameFailed + numOggFailed + numOpusFailed + numFlacFailed + numWavpackFailed + numMonkeyFailed + numMusepackFailed);
 }
 
 // spawn needed threads and begin ripping
@@ -146,7 +142,6 @@
     wavpack_percent = 0.0;
     monkey_percent = 0.0;
     musepack_percent = 0.0;
-    aac_percent = 0.0;
     rip_tracks_completed = 0;
     encode_tracks_completed = 0;
     
@@ -178,7 +173,7 @@
     // make sure there's at least one format to rip to
     if (!global_prefs->rip_wav && !global_prefs->rip_mp3 && !global_prefs->rip_ogg && !global_prefs->rip_opus &&
         !global_prefs->rip_flac && !global_prefs->rip_wavpack && !global_prefs->rip_monkey &&
-        !global_prefs->rip_musepack && !global_prefs->rip_fdkaac)
+        !global_prefs->rip_musepack)
     {
         GtkWidget * dialog;
         dialog = gtk_message_dialog_new(GTK_WINDOW(win_main), 
@@ -327,14 +322,6 @@
             
             free(filename);
         }
-        if (global_prefs->rip_fdkaac)
-        {
-            char * filename = make_filename(prefs_get_music_dir(global_prefs), albumdir, playlist, "m4a.m3u");
-            
-            make_playlist(filename, &playlist_aac);
-            
-            free(filename);
-        }
     }
     
     free(albumdir);
@@ -353,7 +340,6 @@
     numWavpackFailed = 0;
     numMonkeyFailed = 0;
     numMusepackFailed = 0;
-    numAacFailed = 0;
     
     numCdparanoiaOk = 0;
     numLameOk = 0;
@@ -363,7 +349,6 @@
     numWavpackOk = 0;
     numMonkeyOk = 0;
     numMusepackOk = 0;
-    numAacOk = 0;
     
     ripper = g_thread_create(rip, NULL, TRUE, NULL);
     encoder = g_thread_create(encode, NULL, TRUE, NULL);
@@ -554,9 +539,6 @@
     if (playlist_musepack) 
         fclose(playlist_musepack);
     playlist_musepack = NULL;
-    if (playlist_aac) 
-        fclose(playlist_aac);
-    playlist_aac = NULL;
 }
 
 // the thread that handles encoding WAV files to all other formats
@@ -1105,65 +1087,6 @@
                 }
                 free(musepackfilename);
             }
-            if (global_prefs->rip_fdkaac)
-            {
-                if (aborted)
-                {
-                    free(albumdir);
-                    free(musicfilename);
-                    free(wavfilename);
-                    free(trackartist_trimmed);
-                    free(tracktitle_trimmed);
-
-                    free(trackartist);
-                    free(tracktitle);
-                    free(tracktime);
-
-                    free(album_artist);
-                    free(album_title);
-                    free(album_genre);
-                    free(album_year);
-                    free(album_artist_trimmed);
-                    free(album_title_trimmed);
-                    free(album_genre_trimmed);
-
-                    close_playlists();
-                    return NULL;
-                }
-				
-                char * aacfilename = make_filename(prefs_get_music_dir(global_prefs), albumdir, musicfilename, "m4a");
-                snprintf(logStr, 1024, "Encoding track %d to \"%s\"\n", tracknum, aacfilename);
-                debugLog(logStr);
-                
-                rc = stat(aacfilename, &statStruct);
-                if(rc == 0)
-                {
-                    gdk_threads_enter();
-                        if(confirmOverwrite(aacfilename))
-                            doEncode = true;
-                        else
-                            doEncode = false;
-                    gdk_threads_leave();
-                }
-                else
-                    doEncode = true;
-                
-                if(doEncode)
-                {
-                    fdkaac(tracknum, trackartist, album_title, tracktitle, album_genre, album_year,
-                           wavfilename, aacfilename,
-                           global_prefs->fdkaac_bitrate,
-                           &aac_percent);
-                }
-                
-                if (playlist_aac)
-                {
-                    fprintf(playlist_aac, "#EXTINF:%d,%s - %s\n", (min*60)+sec, trackartist, tracktitle);
-                    fprintf(playlist_aac, "%s\n", basename(aacfilename));
-                    fflush(playlist_aac);
-                }
-                free(aacfilename);
-            }
             if (!global_prefs->rip_wav)
             {
                 snprintf(logStr, 1024, "Removing track %d WAV file\n", tracknum);
@@ -1196,7 +1119,6 @@
             wavpack_percent = 0.0;
             monkey_percent = 0.0;
             musepack_percent = 0.0;
-            aac_percent = 0.0;
             encode_tracks_completed++;
         }
 
@@ -1241,7 +1163,7 @@
     /* wait until all the worker threads are done */
     while (cdparanoia_pid != 0 || lame_pid != 0 || oggenc_pid != 0 || 
            opusenc_pid != 0 || flac_pid != 0 || wavpack_pid != 0 || monkey_pid != 0 ||
-           musepack_pid != 0 || fdkaac_pid != 0)
+           musepack_pid != 0)
     {
         debugLog("w2");
         usleep(100000);
@@ -1260,8 +1182,8 @@
         eject_disc(global_prefs->cdrom);
     }
 
-        show_completed_dialog(numCdparanoiaOk + numLameOk + numOggOk + numOpusOk + numFlacOk + numWavpackOk + numMonkeyOk + numMusepackOk + numAacOk,
-                              numCdparanoiaFailed + numLameFailed + numOggFailed + numOpusFailed + numFlacFailed + numWavpackFailed + numMonkeyFailed + numMusepackFailed + numAacFailed);
+        show_completed_dialog(numCdparanoiaOk + numLameOk + numOggOk + numOpusOk + numFlacOk + numWavpackOk + numMonkeyOk + numMusepackOk,
+                              numCdparanoiaFailed + numLameFailed + numOggFailed + numOpusFailed + numFlacFailed + numWavpackFailed + numMonkeyFailed + numMusepackFailed);
     gdk_threads_leave();
     
     return NULL;
@@ -1286,8 +1208,6 @@
         parts++;
     if(global_prefs->rip_musepack) 
         parts++;
-    if(global_prefs->rip_fdkaac)
-        parts++;
     
     gdk_threads_enter();
         GtkProgressBar * progress_total = GTK_PROGRESS_BAR(lookup_widget(win_ripping, "progress_total"));
@@ -1331,7 +1251,7 @@
         {
             pencode = ((double)encode_tracks_completed/(double)tracks_to_rip) + 
                        ((mp3_percent+ogg_percent+flac_percent+wavpack_percent+monkey_percent
-                         +opus_percent+musepack_percent+aac_percent) /
+                         +opus_percent+musepack_percent) /
                         (parts-1) / tracks_to_rip);
             snprintf(sencode, 13, "%d%% (%d/%d)", (int)(pencode*100),
                      (encode_tracks_completed < tracks_to_rip)
@@ -1370,7 +1290,7 @@
                      "monkey %.2lf%% musepack %.2lf%% aac %.2lf%%; prip %.2lf%% pencode %.2lf%%\n",
                      rip_tracks_completed, rip_percent*100, encode_tracks_completed,
                      mp3_percent*100, ogg_percent*100, opus_percent*100, flac_percent*100, wavpack_percent*100,
-                     monkey_percent*100,musepack_percent*100,aac_percent*100,
+                     monkey_percent*100,musepack_percent*100,
                      prip*100, pencode*100);
             debugLog(logStr);
         }
diff -ruN a/src/wrappers.c b/src/wrappers.c
--- a/src/wrappers.c	2019-10-21 07:05:37.000000000 -0500
+++ b/src/wrappers.c	2021-06-27 16:35:20.690511295 -0500
@@ -37,7 +37,6 @@
 pid_t wavpack_pid = 0;
 pid_t monkey_pid = 0;
 pid_t musepack_pid = 0;
-pid_t fdkaac_pid = 0;
 
 int numCdparanoiaFailed;
 int numLameFailed;
@@ -47,7 +46,6 @@
 int numWavpackFailed;
 int numMonkeyFailed;
 int numMusepackFailed;
-int numAacFailed;
 
 int numCdparanoiaOk;
 int numLameOk;
@@ -57,7 +55,6 @@
 int numWavpackOk;
 int numMonkeyOk;
 int numMusepackOk;
-int numAacOk;
 
 int numchildren = 0;
 static bool waitBeforeSigchld;
@@ -144,11 +141,6 @@
             musepack_pid = 0;
             numMusepackFailed++;
         }
-        else if (pid == fdkaac_pid)
-        {
-            fdkaac_pid = 0;
-            numAacFailed++;
-        }
     }
     else
     {
@@ -193,11 +185,6 @@
             musepack_pid = 0;
             numMusepackOk++;
         }
-        else if (pid == fdkaac_pid)
-        {
-            fdkaac_pid = 0;
-            numAacOk++;
-        }
     }
 }
 
@@ -1345,126 +1332,3 @@
     *progress = 1;
 }
 
-void fdkaac(int tracknum,
-         const char * artist,
-         const char * album,
-         const char * title,
-         const char * genre,
-         const char * year,
-         const char* wavfilename,
-         const char* aacfilename,
-         int bitrate,
-         double* progress)
-{
-    const char* args[21];
-    char bitrate_text[4];
-    int fd;
-    int pos;
-
-    pos = 0;
-    args[pos++] = "fdkaac";
-
-    /* fdkaac has a VBR option but it's unsupported */
-    args[pos++] = "-m";
-    args[pos++] = "0";
-    args[pos++] = "-b";
-    snprintf(bitrate_text, 4, "%d", int_to_bitrate(bitrate, 0));
-    args[pos++] = bitrate_text;
-
-
-    char * track = NULL;
-    if (tracknum > 0 && asprintf(&track, "%d", tracknum) > 0)
-    {
-        args[pos++] = "--track";
-        args[pos++] = track;
-    }
-
-    if ((title != NULL) && (strlen(title) > 0))
-    {
-        args[pos++] = "--title";
-        args[pos++] = title;
-    }
-
-    if ((artist != NULL) && (strlen(artist) > 0))
-    {
-        args[pos++] = "--artist";
-        args[pos++] = artist;
-    }
-
-    if ((album != NULL) && (strlen(album) > 0))
-    {
-        args[pos++] = "--album";
-        args[pos++] = album;
-    }
-
-    if ((genre != NULL) && (strlen(genre) > 0))
-    {
-        args[pos++] = "--genre";
-        args[pos++] = genre;
-    }
-
-    if ((year != NULL) && (strlen(year) > 0))
-    {
-        args[pos++] = "--date";
-        args[pos++] = year;
-    }
-
-    args[pos++] = "-o";
-    args[pos++] = aacfilename;
-
-    args[pos++] = wavfilename;
-
-    args[pos++] = NULL;
-
-    fd = exec_with_output(args, STDERR_FILENO, &fdkaac_pid, NULL);
-    free(track);
-
-    int size;
-    char buf[256];
-
-    do
-    {
-        pos = -1;
-        bool interrupted;
-        do
-        {
-            interrupted = FALSE;
-
-            pos++;
-            size = read(fd, &buf[pos], 1);
-
-            if (size == -1 && errno == EINTR)
-            /* signal interrupted read(), try again */
-            {
-                pos--;
-                debugLog("fdkaac() interrupted");
-                interrupted = TRUE;
-            }
-
-        } while ((size > 0 && pos < 255 && buf[pos] != '\r' && buf[pos] != '\n') || interrupted);
-
-        buf[pos] = '\0';
-
-        /* We get lines like this:
-            [28%] 00:14.037/00:49.771 (22x), ETA 00:01.599
-        */
-        if ((pos >= 4) && (buf[0] == '[')) {
-            int percent = 0;
-            if (sscanf(buf, "[%d%%]", &percent) == 1)
-            {
-                *progress = (double) percent / 100.0;
-            }
-        }
-    } while (size > 0);
-
-    close(fd);
-
-    /* don't go on until the signal for the previous call is handled */
-    while (fdkaac_pid != 0)
-    {
-        debugLog("w12\n");
-        usleep(100000);
-    }
-
-    *progress = 1;
-}
diff -ruN a/src/wrappers.h b/src/wrappers.h
--- a/src/wrappers.h	2019-08-29 00:18:58.000000000 -0500
+++ b/src/wrappers.h	2021-06-27 16:36:17.366606719 -0500
@@ -9,7 +9,6 @@
 extern pid_t wavpack_pid;
 extern pid_t monkey_pid;
 extern pid_t musepack_pid;
-extern pid_t fdkaac_pid;
 
 extern int numCdparanoiaFailed;
 extern int numLameFailed;
@@ -19,7 +18,6 @@
 extern int numWavpackFailed;
 extern int numMonkeyFailed;
 extern int numMusepackFailed;
-extern int numAacFailed;
 
 extern int numCdparanoiaOk;
 extern int numLameOk;
@@ -29,7 +27,6 @@
 extern int numWavpackOk;
 extern int numMonkeyOk;
 extern int numMusepackOk;
-extern int numAacOk;
 
 // signal handler to find out when out child has exited
 void sigchld(int signum);
@@ -195,25 +192,3 @@
               const char * musepackfilename,
               int quality,
               double* progress);
-
-void aac(int tracknum,
-         const char * artist,
-         const char * album,
-         const char * title,
-         const char * genre,
-         const char * year,
-         const char* wavfilename,
-         const char* aacfilename,
-         int quality,
-         double* progress);
-
-void fdkaac(int tracknum,
-         const char * artist,
-         const char * album,
-         const char * title,
-         const char * genre,
-         const char * year,
-         const char* wavfilename,
-         const char* aacfilename,
-         int bitrate,
-         double* progress);
