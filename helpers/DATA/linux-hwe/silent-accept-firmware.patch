The Linux-Libre deblob script that is used to make the Trisquel kernel packages disables all functionality related to loading nonfree firmware blobs. Even if the user chooses to install the blob files, these would still not be loaded and the driver would not activate.
An alternative solution is to preserve the loading functionality and remove the *advertisment* to the user of the blob filenames when these fail to be loaded, as to not imply that those files are recommended in any way, so the driver would just print "failed to load firmware" or equivalent. This allows the user to use the driver if they so decide.

This method is done by a patch (silent-accept-firmware.patch) that removes all the instances where the blob filenames are printed to the user (via kernel logs), and a section on the package helper that takes care of preventing the deblob script from acting on the files modified by the patch. This is done manually, for individual drivers (usually those for very common devices). It needs to be reviewed on any new major release, checking that no new lines were added to the upstream driver in where it prints the blob filename on the log.
Printing the blob filename on success operations (that is, when the blob file is present) is acceptable. If in doubt, all instances of printing the blob filenames should be removed.

diff -ru a/arch/x86/kernel/cpu/microcode/amd.c b/arch/x86/kernel/cpu/microcode/amd.c
--- a/arch/x86/kernel/cpu/microcode/amd.c	2022-05-27 08:39:57.613122866 -0500
+++ b/arch/x86/kernel/cpu/microcode/amd.c	2022-05-27 08:33:37.896005314 -0500
@@ -902,7 +902,7 @@
 		snprintf(fw_name, sizeof(fw_name), "amd-ucode/microcode_amd_fam%.2xh.bin", c->x86);
 
 	if (request_firmware_direct(&fw, (const char *)fw_name, device)) {
-		pr_debug("failed to load file %s\n", fw_name);
+		pr_debug("failed to load file\n", fw_name);
 		goto out;
 	}
 
diff -ru a/arch/x86/kernel/cpu/microcode/intel.c b/arch/x86/kernel/cpu/microcode/intel.c
--- a/arch/x86/kernel/cpu/microcode/intel.c	2022-05-27 08:39:57.613122866 -0500
+++ b/arch/x86/kernel/cpu/microcode/intel.c	2022-05-27 08:33:37.920005642 -0500
@@ -982,7 +982,7 @@
 		c->x86, c->x86_model, c->x86_stepping);
 
 	if (request_firmware_direct(&firmware, name, device)) {
-		pr_debug("data file %s load failed\n", name);
+		pr_debug("data file load failed\n", name);
 		return UCODE_NFOUND;
 	}
 
diff -ru a/drivers/base/firmware_loader/fallback.c b/drivers/base/firmware_loader/fallback.c
--- a/drivers/base/firmware_loader/fallback.c	2022-05-27 08:39:57.613122866 -0500
+++ b/drivers/base/firmware_loader/fallback.c	2022-05-27 08:33:37.920005642 -0500
@@ -518,7 +518,7 @@
 	if (opt_flags & FW_OPT_UEVENT) {
 		fw_priv->need_uevent = true;
 		dev_set_uevent_suppress(f_dev, false);
-		dev_dbg(f_dev, "firmware: requesting %s\n", fw_priv->fw_name);
+		dev_dbg(f_dev, "firmware: requesting\n", fw_priv->fw_name);
 		kobject_uevent(&fw_sysfs->dev.kobj, KOBJ_ADD);
 	} else {
 		timeout = MAX_JIFFY_OFFSET;
@@ -557,14 +557,14 @@
 	if (opt_flags & FW_OPT_NOWAIT) {
 		timeout = usermodehelper_read_lock_wait(timeout);
 		if (!timeout) {
-			dev_dbg(device, "firmware: %s loading timed out\n",
+			dev_dbg(device, "firmware: loading timed out\n",
 				name);
 			return -EBUSY;
 		}
 	} else {
 		ret = usermodehelper_read_trylock();
 		if (WARN_ON(ret)) {
-			dev_err(device, "firmware: %s will not be loaded\n",
+			dev_err(device, "firmware: will not be loaded\n",
 				name);
 			return ret;
 		}
@@ -646,10 +646,10 @@
 		return ret;
 
 	if (!(opt_flags & FW_OPT_NO_WARN))
-		dev_warn(device, "Falling back to sysfs fallback for: %s\n",
+		dev_warn(device, "Falling back to sysfs fallback\n",
 				 name);
 	else
-		dev_dbg(device, "Falling back to sysfs fallback for: %s\n",
+		dev_dbg(device, "Falling back to sysfs fallback\n",
 				name);
 	return fw_load_from_user_helper(fw, name, device, opt_flags);
 }
diff -ru a/drivers/base/firmware_loader/main.c b/drivers/base/firmware_loader/main.c
--- a/drivers/base/firmware_loader/main.c	2022-05-27 08:39:57.617122920 -0500
+++ b/drivers/base/firmware_loader/main.c	2022-05-27 08:33:37.920005642 -0500
@@ -500,7 +500,7 @@
 				dev_warn(device, "loading %s failed with error %d\n",
 					 path, rc);
 			else
-				dev_dbg(device, "loading %s failed for no such file or directory.\n",
+				dev_dbg(device, "loading firmware failed for no such file or directory.\n",
 					 path);
 			continue;
 		}
@@ -778,8 +778,8 @@
 	if (ret) {
 		if (!(opt_flags & FW_OPT_NO_WARN))
 			dev_warn(device,
-				 "Direct firmware load for %s failed with error %d\n",
-				 name, ret);
+				 "Direct firmware load failed with error %d\n",
+				  ret);
 		ret = firmware_fallback_sysfs(fw, name, device, opt_flags, ret);
 	} else
 		ret = assign_fw(fw, device, opt_flags);
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2022-05-27 08:39:57.617122920 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2022-05-27 08:33:38.000006737 -0500
@@ -443,7 +443,7 @@
 
 			err = amdgpu_ucode_validate(adev->pm.fw);
 			if (err) {
-				DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+				DRM_ERROR("Failed to load firmware", fw_name);
 				release_firmware(adev->pm.fw);
 				adev->pm.fw = NULL;
 				return err;
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c	2022-05-27 08:33:38.724016651 -0500
@@ -1393,14 +1393,14 @@
 	err = request_firmware(&adev->firmware.gpu_info_fw, fw_name, adev->dev);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to load gpu_info firmware \"%s\"\n",
+			"Failed to load gpu_info firmware \n",
 			fw_name);
 		goto out;
 	}
 	err = amdgpu_ucode_validate(adev->firmware.gpu_info_fw);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to validate gpu_info firmware \"%s\"\n",
+			"Failed to validate gpu_info firmware \n",
 			fw_name);
 		goto out;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2022-05-27 08:39:57.617122920 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2022-05-27 08:33:38.000006737 -0500
@@ -187,7 +187,7 @@
 
 	r = request_firmware(&adev->uvd.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware \"%s\"\n",
+		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware\n",
 			fw_name);
 		return r;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2022-05-27 08:39:57.617122920 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2022-05-27 08:33:38.016006956 -0500
@@ -153,7 +153,7 @@
 
 	r = request_firmware(&adev->vce.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't load firmware \"%s\"\n",
+		dev_err(adev->dev, "amdgpu_vce: Can't load firmware\n",
 			fw_name);
 		return r;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c	2022-05-27 08:33:38.724016651 -0500
@@ -86,7 +86,7 @@
 
 	r = request_firmware(&adev->vcn.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware \"%s\"\n",
+		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware \n",
 			fw_name);
 		return r;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
--- a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2022-05-27 08:33:38.020007011 -0500
@@ -144,7 +144,7 @@
 	}
 out:
 	if (err) {
-		pr_err("cik_sdma: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_sdma: Failed to load firmware\n", fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c	2022-05-27 08:33:38.040007285 -0500
@@ -381,7 +381,7 @@
 
 out:
 	if (err) {
-		pr_err("gfx6: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx6: Failed to load firmware\n", fw_name);
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2022-05-27 08:33:38.040007285 -0500
@@ -976,7 +976,7 @@
 
 out:
 	if (err) {
-		pr_err("gfx7: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx7: Failed to load firmware\n", fw_name);
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2022-05-27 08:33:38.068007669 -0500
@@ -1221,7 +1221,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx8: Failed to load firmware \"%s\"\n",
+			"gfx8: Failed to load firmware\n",
 			fw_name);
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c	2022-05-27 08:33:38.728016704 -0500
@@ -884,7 +884,7 @@
 	gfx_v9_0_check_fw_write_wait(adev);
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
+			"gfx9: Failed to load firmware \n",
 			fw_name);
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c	2022-05-27 08:33:38.808017798 -0500
@@ -151,7 +151,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-		       "si_mc: Failed to load firmware \"%s\"\n",
+		       "si_mc: Failed to load firmware \n",
 		       fw_name);
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2022-05-27 08:33:38.100008107 -0500
@@ -163,7 +163,7 @@
 
 out:
 	if (err) {
-		pr_err("cik_mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_mc: Failed to load firmware\n", fw_name);
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2022-05-27 08:33:38.100008107 -0500
@@ -280,7 +280,7 @@
 
 out:
 	if (err) {
-		pr_err("mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("mc: Failed to load firmware\n", fw_name);
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c
--- a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c	2022-05-27 08:33:38.808017798 -0500
@@ -83,7 +83,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"psp v10.0: Failed to load firmware \"%s\"\n",
+			"psp v10.0: Failed to load firmware \n",
 			fw_name);
 		release_firmware(adev->psp.asd_fw);
 		adev->psp.asd_fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/psp_v3_1.c b/drivers/gpu/drm/amd/amdgpu/psp_v3_1.c
--- a/drivers/gpu/drm/amd/amdgpu/psp_v3_1.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v3_1.c	2022-05-27 08:33:38.844018292 -0500
@@ -116,7 +116,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"psp v3.1: Failed to load firmware \"%s\"\n",
+			"psp v3.1: Failed to load firmware \n",
 			fw_name);
 		release_firmware(adev->psp.sos_fw);
 		adev->psp.sos_fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2022-05-27 08:39:57.621122973 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2022-05-27 08:33:38.148008764 -0500
@@ -175,7 +175,7 @@
 
 out:
 	if (err) {
-		pr_err("sdma_v2_4: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v2_4: Failed to load firmware\n", fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2022-05-27 08:33:38.152008818 -0500
@@ -331,7 +331,7 @@
 	}
 out:
 	if (err) {
-		pr_err("sdma_v3_0: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v3_0: Failed to load firmware\n", fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c	2022-05-27 08:33:38.844018292 -0500
@@ -335,7 +335,7 @@
 	}
 out:
 	if (err) {
-		DRM_ERROR("sdma_v4_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v4_0: Failed to load firmware \n", fw_name);
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/si_dpm.c b/drivers/gpu/drm/amd/amdgpu/si_dpm.c
--- a/drivers/gpu/drm/amd/amdgpu/si_dpm.c	2022-05-27 08:39:57.641123239 -0500
+++ b/drivers/gpu/drm/amd/amdgpu/si_dpm.c	2022-05-27 08:33:38.872018676 -0500
@@ -7676,8 +7676,8 @@
 
 out:
 	if (err) {
-		DRM_ERROR("si_smc: Failed to load firmware. err = %d\"%s\"\n",
-			  err, fw_name);
+		DRM_ERROR("si_smc: Failed to load firmware. err = %d\n",
+			  err);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/drm_edid_load.c b/drivers/gpu/drm/drm_edid_load.c
--- a/drivers/gpu/drm/drm_edid_load.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/drm_edid_load.c	2022-05-27 08:33:38.188009312 -0500
@@ -195,8 +195,8 @@
 		err = request_firmware(&fw, name, &pdev->dev);
 		platform_device_unregister(pdev);
 		if (err) {
-			DRM_ERROR("Requesting EDID firmware \"%s\" failed (err=%d)\n",
-				  name, err);
+			DRM_ERROR("Requesting EDID firmware failed (err=%d)\n",
+				  err);
 			return ERR_PTR(err);
 		}
 
diff -ru a/drivers/gpu/drm/r128/r128_cce.c b/drivers/gpu/drm/r128/r128_cce.c
--- a/drivers/gpu/drm/r128/r128_cce.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/r128/r128_cce.c	2022-05-27 08:33:38.188009312 -0500
@@ -163,13 +163,13 @@
 	rc = request_firmware(&fw, FIRMWARE_NAME, &pdev->dev);
 	platform_device_unregister(pdev);
 	if (rc) {
-		pr_err("r128_cce: Failed to load firmware \"%s\"\n",
+		pr_err("r128_cce: Failed to load firmware\n",
 		       FIRMWARE_NAME);
 		return rc;
 	}
 
 	if (fw->size != 256 * 8) {
-		pr_err("r128_cce: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("r128_cce: Bogus length %zu in firmware\n",
 		       fw->size, FIRMWARE_NAME);
 		rc = -EINVAL;
 		goto out_release;
diff -ru a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c
--- a/drivers/gpu/drm/radeon/cik.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/radeon/cik.c	2022-05-27 08:33:38.216009694 -0500
@@ -2072,7 +2072,7 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
 			       rdev->pfp_fw->size, fw_name);
 			err = -EINVAL;
 			goto out;
@@ -2080,7 +2080,7 @@
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+			pr_err("cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2096,14 +2096,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
 			       rdev->me_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+			pr_err("cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2119,14 +2119,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
 			       rdev->ce_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+			pr_err("cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2142,14 +2142,14 @@
 		if (err)
 			goto out;
 		if (rdev->mec_fw->size != mec_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
 			       rdev->mec_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->mec_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+			pr_err("cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2180,14 +2180,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("cik_rlc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("cik_rlc: Bogus length %zu in firmware\n",
 			       rdev->rlc_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+			pr_err("cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2203,14 +2203,14 @@
 		if (err)
 			goto out;
 		if (rdev->sdma_fw->size != sdma_req_size) {
-			pr_err("cik_sdma: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("cik_sdma: Bogus length %zu in firmware\n",
 			       rdev->sdma_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->sdma_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+			pr_err("cik_fw: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -2233,7 +2233,7 @@
 			}
 			if ((rdev->mc_fw->size != mc_req_size) &&
 			    (rdev->mc_fw->size != mc2_req_size)){
-				pr_err("cik_mc: Bogus length %zu in firmware \"%s\"\n",
+				pr_err("cik_mc: Bogus length %zu in firmware\n",
 				       rdev->mc_fw->size, fw_name);
 				err = -EINVAL;
 			}
@@ -2241,7 +2241,7 @@
 		} else {
 			err = radeon_ucode_validate(rdev->mc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+				pr_err("cik_fw: validation failed for firmware\n",
 				       fw_name);
 				goto out;
 			} else {
@@ -2258,20 +2258,20 @@
 			snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 			err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 			if (err) {
-				pr_err("smc: error loading firmware \"%s\"\n",
+				pr_err("smc: error loading firmware\n",
 				       fw_name);
 				release_firmware(rdev->smc_fw);
 				rdev->smc_fw = NULL;
 				err = 0;
 			} else if (rdev->smc_fw->size != smc_req_size) {
-				pr_err("cik_smc: Bogus length %zu in firmware \"%s\"\n",
+				pr_err("cik_smc: Bogus length %zu in firmware\n",
 				       rdev->smc_fw->size, fw_name);
 				err = -EINVAL;
 			}
 		} else {
 			err = radeon_ucode_validate(rdev->smc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
+				pr_err("cik_fw: validation failed for firmware\n",
 				       fw_name);
 				goto out;
 			} else {
@@ -2292,7 +2292,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("cik_cp: Failed to load firmware \"%s\"\n",
+			pr_err("cik_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru a/drivers/gpu/drm/radeon/ni.c b/drivers/gpu/drm/radeon/ni.c
--- a/drivers/gpu/drm/radeon/ni.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/radeon/ni.c	2022-05-27 08:33:38.232009913 -0500
@@ -777,7 +777,7 @@
 	if (err)
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
-		pr_err("ni_cp: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("ni_cp: Bogus length %zu in firmware\n",
 		       rdev->pfp_fw->size, fw_name);
 		err = -EINVAL;
 		goto out;
@@ -788,7 +788,7 @@
 	if (err)
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
-		pr_err("ni_cp: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("ni_cp: Bogus length %zu in firmware\n",
 		       rdev->me_fw->size, fw_name);
 		err = -EINVAL;
 	}
@@ -798,7 +798,7 @@
 	if (err)
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
-		pr_err("ni_rlc: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("ni_rlc: Bogus length %zu in firmware\n",
 		       rdev->rlc_fw->size, fw_name);
 		err = -EINVAL;
 	}
@@ -810,7 +810,7 @@
 		if (err)
 			goto out;
 		if (rdev->mc_fw->size != mc_req_size) {
-			pr_err("ni_mc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("ni_mc: Bogus length %zu in firmware\n",
 			       rdev->mc_fw->size, fw_name);
 			err = -EINVAL;
 		}
@@ -820,12 +820,12 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n", fw_name);
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("ni_mc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("ni_mc: Bogus length %zu in firmware\n",
 			       rdev->mc_fw->size, fw_name);
 			err = -EINVAL;
 		}
@@ -834,7 +834,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("ni_cp: Failed to load firmware \"%s\"\n",
+			pr_err("ni_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru a/drivers/gpu/drm/radeon/r100.c b/drivers/gpu/drm/radeon/r100.c
--- a/drivers/gpu/drm/radeon/r100.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/radeon/r100.c	2022-05-27 08:33:38.232009913 -0500
@@ -1048,9 +1048,9 @@
 
 	err = request_firmware(&rdev->me_fw, fw_name, rdev->dev);
 	if (err) {
-		pr_err("radeon_cp: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("radeon_cp: Failed to load firmware\n", fw_name);
 	} else if (rdev->me_fw->size % 8) {
-		pr_err("radeon_cp: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("radeon_cp: Bogus length %zu in firmware\n",
 		       rdev->me_fw->size, fw_name);
 		err = -EINVAL;
 		release_firmware(rdev->me_fw);
diff -ru a/drivers/gpu/drm/radeon/r600.c b/drivers/gpu/drm/radeon/r600.c
--- a/drivers/gpu/drm/radeon/r600.c	2022-05-27 08:39:57.625123026 -0500
+++ b/drivers/gpu/drm/radeon/r600.c	2022-05-27 08:33:38.288010679 -0500
@@ -2556,7 +2556,7 @@
 	if (err)
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
 		       rdev->pfp_fw->size, fw_name);
 		err = -EINVAL;
 		goto out;
@@ -2567,7 +2567,7 @@
 	if (err)
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
 		       rdev->me_fw->size, fw_name);
 		err = -EINVAL;
 	}
@@ -2577,7 +2577,7 @@
 	if (err)
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
-		pr_err("r600_rlc: Bogus length %zu in firmware \"%s\"\n",
+		pr_err("r600_rlc: Bogus length %zu in firmware\n",
 		       rdev->rlc_fw->size, fw_name);
 		err = -EINVAL;
 	}
@@ -2586,12 +2586,12 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", smc_chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n", fw_name);
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("smc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("smc: Bogus length %zu in firmware\n",
 			       rdev->smc_fw->size, fw_name);
 			err = -EINVAL;
 		}
@@ -2600,7 +2600,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("r600_cp: Failed to load firmware \"%s\"\n",
+			pr_err("r600_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru a/drivers/gpu/drm/radeon/radeon_uvd.c b/drivers/gpu/drm/radeon/radeon_uvd.c
--- a/drivers/gpu/drm/radeon/radeon_uvd.c	2022-05-27 08:39:57.629123079 -0500
+++ b/drivers/gpu/drm/radeon/radeon_uvd.c	2022-05-27 08:33:38.332011281 -0500
@@ -140,7 +140,7 @@
 		/* Let's try to load the newer firmware first */
 		r = request_firmware(&rdev->uvd_fw, fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n",
 				fw_name);
 		} else {
 			struct common_firmware_header *hdr = (void *)rdev->uvd_fw->data;
@@ -175,7 +175,7 @@
 	if (!fw_name || r) {
 		r = request_firmware(&rdev->uvd_fw, legacy_fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n",
 				legacy_fw_name);
 			return r;
 		}
diff -ru a/drivers/gpu/drm/radeon/radeon_vce.c b/drivers/gpu/drm/radeon/radeon_vce.c
--- a/drivers/gpu/drm/radeon/radeon_vce.c	2022-05-27 08:39:57.629123079 -0500
+++ b/drivers/gpu/drm/radeon/radeon_vce.c	2022-05-27 08:33:38.332011281 -0500
@@ -87,7 +87,7 @@
 
 	r = request_firmware(&rdev->vce_fw, fw_name, rdev->dev);
 	if (r) {
-		dev_err(rdev->dev, "radeon_vce: Can't load firmware \"%s\"\n",
+		dev_err(rdev->dev, "radeon_vce: Can't load firmware\n",
 			fw_name);
 		return r;
 	}
diff -ru a/drivers/gpu/drm/radeon/si.c b/drivers/gpu/drm/radeon/si.c
--- a/drivers/gpu/drm/radeon/si.c	2022-05-27 08:39:57.629123079 -0500
+++ b/drivers/gpu/drm/radeon/si.c	2022-05-27 08:33:38.348011500 -0500
@@ -1790,7 +1790,7 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_cp: Bogus length %zu in firmware\n",
 			       rdev->pfp_fw->size, fw_name);
 			err = -EINVAL;
 			goto out;
@@ -1798,7 +1798,7 @@
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1814,14 +1814,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_cp: Bogus length %zu in firmware\n",
 			       rdev->me_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1837,14 +1837,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_cp: Bogus length %zu in firmware\n",
 			       rdev->ce_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1860,14 +1860,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("si_rlc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_rlc: Bogus length %zu in firmware\n",
 			       rdev->rlc_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1891,7 +1891,7 @@
 		}
 		if ((rdev->mc_fw->size != mc_req_size) &&
 		    (rdev->mc_fw->size != mc2_req_size)) {
-			pr_err("si_mc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_mc: Bogus length %zu in firmware\n",
 			       rdev->mc_fw->size, fw_name);
 			err = -EINVAL;
 		}
@@ -1899,7 +1899,7 @@
 	} else {
 		err = radeon_ucode_validate(rdev->mc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1918,19 +1918,19 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n", fw_name);
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("si_smc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_smc: Bogus length %zu in firmware\n",
 			       rdev->smc_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->smc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1949,7 +1949,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("si_cp: Failed to load firmware \"%s\"\n",
+			pr_err("si_cp: Failed to load firmware\n",
 			       fw_name);
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
diff -ru a/drivers/net/wireless/intel/ipw2x00/ipw2100.c b/drivers/net/wireless/intel/ipw2x00/ipw2100.c
--- a/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2022-05-27 08:39:57.641123239 -0500
+++ b/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2022-05-27 08:33:38.924019386 -0500
@@ -8395,7 +8395,7 @@
 
 	if (rc < 0) {
 		printk(KERN_ERR DRV_NAME ": "
-		       "%s: Firmware '%s' not available or load failed.\n",
+		       "%s: Firmware not available or load failed.\n",
 		       priv->net_dev->name, fw_name);
 		return rc;
 	}
diff -ru a/drivers/net/wireless/intel/ipw2x00/ipw2200.c b/drivers/net/wireless/intel/ipw2x00/ipw2200.c
--- a/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2022-05-27 08:39:57.629123079 -0500
+++ b/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2022-05-27 08:33:38.356011610 -0500
@@ -3398,12 +3398,12 @@
 	/* ask firmware_class module to get the boot firmware off disk */
 	rc = request_firmware(raw, name, &priv->pci_dev->dev);
 	if (rc < 0) {
-		IPW_ERROR("%s request_firmware failed: Reason %d\n", name, rc);
+		IPW_ERROR("request_firmware failed: Reason %d\n", rc);
 		return rc;
 	}
 
 	if ((*raw)->size < sizeof(*fw)) {
-		IPW_ERROR("%s is too small (%zd)\n", name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small (%zd)\n", (*raw)->size);
 		return -EINVAL;
 	}
 
@@ -3411,13 +3411,12 @@
 
 	if ((*raw)->size < sizeof(*fw) + le32_to_cpu(fw->boot_size) +
 	    le32_to_cpu(fw->ucode_size) + le32_to_cpu(fw->fw_size)) {
-		IPW_ERROR("%s is too small or corrupt (%zd)\n",
-			  name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small or corrupt (%zd)\n",
+			  (*raw)->size);
 		return -EINVAL;
 	}
 
-	IPW_DEBUG_INFO("Read firmware '%s' image v%d.%d (%zd bytes)\n",
-		       name,
+	IPW_DEBUG_INFO("Read firmware image v%d.%d (%zd bytes)\n",
 		       le32_to_cpu(fw->ver) >> 16,
 		       le32_to_cpu(fw->ver) & 0xff,
 		       (*raw)->size - sizeof(*fw));
@@ -3550,7 +3549,7 @@
 	/* DMA the initial boot firmware into the device */
 	rc = ipw_load_firmware(priv, boot_img, le32_to_cpu(fw->boot_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load boot firmware: %d\n", rc);
+		IPW_ERROR("Unable to load boot firmware\n", rc);
 		goto error;
 	}
 
@@ -3582,7 +3581,7 @@
 	/* DMA bss firmware into the device */
 	rc = ipw_load_firmware(priv, fw_img, le32_to_cpu(fw->fw_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load firmware: %d\n", rc);
+		IPW_ERROR("Unable to load firmware\n", rc);
 		goto error;
 	}
 #ifdef CONFIG_PM
@@ -11190,7 +11189,7 @@
 		 * Also start the clocks. */
 		rc = ipw_load(priv);
 		if (rc) {
-			IPW_ERROR("Unable to load firmware: %d\n", rc);
+			IPW_ERROR("Unable to load firmware\n", rc);
 			return rc;
 		}
 
diff -ru a/drivers/net/wireless/intel/iwlegacy/3945-mac.c b/drivers/net/wireless/intel/iwlegacy/3945-mac.c
--- a/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2022-05-27 08:39:57.629123079 -0500
+++ b/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2022-05-27 08:33:38.408012324 -0500
@@ -1840,7 +1840,7 @@
 		sprintf(buf, "%s%u%s", name_pre, idx, ".ucode");
 		ret = request_firmware(&ucode_raw, buf, &il->pci_dev->dev);
 		if (ret < 0) {
-			IL_ERR("%s firmware file req failed: %d\n", buf, ret);
+			IL_ERR("Firmware file req failed\n", buf, ret);
 			if (ret == -ENOENT)
 				continue;
 			else
@@ -1849,7 +1849,7 @@
 			if (idx < api_max)
 				IL_ERR("Loaded firmware %s, "
 				       "which is deprecated. "
-				       " Please use API v%u instead.\n", buf,
+				       "\n", buf,
 				       api_max);
 			D_INFO("Got firmware '%s' file "
 			       "(%zd bytes) from disk\n", buf, ucode_raw->size);
@@ -1885,16 +1885,14 @@
 
 	if (api_ver < api_min || api_ver > api_max) {
 		IL_ERR("Driver unable to support your firmware API. "
-		       "Driver supports v%u, firmware is v%u.\n", api_max,
+		       "\n", api_max,
 		       api_ver);
 		il->ucode_ver = 0;
 		ret = -EINVAL;
 		goto err_release;
 	}
 	if (api_ver != api_max)
-		IL_ERR("Firmware has old API version. Expected %u, "
-		       "got %u. New firmware can be obtained "
-		       "from http://www.intellinuxwireless.org.\n", api_max,
+		IL_ERR("Firmware has old API version\n", api_max,
 		       api_ver);
 
 	IL_INFO("loaded firmware version %u.%u.%u.%u\n",
diff -ru a/drivers/net/wireless/intel/iwlegacy/4965-mac.c b/drivers/net/wireless/intel/iwlegacy/4965-mac.c
--- a/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2022-05-27 08:33:38.436012706 -0500
@@ -4691,7 +4691,7 @@
 
 	sprintf(il->firmware_name, "%s%s%s", name_pre, tag, ".ucode");
 
-	D_INFO("attempting to load firmware '%s'\n", il->firmware_name);
+	D_INFO("attempting to load firmware\n", il->firmware_name);
 
 	return request_firmware_nowait(THIS_MODULE, 1, il->firmware_name,
 				       &il->pci_dev->dev, GFP_KERNEL, il,
@@ -4781,7 +4781,7 @@
 
 	if (!ucode_raw) {
 		if (il->fw_idx <= il->cfg->ucode_api_max)
-			IL_ERR("request for firmware file '%s' failed.\n",
+			IL_ERR("request for firmware failed.\n",
 			       il->firmware_name);
 		goto try_again;
 	}
@@ -4809,16 +4809,13 @@
 	 * on the API version read from firmware header from here on forward
 	 */
 	if (api_ver < api_min || api_ver > api_max) {
-		IL_ERR("Driver unable to support your firmware API. "
-		       "Driver supports v%u, firmware is v%u.\n", api_max,
+		IL_ERR("Driver unable to support your firmware API.\n", api_max,
 		       api_ver);
 		goto try_again;
 	}
 
 	if (api_ver != api_max)
-		IL_ERR("Firmware has old API version. Expected v%u, "
-		       "got v%u. New firmware can be obtained "
-		       "from http://www.intellinuxwireless.org.\n", api_max,
+		IL_ERR("Firmware has old API version.\n", api_max,
 		       api_ver);
 
 	IL_INFO("loaded firmware version %u.%u.%u.%u\n",
diff -ru a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
--- a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2022-05-27 08:37:50.559425802 -0500
@@ -234,26 +234,13 @@
 
 	if (drv->fw_index < cfg->ucode_api_min) {
 		IWL_ERR(drv, "no suitable firmware found!\n");
-
-		if (cfg->ucode_api_min == cfg->ucode_api_max) {
-			IWL_ERR(drv, "%s%d is required\n", cfg->fw_name_pre,
-				cfg->ucode_api_max);
-		} else {
-			IWL_ERR(drv, "minimum version required: %s%d\n",
-				cfg->fw_name_pre, cfg->ucode_api_min);
-			IWL_ERR(drv, "maximum version supported: %s%d\n",
-				cfg->fw_name_pre, cfg->ucode_api_max);
-		}
-
-		IWL_ERR(drv,
-			"check git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git\n");
 		return -ENOENT;
 	}
 
 	snprintf(drv->firmware_name, sizeof(drv->firmware_name), "%s%s.ucode",
 		 cfg->fw_name_pre, tag);
 
-	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware '%s'\n",
+	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware\n",
 			  drv->firmware_name);
 
 	return request_firmware_nowait(THIS_MODULE, 1, drv->firmware_name,
diff -ru a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
--- a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2022-05-27 08:33:38.456012980 -0500
@@ -1320,8 +1320,8 @@
 	 */
 	ret = request_firmware(&fw_entry, nvm_file_name, trans->dev);
 	if (ret) {
-		IWL_ERR(trans, "ERROR: %s isn't available %d\n",
-			nvm_file_name, ret);
+		IWL_ERR(trans, "ERROR: firmware isn't available %d\n",
+			ret);
 		return ret;
 	}
 
diff -ru a/drivers/net/wireless/intel/iwlwifi/mvm/fw.c b/drivers/net/wireless/intel/iwlwifi/mvm/fw.c
--- a/drivers/net/wireless/intel/iwlwifi/mvm/fw.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/fw.c	2022-05-27 08:33:38.496013528 -0500
@@ -1375,7 +1375,7 @@
 
 	ret = iwl_mvm_load_ucode_wait_alive(mvm, IWL_UCODE_WOWLAN);
 	if (ret) {
-		IWL_ERR(mvm, "Failed to start WoWLAN firmware: %d\n", ret);
+		IWL_ERR(mvm, "Failed to start WoWLAN firmware\n", ret);
 		goto error;
 	}
 
diff -ru a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c
--- a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2022-05-27 08:33:38.496013528 -0500
@@ -2070,9 +2070,9 @@
 	int ret = 0;
 	u16 signature;
 
-	dev_info(dev, "%s: Loading firmware %s\n", DRIVER_NAME, fw_name);
+	dev_info(dev, "%s: Loading firmware\n", DRIVER_NAME, fw_name);
 	if (request_firmware(&fw, fw_name, &priv->udev->dev)) {
-		dev_warn(dev, "request_firmware(%s) failed\n", fw_name);
+		dev_warn(dev, "request_firmware failed\n", fw_name);
 		ret = -EAGAIN;
 		goto exit;
 	}
diff -ru a/drivers/net/wireless/realtek/rtlwifi/core.c b/drivers/net/wireless/realtek/rtlwifi/core.c
--- a/drivers/net/wireless/realtek/rtlwifi/core.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/core.c	2022-05-27 08:33:38.556014350 -0500
@@ -84,7 +84,7 @@
 			err = request_firmware(&firmware,
 					       rtlpriv->cfg->alt_fw_name,
 					       rtlpriv->io.dev);
-			pr_info("Loading alternative firmware %s\n",
+			pr_info("Loading alternative firmware \n",
 				rtlpriv->cfg->alt_fw_name);
 			if (!err)
 				goto found_alt;
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2022-05-27 08:33:38.556014350 -0500
@@ -148,7 +148,7 @@
 
 	fw_name = "rtlwifi/rtl8188efw.bin";
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware \n", fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2022-05-27 08:33:38.556014350 -0500
@@ -149,7 +149,7 @@
 		fw_name = "rtlwifi/rtl8192cfw.bin";
 
 	rtlpriv->max_fw_size = 0x4000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware \n", fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2022-05-27 08:33:38.592014843 -0500
@@ -58,7 +58,7 @@
 	}
 	/* provide name of alternative file */
 	rtlpriv->cfg->alt_fw_name = "rtlwifi/rtl8192cufw.bin";
-	pr_info("Loading firmware %s\n", fw_name);
+	pr_info("Loading firmware \n", fw_name);
 	rtlpriv->max_fw_size = 0x4000;
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      fw_name, rtlpriv->io.dev,
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2022-05-27 08:33:38.592014843 -0500
@@ -154,7 +154,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	pr_info("Driver for Realtek RTL8192DE WLAN interface\n");
-	pr_info("Loading firmware file %s\n", fw_name);
+	pr_info("Loading firmware file\n", fw_name);
 
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2022-05-27 08:39:57.633123132 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2022-05-27 08:33:38.592014843 -0500
@@ -150,7 +150,7 @@
 	fw_name = "rtlwifi/rtl8192eefw.bin";
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware \n", fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2022-05-27 08:33:38.696016266 -0500
@@ -70,7 +70,7 @@
 			 "Firmware callback routine entered!\n");
 	complete(&rtlpriv->firmware_loading_complete);
 	if (!firmware) {
-		pr_err("Firmware %s not available\n", fw_name);
+		pr_err("Firmware not available\n", fw_name);
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
@@ -188,7 +188,7 @@
 	rtlpriv->max_fw_size = RTL8190_MAX_FIRMWARE_CODE_SIZE*2 +
 			       sizeof(struct fw_hdr);
 	pr_info("Driver for Realtek RTL8192SE/RTL8191SE\n"
-		"Loading firmware %s\n", fw_name);
+		"Loading firmware \n", fw_name);
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2022-05-27 08:33:38.696016266 -0500
@@ -157,7 +157,7 @@
 		fw_name = "rtlwifi/rtl8723fw_B.bin";
 
 	rtlpriv->max_fw_size = 0x6000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware \n", fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2022-05-27 08:33:38.696016266 -0500
@@ -161,7 +161,7 @@
 	}
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware \n", fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2022-05-27 08:39:57.637123186 -0500
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2022-05-27 08:33:38.696016266 -0500
@@ -190,7 +190,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	/*load normal firmware*/
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware \n", fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
@@ -201,7 +201,7 @@
 		return 1;
 	}
 	/*load wowlan firmware*/
-	pr_info("Using firmware %s\n", wowlan_fw_name);
+	pr_info("Using firmware \n", wowlan_fw_name);
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      wowlan_fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
