The Linux-Libre deblob script that is used to make the Trisquel kernel packages disables all functionality related to loading nonfree firmware blobs. Even if the user chooses to install the blob files, these would still not be loaded and the driver would not activate.
An alternative solution is to preserve the loading functionality and remove the *advertisment* to the user of the blob filenames when these fail to be loaded, as to not imply that those files are recommended in any way, so the driver would just print "failed to load firmware" or equivalent. This allows the user to use the driver if they so decide.

This method is done by a patch (silent-accept-firmware.patch) that removes all the instances where the blob filenames are printed to the user (via kernel logs), and a section on the package helper that takes care of preventing the deblob script from acting on the files modified by the patch. This is done manually, for individual drivers (usually those for very common devices). It needs to be reviewed on any new major release, checking that no new lines were added to the upstream driver in where it prints the blob filename on the log.
Printing the blob filename on success operations (that is, when the blob file is present) is acceptable. If in doubt, all instances of printing the blob filenames should be removed.

diff -Nru linux-5.15.0a/arch/x86/kernel/cpu/microcode/amd.c linux-5.15.0b/arch/x86/kernel/cpu/microcode/amd.c
--- linux-5.15.0a/arch/x86/kernel/cpu/microcode/amd.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/arch/x86/kernel/cpu/microcode/amd.c	2022-05-12 17:31:21.286518721 -0500
@@ -901,7 +901,7 @@
 		snprintf(fw_name, sizeof(fw_name), "amd-ucode/microcode_amd_fam%.2xh.bin", c->x86);
 
 	if (request_firmware_direct(&fw, (const char *)fw_name, device)) {
-		pr_debug("failed to load file %s\n", fw_name);
+		pr_debug("failed to load file\n");
 		goto out;
 	}
 
diff -Nru linux-5.15.0a/arch/x86/kernel/cpu/microcode/intel.c linux-5.15.0b/arch/x86/kernel/cpu/microcode/intel.c
--- linux-5.15.0a/arch/x86/kernel/cpu/microcode/intel.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/arch/x86/kernel/cpu/microcode/intel.c	2022-05-12 17:34:56.726972573 -0500
@@ -940,7 +940,7 @@
 		c->x86, c->x86_model, c->x86_stepping);
 
 	if (request_firmware_direct(&firmware, name, device)) {
-		pr_debug("data file %s load failed\n", name);
+		pr_debug("data file load failed\n");
 		return UCODE_NFOUND;
 	}
 
diff -Nru linux-5.15.0a/drivers/base/firmware_loader/fallback.c linux-5.15.0b/drivers/base/firmware_loader/fallback.c
--- linux-5.15.0a/drivers/base/firmware_loader/fallback.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/base/firmware_loader/fallback.c	2022-05-12 17:40:38.151694598 -0500
@@ -522,7 +522,7 @@
 	if (fw_priv->opt_flags & FW_OPT_UEVENT) {
 		fw_priv->need_uevent = true;
 		dev_set_uevent_suppress(f_dev, false);
-		dev_dbg(f_dev, "firmware: requesting %s\n", fw_priv->fw_name);
+		dev_dbg(f_dev, "firmware: requesting\n");
 		kobject_uevent(&fw_sysfs->dev.kobj, KOBJ_ADD);
 	} else {
 		timeout = MAX_JIFFY_OFFSET;
@@ -560,15 +560,13 @@
 	if (opt_flags & FW_OPT_NOWAIT) {
 		timeout = usermodehelper_read_lock_wait(timeout);
 		if (!timeout) {
-			dev_dbg(device, "firmware: %s loading timed out\n",
-				name);
+			dev_dbg(device, "firmware: loading timed out\n");
 			return -EBUSY;
 		}
 	} else {
 		ret = usermodehelper_read_trylock();
 		if (WARN_ON(ret)) {
-			dev_err(device, "firmware: %s will not be loaded\n",
-				name);
+			dev_err(device, "firmware: will not be loaded\n");
 			return ret;
 		}
 	}
@@ -651,10 +649,8 @@
 		return ret;
 
 	if (!(opt_flags & FW_OPT_NO_WARN))
-		dev_warn(device, "Falling back to sysfs fallback for: %s\n",
-				 name);
+		dev_warn(device, "Falling back to sysfs fallback\n");
 	else
-		dev_dbg(device, "Falling back to sysfs fallback for: %s\n",
-				name);
+		dev_dbg(device, "Falling back to sysfs fallback\n");
 	return fw_load_from_user_helper(fw, name, device, opt_flags);
 }
diff -Nru linux-5.15.0a/drivers/base/firmware_loader/main.c linux-5.15.0b/drivers/base/firmware_loader/main.c
--- linux-5.15.0a/drivers/base/firmware_loader/main.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/base/firmware_loader/main.c	2022-05-12 17:52:35.513216324 -0500
@@ -539,11 +539,10 @@
 						       READING_FIRMWARE);
 		if (rc < 0) {
 			if (rc != -ENOENT)
-				dev_warn(device, "loading %s failed with error %d\n",
-					 path, rc);
+				dev_warn(device, "loading failed with error %d\n",
+					 rc);
 			else
-				dev_dbg(device, "loading %s failed for no such file or directory.\n",
-					 path);
+				dev_dbg(device, "loading failed for no such file or directory.\n");
 			continue;
 		}
 		size = rc;
@@ -562,8 +561,7 @@
 				continue;
 			}
 		} else {
-			dev_dbg(device, "direct-loading %s\n",
-				fw_priv->fw_name);
+            dev_dbg(device, "direct-loading\n");
 			if (!fw_priv->data)
 				fw_priv->data = buffer;
 			fw_priv->size = size;
@@ -738,7 +736,7 @@
 	}
 
 	if (fw_get_builtin_firmware(firmware, name, dbuf, size)) {
-		dev_dbg(device, "using built-in %s\n", name);
+		dev_dbg(device, "using built-in\n");
 		return 0; /* assigned */
 	}
 
@@ -828,8 +826,8 @@
 	if (ret) {
 		if (!(opt_flags & FW_OPT_NO_WARN))
 			dev_warn(device,
-				 "Direct firmware load for %s failed with error %d\n",
-				 name, ret);
+				 "Direct firmware load failed with error %d\n",
+				 ret);
 		if (nondirect)
 			ret = firmware_fallback_sysfs(fw, name, device,
 						      opt_flags, ret);
diff -Nru linux-5.15.0a/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c linux-5.15.0b/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c
--- linux-5.15.0a/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c	2022-05-12 18:54:56.035329211 -0500
@@ -7673,8 +7673,8 @@
 
 out:
 	if (err) {
-		DRM_ERROR("si_smc: Failed to load firmware. err = %d\"%s\"\n",
-			  err, fw_name);
+		DRM_ERROR("si_smc: Failed to load firmware. err = %d\n",
+			  err);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/drm_edid_load.c linux-5.15.0b/drivers/gpu/drm/drm_edid_load.c
--- linux-5.15.0a/drivers/gpu/drm/drm_edid_load.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/drm_edid_load.c	2022-05-12 19:05:28.245840772 -0500
@@ -188,15 +188,15 @@
 		pdev = platform_device_register_simple(connector_name, -1, NULL, 0);
 		if (IS_ERR(pdev)) {
 			DRM_ERROR("Failed to register EDID firmware platform device "
-				  "for connector \"%s\"\n", connector_name);
+				  "for connector\n");
 			return ERR_CAST(pdev);
 		}
 
 		err = request_firmware(&fw, name, &pdev->dev);
 		platform_device_unregister(pdev);
 		if (err) {
-			DRM_ERROR("Requesting EDID firmware \"%s\" failed (err=%d)\n",
-				  name, err);
+			DRM_ERROR("Requesting EDID firmware failed (err=%d)\n",
+				  err);
 			return ERR_PTR(err);
 		}
 
@@ -205,8 +205,8 @@
 	}
 
 	if (edid_size(fwdata, fwsize) != fwsize) {
-		DRM_ERROR("Size of EDID firmware \"%s\" is invalid "
-			  "(expected %d, got %d\n", name,
+		DRM_ERROR("Size of EDID firmware is invalid "
+			  "(expected %d, got %d\n",
 			  edid_size(fwdata, fwsize), (int)fwsize);
 		edid = ERR_PTR(-EINVAL);
 		goto out;
diff -Nru linux-5.15.0a/drivers/gpu/drm/r128/r128_cce.c linux-5.15.0b/drivers/gpu/drm/r128/r128_cce.c
--- linux-5.15.0a/drivers/gpu/drm/r128/r128_cce.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/r128/r128_cce.c	2022-05-12 19:07:11.977637062 -0500
@@ -162,14 +162,13 @@
 	rc = request_firmware(&fw, FIRMWARE_NAME, &pdev->dev);
 	platform_device_unregister(pdev);
 	if (rc) {
-		pr_err("r128_cce: Failed to load firmware \"%s\"\n",
-		       FIRMWARE_NAME);
+		pr_err("r128_cce: Failed to load firmware\n");
 		return rc;
 	}
 
 	if (fw->size != 256 * 8) {
-		pr_err("r128_cce: Bogus length %zu in firmware \"%s\"\n",
-		       fw->size, FIRMWARE_NAME);
+		pr_err("r128_cce: Bogus length %zu in firmware\n",
+		       fw->size);
 		rc = -EINVAL;
 		goto out_release;
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/cik.c linux-5.15.0b/drivers/gpu/drm/radeon/cik.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/cik.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/cik.c	2022-05-12 19:17:42.053680437 -0500
@@ -2049,7 +2049,7 @@
 	default: BUG();
 	}
 
-	DRM_INFO("Loading %s Microcode\n", new_chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", new_chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
@@ -2059,16 +2059,15 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2083,15 +2082,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2106,15 +2104,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2129,15 +2126,14 @@
 		if (err)
 			goto out;
 		if (rdev->mec_fw->size != mec_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mec_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->mec_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->mec_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2167,15 +2163,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("cik_rlc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->rlc_fw->size, fw_name);
+			pr_err("cik_rlc: Bogus length %zu in firmware\n",
+			       rdev->rlc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2190,15 +2185,14 @@
 		if (err)
 			goto out;
 		if (rdev->sdma_fw->size != sdma_req_size) {
-			pr_err("cik_sdma: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->sdma_fw->size, fw_name);
+			pr_err("cik_sdma: Bogus length %zu in firmware\n",
+			       rdev->sdma_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->sdma_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2220,16 +2214,15 @@
 			}
 			if ((rdev->mc_fw->size != mc_req_size) &&
 			    (rdev->mc_fw->size != mc2_req_size)){
-				pr_err("cik_mc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->mc_fw->size, fw_name);
+				pr_err("cik_mc: Bogus length %zu in firmware\n",
+				       rdev->mc_fw->size);
 				err = -EINVAL;
 			}
 			DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
 		} else {
 			err = radeon_ucode_validate(rdev->mc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-				       fw_name);
+				pr_err("cik_fw: validation failed for firmware\n");
 				goto out;
 			} else {
 				new_fw++;
@@ -2245,21 +2238,19 @@
 			snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 			err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 			if (err) {
-				pr_err("smc: error loading firmware \"%s\"\n",
-				       fw_name);
+				pr_err("smc: error loading firmware\n");
 				release_firmware(rdev->smc_fw);
 				rdev->smc_fw = NULL;
 				err = 0;
 			} else if (rdev->smc_fw->size != smc_req_size) {
-				pr_err("cik_smc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->smc_fw->size, fw_name);
+				pr_err("cik_smc: Bogus length %zu in firmware\n",
+				       rdev->smc_fw->size);
 				err = -EINVAL;
 			}
 		} else {
 			err = radeon_ucode_validate(rdev->smc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-				       fw_name);
+				pr_err("cik_fw: validation failed for firmware\n");
 				goto out;
 			} else {
 				new_fw++;
@@ -2279,8 +2270,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("cik_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/r100.c linux-5.15.0b/drivers/gpu/drm/radeon/r100.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/r100.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/r100.c	2022-05-12 19:20:42.194000367 -0500
@@ -1057,10 +1057,10 @@
 
 	err = request_firmware(&rdev->me_fw, fw_name, rdev->dev);
 	if (err) {
-		pr_err("radeon_cp: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("radeon_cp: Failed to load firmware\n");
 	} else if (rdev->me_fw->size % 8) {
-		pr_err("radeon_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		pr_err("radeon_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 		release_firmware(rdev->me_fw);
 		rdev->me_fw = NULL;
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/r600.c linux-5.15.0b/drivers/gpu/drm/radeon/r600.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/r600.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/r600.c	2022-05-12 19:23:55.994420122 -0500
@@ -2548,15 +2548,15 @@
 		rlc_req_size = R600_RLC_UCODE_SIZE * 4;
 	}
 
-	DRM_INFO("Loading %s Microcode\n", chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
 	if (err)
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->pfp_fw->size, fw_name);
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
+		       rdev->pfp_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2566,8 +2566,8 @@
 	if (err)
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2577,8 +2577,8 @@
 	if (err)
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
-		pr_err("r600_rlc: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->rlc_fw->size, fw_name);
+		pr_err("r600_rlc: Bogus length %zu in firmware\n",
+		       rdev->rlc_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2587,13 +2587,13 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", smc_chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			pr_err("smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	}
@@ -2601,8 +2601,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("r600_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("r600_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/radeon_uvd.c linux-5.15.0b/drivers/gpu/drm/radeon/radeon_uvd.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/radeon_uvd.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/radeon_uvd.c	2022-05-12 19:29:38.331283050 -0500
@@ -140,8 +140,7 @@
 		/* Let's try to load the newer firmware first */
 		r = request_firmware(&rdev->uvd_fw, fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
-				fw_name);
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n");
 		} else {
 			struct common_firmware_header *hdr = (void *)rdev->uvd_fw->data;
 			unsigned version_major, version_minor, family_id;
@@ -177,8 +176,7 @@
 	if (!fw_name || r) {
 		r = request_firmware(&rdev->uvd_fw, legacy_fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
-				legacy_fw_name);
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n");
 			return r;
 		}
 	}
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/radeon_vce.c linux-5.15.0b/drivers/gpu/drm/radeon/radeon_vce.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/radeon_vce.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/radeon_vce.c	2022-05-12 19:30:17.987389834 -0500
@@ -86,8 +86,7 @@
 
 	r = request_firmware(&rdev->vce_fw, fw_name, rdev->dev);
 	if (r) {
-		dev_err(rdev->dev, "radeon_vce: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(rdev->dev, "radeon_vce: Can't load firmware\n");
 		return r;
 	}
 
diff -Nru linux-5.15.0a/drivers/gpu/drm/radeon/si.c linux-5.15.0b/drivers/gpu/drm/radeon/si.c
--- linux-5.15.0a/drivers/gpu/drm/radeon/si.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/gpu/drm/radeon/si.c	2022-05-12 19:35:46.048307449 -0500
@@ -1775,7 +1775,7 @@
 	if (((RREG32(MC_SEQ_MISC0) & 0xff000000) >> 24) == 0x58)
 		si58_fw = true;
 
-	DRM_INFO("Loading %s Microcode\n", new_chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", new_chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
@@ -1785,16 +1785,15 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1809,15 +1808,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1832,15 +1830,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1855,14 +1852,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("si_rlc: Bogus length %zu in firmware \"%s\"\n",
+			pr_err("si_rlc: Bogus length %zu in firmware\n",
 			       rdev->rlc_fw->size, fw_name);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
+			pr_err("si_cp: validation failed for firmware\n",
 			       fw_name);
 			goto out;
 		} else {
@@ -1886,16 +1883,15 @@
 		}
 		if ((rdev->mc_fw->size != mc_req_size) &&
 		    (rdev->mc_fw->size != mc2_req_size)) {
-			pr_err("si_mc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mc_fw->size, fw_name);
+			pr_err("si_mc: Bogus length %zu in firmware\n",
+			       rdev->mc_fw->size);
 			err = -EINVAL;
 		}
 		DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
 	} else {
 		err = radeon_ucode_validate(rdev->mc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1913,20 +1909,19 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("si_smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			pr_err("si_smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->smc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1944,8 +1939,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("si_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2100.c linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2100.c
--- linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2022-05-12 19:38:03.816705976 -0500
@@ -8372,8 +8372,8 @@
 
 	if (rc < 0) {
 		printk(KERN_ERR DRV_NAME ": "
-		       "%s: Firmware '%s' not available or load failed.\n",
-		       priv->net_dev->name, fw_name);
+		       "%s: Firmware not available or load failed.\n",
+		       priv->net_dev->name);
 		return rc;
 	}
 	IPW_DEBUG_INFO("firmware data %p size %zd\n", fw->fw_entry->data,
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2200.c linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2200.c
--- linux-5.15.0a/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2022-05-12 19:41:09.660743486 -0500
@@ -3397,12 +3397,12 @@
 	/* ask firmware_class module to get the boot firmware off disk */
 	rc = request_firmware(raw, name, &priv->pci_dev->dev);
 	if (rc < 0) {
-		IPW_ERROR("%s request_firmware failed: Reason %d\n", name, rc);
+		IPW_ERROR("request_firmware failed: Reason %d\n", rc);
 		return rc;
 	}
 
 	if ((*raw)->size < sizeof(*fw)) {
-		IPW_ERROR("%s is too small (%zd)\n", name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small (%zd)\n", (*raw)->size);
 		return -EINVAL;
 	}
 
@@ -3410,13 +3410,12 @@
 
 	if ((*raw)->size < sizeof(*fw) + le32_to_cpu(fw->boot_size) +
 	    le32_to_cpu(fw->ucode_size) + le32_to_cpu(fw->fw_size)) {
-		IPW_ERROR("%s is too small or corrupt (%zd)\n",
-			  name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small or corrupt (%zd)\n",
+			  (*raw)->size);
 		return -EINVAL;
 	}
 
-	IPW_DEBUG_INFO("Read firmware '%s' image v%d.%d (%zd bytes)\n",
-		       name,
+	IPW_DEBUG_INFO("Read firmware image v%d.%d (%zd bytes)\n",
 		       le32_to_cpu(fw->ver) >> 16,
 		       le32_to_cpu(fw->ver) & 0xff,
 		       (*raw)->size - sizeof(*fw));
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/3945-mac.c linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/3945-mac.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2022-05-12 19:50:13.188300126 -0500
@@ -1835,19 +1835,19 @@
 		sprintf(buf, "%s%u%s", name_pre, idx, ".ucode");
 		ret = request_firmware(&ucode_raw, buf, &il->pci_dev->dev);
 		if (ret < 0) {
-			IL_ERR("%s firmware file req failed: %d\n", buf, ret);
+			IL_ERR("Firmware file req failed: %d\n", ret);
 			if (ret == -ENOENT)
 				continue;
 			else
 				goto error;
 		} else {
 			if (idx < api_max)
-				IL_ERR("Loaded firmware %s, "
+				IL_ERR("Loaded firmware, "
 				       "which is deprecated. "
-				       " Please use API v%u instead.\n", buf,
+				       " Please use API v%u instead.\n",
 				       api_max);
-			D_INFO("Got firmware '%s' file "
-			       "(%zd bytes) from disk\n", buf, ucode_raw->size);
+			D_INFO("Got firmware file "
+			       "(%zd bytes) from disk\n", ucode_raw->size);
 			break;
 		}
 	}
@@ -3692,7 +3692,7 @@
 		goto out_unset_hw_params;
 	}
 
-	IL_INFO("Detected Intel Wireless WiFi Link %s\n", il->cfg->name);
+	IL_INFO("Detected Intel Wireless WiFi Link\n");
 
 	/***********************
 	 * 7. Setup Services
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/4965-mac.c linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/4965-mac.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2022-05-12 19:52:00.660378264 -0500
@@ -4684,7 +4684,7 @@
 
 	sprintf(il->firmware_name, "%s%s%s", name_pre, tag, ".ucode");
 
-	D_INFO("attempting to load firmware '%s'\n", il->firmware_name);
+	D_INFO("attempting to load firmware\n");
 
 	return request_firmware_nowait(THIS_MODULE, 1, il->firmware_name,
 				       &il->pci_dev->dev, GFP_KERNEL, il,
@@ -4774,8 +4774,7 @@
 
 	if (!ucode_raw) {
 		if (il->fw_idx <= il->cfg->ucode_api_max)
-			IL_ERR("request for firmware file '%s' failed.\n",
-			       il->firmware_name);
+			IL_ERR("request for firmware file failed.\n");
 		goto try_again;
 	}
 
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/dvm/main.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/dvm/main.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/dvm/main.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/dvm/main.c	2022-05-12 19:55:22.028606519 -0500
@@ -1253,7 +1253,7 @@
 	 ************************/
 	hw = iwl_alloc_all();
 	if (!hw) {
-		pr_err("%s: Cannot allocate network device\n", trans->name);
+		pr_err("Cannot allocate network device\n");
 		goto out;
 	}
 
@@ -1381,8 +1381,7 @@
 	/***********************
 	 * 2. Read REV register
 	 ***********************/
-	IWL_INFO(priv, "Detected %s, REV=0x%X\n",
-		priv->trans->name, priv->trans->hw_rev);
+	IWL_INFO(priv, "Detected, REV=0x%X\n", priv->trans->hw_rev);
 
 	if (iwl_trans_start_hw(priv->trans))
 		goto out_free_hw;
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2022-05-15 03:37:15.624660826 -0500
@@ -185,27 +185,13 @@
 
 	if (drv->fw_index < cfg->ucode_api_min) {
 		IWL_ERR(drv, "no suitable firmware found!\n");
-
-		if (cfg->ucode_api_min == cfg->ucode_api_max) {
-			IWL_ERR(drv, "%s%d is required\n", cfg->fw_name_pre,
-				cfg->ucode_api_max);
-		} else {
-			IWL_ERR(drv, "minimum version required: %s%d\n",
-				cfg->fw_name_pre, cfg->ucode_api_min);
-			IWL_ERR(drv, "maximum version supported: %s%d\n",
-				cfg->fw_name_pre, cfg->ucode_api_max);
-		}
-
-		IWL_ERR(drv,
-			"check git://git.kernel.org/pub/scm/linux/kernel/git/firmware/linux-firmware.git\n");
 		return -ENOENT;
 	}
 
 	snprintf(drv->firmware_name, sizeof(drv->firmware_name), "%s%s.ucode",
 		 cfg->fw_name_pre, tag);
 
-	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware '%s'\n",
-			  drv->firmware_name);
+	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware\n");
 
 	return request_firmware_nowait(THIS_MODULE, 1, drv->firmware_name,
 				       drv->trans->dev,
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2022-05-12 20:04:15.885520948 -0500
@@ -1496,13 +1496,13 @@
 	 */
 	ret = request_firmware(&fw_entry, nvm_file_name, trans->dev);
 	if (ret) {
-		IWL_ERR(trans, "ERROR: %s isn't available %d\n",
-			nvm_file_name, ret);
+		IWL_ERR(trans, "ERROR: firmware isn't available %d\n",
+			ret);
 		return ret;
 	}
 
-	IWL_INFO(trans, "Loaded NVM file %s (%zu bytes)\n",
-		 nvm_file_name, fw_entry->size);
+	IWL_INFO(trans, "Loaded NVM firmware file(%zu bytes)\n",
+		 fw_entry->size);
 
 	if (fw_entry->size > MAX_NVM_FILE_LEN) {
 		IWL_ERR(trans, "NVM file too large\n");
diff -Nru linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
--- linux-5.15.0a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c	2022-05-12 15:51:56.000000000 -0500
+++ linux-5.15.0b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c	2022-05-12 20:06:24.101778555 -0500
@@ -954,8 +954,7 @@
 		goto out_free;
 	}
 
-	IWL_INFO(mvm, "Detected %s, REV=0x%X\n",
-		 mvm->trans->name, mvm->trans->hw_rev);
+	IWL_INFO(mvm, "Detected, REV=0x%X\n", mvm->trans->hw_rev);
 
 	if (iwlwifi_mod_params.nvm_file)
 		mvm->nvm_file_name = iwlwifi_mod_params.nvm_file;
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c linux-5.15.0b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2022-05-12 20:08:42.726066557 -0500
@@ -2069,9 +2069,9 @@
 	int ret = 0;
 	u16 signature;
 
-	dev_info(dev, "%s: Loading firmware %s\n", DRIVER_NAME, fw_name);
+	dev_info(dev, "%s: Loading firmware\n", DRIVER_NAME);
 	if (request_firmware(&fw, fw_name, &priv->udev->dev)) {
-		dev_warn(dev, "request_firmware(%s) failed\n", fw_name);
+		dev_warn(dev, "request_firmware failed\n");
 		ret = -EAGAIN;
 		goto exit;
 	}
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/core.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/core.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/core.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/core.c	2022-05-12 20:10:37.286310362 -0500
@@ -83,8 +83,7 @@
 			err = request_firmware(&firmware,
 					       rtlpriv->cfg->alt_fw_name,
 					       rtlpriv->io.dev);
-			pr_info("Loading alternative firmware %s\n",
-				rtlpriv->cfg->alt_fw_name);
+			pr_info("Loading alternative firmware\n");
 			if (!err)
 				goto found_alt;
 		}
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2022-05-12 20:11:35.902436758 -0500
@@ -143,7 +143,7 @@
 
 	fw_name = "rtlwifi/rtl8188efw.bin";
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2022-05-12 20:13:41.146709913 -0500
@@ -146,7 +146,7 @@
 		fw_name = "rtlwifi/rtl8192cfw.bin";
 
 	rtlpriv->max_fw_size = 0x4000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2022-05-12 20:14:55.359549610 -0500
@@ -55,7 +55,7 @@
 	}
 	/* provide name of alternative file */
 	rtlpriv->cfg->alt_fw_name = "rtlwifi/rtl8192cufw.bin";
-	pr_info("Loading firmware %s\n", fw_name);
+	pr_info("Loading firmware\n");
 	rtlpriv->max_fw_size = 0x4000;
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      fw_name, rtlpriv->io.dev,
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2022-05-12 20:16:46.224869781 -0500
@@ -154,7 +154,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	pr_info("Driver for Realtek RTL8192DE WLAN interface\n");
-	pr_info("Loading firmware file %s\n", fw_name);
+	pr_info("Loading firmware file\n");
 
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2022-05-12 20:18:03.045677104 -0500
@@ -149,7 +149,7 @@
 	fw_name = "rtlwifi/rtl8192eefw.bin";
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2022-05-12 20:19:57.294744129 -0500
@@ -69,7 +69,7 @@
 		"Firmware callback routine entered!\n");
 	complete(&rtlpriv->firmware_loading_complete);
 	if (!firmware) {
-		pr_err("Firmware %s not available\n", fw_name);
+		pr_err("Firmware not available\n");
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
@@ -185,7 +185,7 @@
 	rtlpriv->max_fw_size = RTL8190_MAX_FIRMWARE_CODE_SIZE*2 +
 			       sizeof(struct fw_hdr);
 	pr_info("Driver for Realtek RTL8192SE/RTL8191SE\n"
-		"Loading firmware %s\n", fw_name);
+		"Loading firmware\n");
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2022-05-12 20:20:52.463210665 -0500
@@ -152,7 +152,7 @@
 		fw_name = "rtlwifi/rtl8723fw_B.bin";
 
 	rtlpriv->max_fw_size = 0x6000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2022-05-12 20:21:30.627517214 -0500
@@ -156,7 +156,7 @@
 	}
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -Nru linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c
--- linux-5.15.0a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2021-10-31 14:53:10.000000000 -0600
+++ linux-5.15.0b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2022-05-12 20:22:48.612106805 -0500
@@ -185,7 +185,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	/*load normal firmware*/
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
@@ -196,7 +196,7 @@
 		return 1;
 	}
 	/*load wowlan firmware*/
-	pr_info("Using firmware %s\n", wowlan_fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      wowlan_fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -ur source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c
--- source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c	2022-08-14 17:01:01.000000000 -0400
+++ source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/firmware.c	2022-08-14 17:17:35.033981305 -0400
@@ -763,9 +763,6 @@
 	if (!fwreq)
 		return NULL;
 
-	brcmf_info("using %s for chip %s\n",
-		   mapping_table[i].fw_base, chipname);
-
 	mp_path = brcmf_mp_global.firmware_path;
 	mp_path_len = strnlen(mp_path, BRCMF_FW_ALTPATH_LEN);
 	if (mp_path_len)
diff -ur source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c
--- source.bak/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c	2022-08-14 17:01:01.000000000 -0400
+++ source/drivers/net/wireless/broadcom/brcm80211/brcmfmac/pcie.c	2022-08-14 17:11:23.550247718 -0400
@@ -1542,7 +1542,7 @@
 	if (err)
 		return err;
 
-	brcmf_dbg(PCIE, "Download FW %s\n", devinfo->fw_name);
+	brcmf_dbg(PCIE, "Download FW\n");
 	memcpy_toio(devinfo->tcm + devinfo->ci->rambase,
 		    (void *)fw->data, fw->size);
 
diff -ur source.bak/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c source/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c
--- source.bak/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/net/wireless/broadcom/brcm80211/brcmsmac/mac80211_if.c	2022-08-14 17:09:59.527120902 -0400
@@ -377,16 +377,16 @@
 			UCODE_LOADER_API_VER);
 		status = request_firmware(&wl->fw.fw_bin[i], fw_name, device);
 		if (status) {
-			wiphy_err(wl->wiphy, "%s: fail to load firmware %s\n",
-				  KBUILD_MODNAME, fw_name);
+			wiphy_err(wl->wiphy, "%s: fail to load firmware\n",
+				  KBUILD_MODNAME);
 			return status;
 		}
 		sprintf(fw_name, "%s_hdr-%d.fw", brcms_firmwares[i],
 			UCODE_LOADER_API_VER);
 		status = request_firmware(&wl->fw.fw_hdr[i], fw_name, device);
 		if (status) {
-			wiphy_err(wl->wiphy, "%s: fail to load firmware %s\n",
-				  KBUILD_MODNAME, fw_name);
+			wiphy_err(wl->wiphy, "%s: fail to load firmware\n",
+				  KBUILD_MODNAME);
 			return status;
 		}
 		wl->fw.hdr_num_entries[i] =
diff -ru source.orig/drivers/gpu/drm/radeon/ni.c source/drivers/gpu/drm/radeon/ni.c
--- source.orig/drivers/gpu/drm/radeon/ni.c	2023-02-22 14:24:28.539769273 -0500
+++ source/drivers/gpu/drm/radeon/ni.c	2023-02-22 14:31:24.013853164 -0500
@@ -807,7 +807,7 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
@@ -821,8 +821,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("ni_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("ni_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -ru source.orig/drivers/net/wireless/intel/ipw2x00/ipw2200.c source/drivers/net/wireless/intel/ipw2x00/ipw2200.c
--- source.orig/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2023-02-22 14:24:28.635767924 -0500
+++ source/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2023-02-22 14:32:52.060558270 -0500
@@ -3549,7 +3549,7 @@
 	/* DMA the initial boot firmware into the device */
 	rc = ipw_load_firmware(priv, boot_img, le32_to_cpu(fw->boot_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load boot firmware: %d\n", rc);
+		IPW_ERROR("Unable to load boot firmware\n");
 		goto error;
 	}
 
@@ -3571,7 +3571,7 @@
 	/* DMA the ucode into the device */
 	rc = ipw_load_ucode(priv, ucode_img, le32_to_cpu(fw->ucode_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load ucode: %d\n", rc);
+		IPW_ERROR("Unable to load ucode\n");
 		goto error;
 	}
 
@@ -3581,7 +3581,7 @@
 	/* DMA bss firmware into the device */
 	rc = ipw_load_firmware(priv, fw_img, le32_to_cpu(fw->fw_size));
 	if (rc < 0) {
-		IPW_ERROR("Unable to load firmware: %d\n", rc);
+		IPW_ERROR("Unable to load firmware\n");
 		goto error;
 	}
 #ifdef CONFIG_PM
@@ -11177,7 +11177,7 @@
 		 * Also start the clocks. */
 		rc = ipw_load(priv);
 		if (rc) {
-			IPW_ERROR("Unable to load firmware: %d\n", rc);
+			IPW_ERROR("Unable to load firmware\n");
 			return rc;
 		}
 
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
index f1a050379190..073962db13bd 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
@@ -419,7 +419,7 @@ static int amdgpu_cgs_get_firmware_info(struct cgs_device *cgs_device,
 
 			err = amdgpu_ucode_validate(adev->pm.fw);
 			if (err) {
-				DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+				DRM_ERROR("Failed to load firmware\n");
 				release_firmware(adev->pm.fw);
 				adev->pm.fw = NULL;
 				return err;
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
index af9bdf16eefd..8029aad01d10 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
@@ -1978,15 +1978,13 @@ static int amdgpu_device_parse_gpu_info_fw(struct amdgpu_device *adev)
 	err = request_firmware(&adev->firmware.gpu_info_fw, fw_name, adev->dev);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to load gpu_info firmware \"%s\"\n",
-			fw_name);
+			"Failed to load gpu_info firmware\n");
 		goto out;
 	}
 	err = amdgpu_ucode_validate(adev->firmware.gpu_info_fw);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to validate gpu_info firmware \"%s\"\n",
-			fw_name);
+			"Failed to validate gpu_info firmware\n");
 		goto out;
 	}
 
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
index 7e45640fbee0..ac42d8fb50c5 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_kms.c
@@ -1552,8 +1552,8 @@ static int amdgpu_debugfs_firmware_info_show(struct seq_file *m, void *unused)
 		if (ret)
 			continue;
 
-		seq_printf(m, "TA %s feature version: 0x%08x, firmware version: 0x%08x\n",
-			   ta_fw_name[i], fw_info.feature, fw_info.ver);
+		seq_printf(m, "TA feature version: 0x%08x, firmware version: 0x%08x\n",
+			   fw_info.feature, fw_info.ver);
 	}
 
 	/* SMC */
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c
index 9b41cb8c3de5..b31e948d1f61 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_psp.c
@@ -469,8 +469,7 @@ psp_cmd_submit_buf(struct psp_context *psp,
 	 */
 	if (!skip_unsupport && (psp->cmd_buf_mem->resp.status || !timeout) && !ras_intr) {
 		if (ucode)
-			DRM_WARN("failed to load ucode %s(0x%X) ",
-				  amdgpu_ucode_name(ucode->ucode_id), ucode->ucode_id);
+			DRM_WARN("failed to load ucode");
 		DRM_WARN("psp gfx command %s(0x%X) failed and response status is (0x%X)\n",
 			 psp_gfx_cmd_name(psp->cmd_buf_mem->cmd_id), psp->cmd_buf_mem->cmd_id,
 			 psp->cmd_buf_mem->resp.status);
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
index d451c359606a..c22c4aab7aab 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
@@ -216,15 +216,13 @@ int amdgpu_uvd_sw_init(struct amdgpu_device *adev)
 
 	r = request_firmware(&adev->uvd.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->uvd.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_uvd: Can't validate firmware\n");
 		release_firmware(adev->uvd.fw);
 		adev->uvd.fw = NULL;
 		return r;
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
index 8e8dee9fac9f..d86834b5e41f 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
@@ -160,14 +160,13 @@ int amdgpu_vce_sw_init(struct amdgpu_device *adev, unsigned long size)
 
 	r = request_firmware(&adev->vce.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vce: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->vce.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't validate firmware \"%s\"\n",
+		dev_err(adev->dev, "amdgpu_vce: Can't validate firmware\n",
 			fw_name);
 		release_firmware(adev->vce.fw);
 		adev->vce.fw = NULL;
diff --git a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
index 008a308a4eca..31238078bf56 100644
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
@@ -174,15 +174,13 @@ int amdgpu_vcn_sw_init(struct amdgpu_device *adev)
 
 	r = request_firmware(&adev->vcn.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->vcn.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vcn: Can't validate firmware\n");
 		release_firmware(adev->vcn.fw);
 		adev->vcn.fw = NULL;
 		return r;
diff --git a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
index c8ebd108548d..f9bc1da8128f 100644
--- a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
+++ b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
@@ -144,7 +144,7 @@ static int cik_sdma_init_microcode(struct amdgpu_device *adev)
 	}
 out:
 	if (err) {
-		pr_err("cik_sdma: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_sdma: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
index 16dbe593cba2..0f25109b8c02 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
@@ -4358,8 +4358,7 @@ static int gfx_v10_0_init_microcode(struct amdgpu_device *adev)
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx10: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx10: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c
index 6a8dadea40f9..640940830bad 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c
@@ -381,7 +381,7 @@ static int gfx_v6_0_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		pr_err("gfx6: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx6: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
index 37b4a3db6360..3a172220fc5d 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
@@ -976,7 +976,7 @@ static int gfx_v7_0_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		pr_err("gfx7: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx7: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
index e0302c23e9a7..aac155fae920 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
@@ -1231,8 +1231,7 @@ static int gfx_v8_0_init_microcode(struct amdgpu_device *adev)
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx8: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx8: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff --git a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
index 025184a556ee..0af58255971f 100644
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
@@ -1408,8 +1408,7 @@ static int gfx_v9_0_init_cp_gfx_microcode(struct amdgpu_device *adev,
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
@@ -1543,8 +1542,7 @@ static int gfx_v9_0_init_rlc_microcode(struct amdgpu_device *adev,
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.rlc_fw);
 		adev->gfx.rlc_fw = NULL;
 	}
@@ -1646,8 +1644,7 @@ static int gfx_v9_0_init_cp_compute_microcode(struct amdgpu_device *adev,
 	gfx_v9_0_check_fw_write_wait(adev);
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.mec_fw);
 		adev->gfx.mec_fw = NULL;
 		release_firmware(adev->gfx.mec2_fw);
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
index 0e81e03e9b49..fe09b62bae69 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
@@ -140,8 +140,7 @@ static int gmc_v6_0_init_microcode(struct amdgpu_device *adev)
 out:
 	if (err) {
 		dev_err(adev->dev,
-		       "si_mc: Failed to load firmware \"%s\"\n",
-		       fw_name);
+		       "si_mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
index 0a50fdaced7e..e529fd9b36e2 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
@@ -163,7 +163,7 @@ static int gmc_v7_0_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		pr_err("cik_mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff --git a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
index 492ebed2915b..7029642f7abc 100644
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
@@ -271,7 +271,7 @@ static int gmc_v8_0_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		pr_err("mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff --git a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c
index 5872d68ed13d..19368f360168 100644
--- a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c
@@ -75,8 +75,7 @@ static int psp_v10_0_init_microcode(struct psp_context *psp)
 		release_firmware(adev->psp.ta_fw);
 		adev->psp.ta_fw = NULL;
 		dev_info(adev->dev,
-			 "psp v10.0: Failed to load firmware \"%s\"\n",
-			 fw_name);
+			 "psp v10.0: Failed to load firmware\n");
 	} else {
 		err = amdgpu_ucode_validate(adev->psp.ta_fw);
 		if (err)
@@ -119,8 +118,7 @@ static int psp_v10_0_init_microcode(struct psp_context *psp)
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"psp v10.0: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"psp v10.0: Failed to load firmware\n");
 	}
 
 	return err;
diff --git a/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c b/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c
index 29bf9f09944b..0ba7c73cc4d8 100644
--- a/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c
@@ -144,7 +144,7 @@ static int psp_v11_0_init_microcode(struct psp_context *psp)
 			release_firmware(adev->psp.ta_fw);
 			adev->psp.ta_fw = NULL;
 			dev_info(adev->dev,
-				 "psp v11.0: Failed to load firmware \"%s\"\n", fw_name);
+				 "psp v11.0: Failed to load firmware\n");
 		} else {
 			err = amdgpu_ucode_validate(adev->psp.ta_fw);
 			if (err)
@@ -179,7 +179,7 @@ static int psp_v11_0_init_microcode(struct psp_context *psp)
 			release_firmware(adev->psp.ta_fw);
 			adev->psp.ta_fw = NULL;
 			dev_info(adev->dev,
-				 "psp v11.0: Failed to load firmware \"%s\"\n", fw_name);
+				 "psp v11.0: Failed to load firmware\n");
 		} else {
 			err = amdgpu_ucode_validate(adev->psp.ta_fw);
 			if (err)
diff --git a/drivers/gpu/drm/amd/amdgpu/psp_v12_0.c b/drivers/gpu/drm/amd/amdgpu/psp_v12_0.c
index cc649406234b..44cced561704 100644
--- a/drivers/gpu/drm/amd/amdgpu/psp_v12_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v12_0.c
@@ -75,8 +75,7 @@ static int psp_v12_0_init_microcode(struct psp_context *psp)
 		release_firmware(adev->psp.ta_fw);
 		adev->psp.ta_fw = NULL;
 		dev_info(adev->dev,
-			 "psp v12.0: Failed to load firmware \"%s\"\n",
-			 fw_name);
+			 "psp v12.0: Failed to load firmware\n");
 	} else {
 		err = amdgpu_ucode_validate(adev->psp.ta_fw);
 		if (err)
@@ -110,8 +109,7 @@ static int psp_v12_0_init_microcode(struct psp_context *psp)
 	adev->psp.ta_fw = NULL;
 	if (err) {
 		dev_err(adev->dev,
-			"psp v12.0: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"psp v12.0: Failed to load firmware\n");
 	}
 
 	return err;
diff --git a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
index 4509bd4cce2d..d275daaad31f 100644
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
@@ -175,7 +175,7 @@ static int sdma_v2_4_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		pr_err("sdma_v2_4: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v2_4: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff --git a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
index 135727b59c41..898775832e7b 100644
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
@@ -331,7 +331,7 @@ static int sdma_v3_0_init_microcode(struct amdgpu_device *adev)
 	}
 out:
 	if (err) {
-		pr_err("sdma_v3_0: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v3_0: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff --git a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
index 8931000dcd41..4e49b0c05744 100644
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
@@ -702,7 +702,7 @@ static int sdma_v4_0_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		DRM_ERROR("sdma_v4_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v4_0: Failed to load firmware\n");
 		sdma_v4_0_destroy_inst_ctx(adev);
 	}
 	return err;
diff --git a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
index 50bf3b71bc93..fab683ad8a1d 100644
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
@@ -303,7 +303,7 @@ static int sdma_v5_0_init_microcode(struct amdgpu_device *adev)
 	}
 out:
 	if (err) {
-		DRM_ERROR("sdma_v5_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v5_0: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff --git a/drivers/gpu/drm/amd/amdgpu/sdma_v5_2.c b/drivers/gpu/drm/amd/amdgpu/sdma_v5_2.c
index e32efcfb0c8b..67f25238b787 100644
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v5_2.c
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v5_2.c
@@ -193,7 +193,7 @@ static int sdma_v5_2_init_microcode(struct amdgpu_device *adev)
 
 out:
 	if (err) {
-		DRM_ERROR("sdma_v5_2: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v5_2: Failed to load firmware\n");
 		sdma_v5_2_destroy_inst_ctx(adev);
 	}
 	return err;
diff -ru source.orig/drivers/bluetooth/ath3k.c source/drivers/bluetooth/ath3k.c
--- source.orig/drivers/bluetooth/ath3k.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/bluetooth/ath3k.c	2023-06-07 10:05:23.230828642 -0400
@@ -383,7 +383,7 @@
 
 	ret = request_firmware(&firmware, filename, &udev->dev);
 	if (ret < 0) {
-		BT_ERR("Patch file not found %s", filename);
+		BT_ERR("Patch file not found");
 		return ret;
 	}
 
@@ -446,7 +446,7 @@
 
 	ret = request_firmware(&firmware, filename, &udev->dev);
 	if (ret < 0) {
-		BT_ERR("Configuration file not found %s", filename);
+		BT_ERR("Configuration file not found");
 		return ret;
 	}
 
@@ -505,8 +505,7 @@
 	ret = request_firmware(&firmware, ATH3K_FIRMWARE, &udev->dev);
 	if (ret < 0) {
 		if (ret == -ENOENT)
-			BT_ERR("Firmware file \"%s\" not found",
-							ATH3K_FIRMWARE);
+			BT_ERR("Firmware file not found");
 		else
 			BT_ERR("Firmware file \"%s\" request failed (err=%d)",
 							ATH3K_FIRMWARE, ret);
diff -ru source.orig/drivers/bluetooth/btbcm.c source/drivers/bluetooth/btbcm.c
--- source.orig/drivers/bluetooth/btbcm.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/bluetooth/btbcm.c	2023-06-07 10:07:36.541063483 -0400
@@ -577,9 +577,7 @@
 
 		release_firmware(fw);
 	} else {
-		bt_dev_err(hdev, "BCM: firmware Patch file not found, tried:");
-		for (i = 0; i < fw_name_count; i++)
-			bt_dev_err(hdev, "BCM: '%s'", fw_name[i]);
+		bt_dev_err(hdev, "BCM: firmware Patch file not found");
 	}
 
 	kfree(fw_name);
diff -ru source.orig/drivers/bluetooth/btintel.c source/drivers/bluetooth/btintel.c
--- source.orig/drivers/bluetooth/btintel.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/bluetooth/btintel.c	2023-06-07 10:10:25.838752300 -0400
@@ -346,8 +346,8 @@
 
 	err = request_firmware_direct(&fw, ddc_name, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to load Intel DDC file %s (%d)",
-			   ddc_name, err);
+		bt_dev_err(hdev, "Failed to load Intel DDC file(%d)",
+			   err);
 		return err;
 	}
 
@@ -1329,8 +1329,8 @@
 			return NULL;
 		}
 
-		bt_dev_err(hdev, "failed to open Intel firmware file: %s (%d)",
-			   fwname, ret);
+		bt_dev_err(hdev, "failed to open Intel firmware file(%d)",
+			   ret);
 
 		/* If the correct firmware patch file is not found, use the
 		 * default firmware patch file instead
@@ -1338,8 +1338,7 @@
 		snprintf(fwname, sizeof(fwname), "intel/ibt-hw-%x.%x.bseq",
 			 ver->hw_platform, ver->hw_variant);
 		if (request_firmware(&fw, fwname, &hdev->dev) < 0) {
-			bt_dev_err(hdev, "failed to open default fw file: %s",
-				   fwname);
+			bt_dev_err(hdev, "failed to open default fw file");
 			return NULL;
 		}
 	}
@@ -1830,8 +1829,8 @@
 			return 0;
 		}
 
-		bt_dev_err(hdev, "Failed to load Intel firmware file %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to load Intel firmware file (%d)",
+			   err);
 		return err;
 	}
 
@@ -2025,8 +2024,8 @@
 			return 0;
 		}
 
-		bt_dev_err(hdev, "Failed to load Intel firmware file %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to load Intel firmware file (%d)",
+			   err);
 
 		return err;
 	}
diff -ru source.orig/drivers/bluetooth/btrtl.c source/drivers/bluetooth/btrtl.c
--- source.orig/drivers/bluetooth/btrtl.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/bluetooth/btrtl.c	2023-06-07 10:12:42.272847241 -0400
@@ -656,8 +656,7 @@
 	btrtl_dev->fw_len = rtl_load_file(hdev, btrtl_dev->ic_info->fw_name,
 					  &btrtl_dev->fw_data);
 	if (btrtl_dev->fw_len < 0) {
-		rtl_dev_err(hdev, "firmware file %s not found",
-			    btrtl_dev->ic_info->fw_name);
+		rtl_dev_err(hdev, "firmware not found");
 		ret = btrtl_dev->fw_len;
 		goto err_free;
 	}
@@ -674,8 +673,7 @@
 						   &btrtl_dev->cfg_data);
 		if (btrtl_dev->ic_info->config_needed &&
 		    btrtl_dev->cfg_len <= 0) {
-			rtl_dev_err(hdev, "mandatory config file %s not found",
-				    btrtl_dev->ic_info->cfg_name);
+			rtl_dev_err(hdev, "mandatory config file not found");
 			ret = btrtl_dev->cfg_len;
 			goto err_free;
 		}
diff -ru source.orig/drivers/bluetooth/btusb.c source/drivers/bluetooth/btusb.c
--- source.orig/drivers/bluetooth/btusb.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/bluetooth/btusb.c	2023-06-07 10:14:25.791382438 -0400
@@ -3521,8 +3521,8 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err) {
-		bt_dev_err(hdev, "failed to request NVM file: %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "failed to request NVM file (%d)",
+			   err);
 		return err;
 	}
 
diff -ru source.orig/drivers/bluetooth/hci_ag6xx.c source/drivers/bluetooth/hci_ag6xx.c
--- source.orig/drivers/bluetooth/hci_ag6xx.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/bluetooth/hci_ag6xx.c	2023-06-07 10:11:38.309744380 -0400
@@ -195,8 +195,8 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to open Intel bddata file: %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to open Intel bddata file (%d)",
+			   err);
 		goto patch;
 	}
 
@@ -232,8 +232,8 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to open Intel patch file: %s(%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to open Intel patch file (%d)",
+			   err);
 		goto complete;
 	}
 	fw_ptr = fw->data;
diff -ru source.orig/drivers/bluetooth/hci_ll.c source/drivers/bluetooth/hci_ll.c
--- source.orig/drivers/bluetooth/hci_ll.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/bluetooth/hci_ll.c	2023-06-07 10:16:54.469255963 -0400
@@ -539,7 +539,7 @@
 
 	err = request_firmware(&fw, bts_scr_name, &lldev->serdev->dev);
 	if (err || !fw->data || !fw->size) {
-		bt_dev_err(lldev->hu.hdev, "request_firmware failed(errno %d) for %s",
+		bt_dev_err(lldev->hu.hdev, "request_firmware failed (errno %d) for %s",
 			   err, bts_scr_name);
 		return -EINVAL;
 	}
diff -ru source.orig/drivers/bluetooth/hci_mrvl.c source/drivers/bluetooth/hci_mrvl.c
--- source.orig/drivers/bluetooth/hci_mrvl.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/bluetooth/hci_mrvl.c	2023-06-07 10:17:17.868919257 -0400
@@ -277,7 +277,7 @@
 
 	err = request_firmware(&fw, name, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to load firmware file %s", name);
+		bt_dev_err(hdev, "Failed to load firmware");
 		return err;
 	}
 
diff -ru source.orig/drivers/gpu/drm/i915/display/intel_dmc.c source/drivers/gpu/drm/i915/display/intel_dmc.c
--- source.orig/drivers/gpu/drm/i915/display/intel_dmc.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/gpu/drm/i915/display/intel_dmc.c	2023-06-07 09:37:13.039233908 -0400
@@ -697,11 +697,8 @@
 			 DMC_VERSION_MINOR(dmc->version));
 	} else {
 		drm_notice(&dev_priv->drm,
-			   "Failed to load DMC firmware %s."
-			   " Disabling runtime power management.\n",
-			   dmc->fw_path);
-		drm_notice(&dev_priv->drm, "DMC firmware homepage: %s",
-			   INTEL_UC_FIRMWARE_URL);
+			   "Failed to load DMC firmware."
+			   " Disabling runtime power management.\n");
 	}
 
 	release_firmware(fw);
diff -ru source.orig/drivers/gpu/drm/i915/display/intel_opregion.c source/drivers/gpu/drm/i915/display/intel_opregion.c
--- source.orig/drivers/gpu/drm/i915/display/intel_opregion.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/gpu/drm/i915/display/intel_opregion.c	2023-06-07 09:45:25.068035455 -0400
@@ -824,8 +824,8 @@
 	ret = request_firmware(&fw, name, dev_priv->drm.dev);
 	if (ret) {
 		drm_err(&dev_priv->drm,
-			"Requesting VBT firmware \"%s\" failed (%d)\n",
-			name, ret);
+			"Requesting VBT firmware failed (%d)\n",
+			ret);
 		return ret;
 	}
 
@@ -841,8 +841,7 @@
 			ret = -ENOMEM;
 		}
 	} else {
-		drm_dbg_kms(&dev_priv->drm, "Invalid VBT firmware \"%s\"\n",
-			    name);
+		drm_dbg_kms(&dev_priv->drm, "Invalid VBT firmware\n");
 		ret = -EINVAL;
 	}
 
diff -ru source.orig/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c source/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c
--- source.orig/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c	2023-06-07 09:29:12.000000000 -0400
+++ source/drivers/gpu/drm/i915/gt/uc/intel_uc_fw.c	2023-06-07 09:41:29.003526353 -0400
@@ -388,10 +388,8 @@
 				  INTEL_UC_FIRMWARE_MISSING :
 				  INTEL_UC_FIRMWARE_ERROR);
 
-	drm_notice(&i915->drm, "%s firmware %s: fetch failed with error %d\n",
-		   intel_uc_fw_type_repr(uc_fw->type), uc_fw->path, err);
-	drm_info(&i915->drm, "%s firmware(s) can be downloaded from %s\n",
-		 intel_uc_fw_type_repr(uc_fw->type), INTEL_UC_FIRMWARE_URL);
+	drm_notice(&i915->drm, "%s firmware: fetch failed with error %d\n",
+		   intel_uc_fw_type_repr(uc_fw->type), err);
 
 	release_firmware(fw);		/* OK even if fw is NULL */
 	return err;
@@ -523,9 +521,8 @@
 	return 0;
 
 fail:
-	i915_probe_error(gt->i915, "Failed to load %s firmware %s (%d)\n",
-			 intel_uc_fw_type_repr(uc_fw->type), uc_fw->path,
-			 err);
+	i915_probe_error(gt->i915, "Failed to load %s firmware (%d)\n",
+			 intel_uc_fw_type_repr(uc_fw->type), err);
 	intel_uc_fw_change_status(uc_fw, INTEL_UC_FIRMWARE_LOAD_FAIL);
 	return err;
 }
diff -ru source.orig/drivers/gpu/drm/i915/gvt/firmware.c source/drivers/gpu/drm/i915/gvt/firmware.c
--- source.orig/drivers/gpu/drm/i915/gvt/firmware.c	2021-10-31 16:53:10.000000000 -0400
+++ source/drivers/gpu/drm/i915/gvt/firmware.c	2023-06-07 09:46:33.759010803 -0400
@@ -190,8 +190,8 @@
 	return 0;
 
 invalid_firmware:
-	gvt_dbg_core("Invalid firmware: %s [file] 0x%llx [request] 0x%llx\n",
-		     item, file, request);
+	gvt_dbg_core("Invalid firmware [request] 0x%llx\n",
+		     request);
 	return -EINVAL;
 }
 
@@ -238,7 +238,7 @@
 		 GVT_FIRMWARE_PATH, pdev->vendor, pdev->device,
 		 pdev->revision);
 
-	gvt_dbg_core("request hw state firmware %s...\n", path);
+	gvt_dbg_core("request hw state firmware\n");
 
 	ret = request_firmware(&fw, path, gvt->gt->i915->drm.dev);
 	kfree(path);
