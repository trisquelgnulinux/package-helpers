The Linux-Libre deblob script that is used to make the Trisquel kernel packages disables all functionality related to loading nonfree firmware blobs. Even if the user chooses to install the blob files, these would still not be loaded and the driver would not activate.
An alternative solution is to preserve the loading functionality and remove the *advertisment* to the user of the blob filenames when these fail to be loaded, as to not imply that those files are recommended in any way, so the driver would just print "failed to load firmware" or equivalent. This allows the user to use the driver if they so decide.

This method is done by a patch (silent-accept-firmware.patch) that removes all the instances where the blob filenames are printed to the user (via kernel logs), and a section on the package helper that takes care of preventing the deblob script from acting on the files modified by the patch. This is done manually, for individual drivers (usually those for very common devices). It needs to be reviewed on any new major release, checking that no new lines were added to the upstream driver in where it prints the blob filename on the log.
Printing the blob filename on success operations (that is, when the blob file is present) is acceptable. If in doubt, all instances of printing the blob filenames should be removed.

diff -ru a/arch/x86/kernel/cpu/microcode/amd.c b/arch/x86/kernel/cpu/microcode/amd.c
--- a/arch/x86/kernel/cpu/microcode/amd.c	2021-06-14 01:15:29.636702258 +0200
+++ b/arch/x86/kernel/cpu/microcode/amd.c	2021-06-14 01:16:26.456820658 +0200
@@ -902,7 +902,7 @@
 		snprintf(fw_name, sizeof(fw_name), "amd-ucode/microcode_amd_fam%.2xh.bin", c->x86);
 
 	if (request_firmware_direct(&fw, (const char *)fw_name, device)) {
-		pr_debug("failed to load file %s\n", fw_name);
+		pr_debug("failed to load file\n");
 		goto out;
 	}
 
diff -ru a/arch/x86/kernel/cpu/microcode/intel.c b/arch/x86/kernel/cpu/microcode/intel.c
--- a/arch/x86/kernel/cpu/microcode/intel.c	2021-06-14 01:15:29.636702258 +0200
+++ b/arch/x86/kernel/cpu/microcode/intel.c	2021-06-14 01:16:26.456820658 +0200
@@ -940,7 +940,7 @@
 		c->x86, c->x86_model, c->x86_stepping);
 
 	if (request_firmware_direct(&firmware, name, device)) {
-		pr_debug("data file %s load failed\n", name);
+		pr_debug("data file load failed\n");
 		return UCODE_NFOUND;
 	}
 
diff -ru a/drivers/base/firmware_loader/fallback.c b/drivers/base/firmware_loader/fallback.c
--- a/drivers/base/firmware_loader/fallback.c	2021-06-14 01:15:29.876702766 +0200
+++ b/drivers/base/firmware_loader/fallback.c	2021-06-14 01:16:26.460820667 +0200
@@ -521,7 +521,7 @@
 	if (opt_flags & FW_OPT_UEVENT) {
 		fw_priv->need_uevent = true;
 		dev_set_uevent_suppress(f_dev, false);
-		dev_dbg(f_dev, "firmware: requesting %s\n", fw_priv->fw_name);
+		dev_dbg(f_dev, "firmware: requesting\n");
 		kobject_uevent(&fw_sysfs->dev.kobj, KOBJ_ADD);
 	} else {
 		timeout = MAX_JIFFY_OFFSET;
@@ -560,15 +560,13 @@
 	if (opt_flags & FW_OPT_NOWAIT) {
 		timeout = usermodehelper_read_lock_wait(timeout);
 		if (!timeout) {
-			dev_dbg(device, "firmware: %s loading timed out\n",
-				name);
+			dev_dbg(device, "firmware: loading timed out\n");
 			return -EBUSY;
 		}
 	} else {
 		ret = usermodehelper_read_trylock();
 		if (WARN_ON(ret)) {
-			dev_err(device, "firmware: %s will not be loaded\n",
-				name);
+			dev_err(device, "firmware: will not be loaded\n");
 			return ret;
 		}
 	}
@@ -650,10 +648,8 @@
 		return ret;
 
 	if (!(opt_flags & FW_OPT_NO_WARN))
-		dev_warn(device, "Falling back to sysfs fallback for: %s\n",
-				 name);
+		dev_warn(device, "Falling back to sysfs fallback\n");
 	else
-		dev_dbg(device, "Falling back to sysfs fallback for: %s\n",
-				name);
+		dev_dbg(device, "Falling back to sysfs fallback\n");
 	return fw_load_from_user_helper(fw, name, device, opt_flags);
 }
diff -ru a/drivers/base/firmware_loader/main.c b/drivers/base/firmware_loader/main.c
--- a/drivers/base/firmware_loader/main.c	2021-06-14 01:15:29.876702766 +0200
+++ b/drivers/base/firmware_loader/main.c	2021-06-14 01:16:26.460820667 +0200
@@ -538,20 +538,18 @@
 						       READING_FIRMWARE);
 		if (rc < 0) {
 			if (rc != -ENOENT)
-				dev_warn(device, "loading %s failed with error %d\n",
-					 path, rc);
+				dev_warn(device, "loading failed with error %d\n",
+					 rc);
 			else
-				dev_dbg(device, "loading %s failed for no such file or directory.\n",
-					 path);
+				dev_dbg(device, "loading failed for no such file or directory.\n");
 			continue;
 		}
 		size = rc;
 		rc = 0;
 
-		dev_dbg(device, "Loading firmware from %s\n", path);
+		dev_dbg(device, "Loading firmware\n");
 		if (decompress) {
-			dev_dbg(device, "f/w decompressing %s\n",
-				fw_priv->fw_name);
+			dev_dbg(device, "f/w decompressing\n");
 			rc = decompress(device, fw_priv, size, buffer);
 			/* discard the superfluous original content */
 			vfree(buffer);
@@ -561,8 +559,7 @@
 				continue;
 			}
 		} else {
-			dev_dbg(device, "direct-loading %s\n",
-				fw_priv->fw_name);
+			dev_dbg(device, "direct-loading\n");
 			if (!fw_priv->data)
 				fw_priv->data = buffer;
 			fw_priv->size = size;
@@ -737,7 +734,7 @@
 	}
 
 	if (fw_get_builtin_firmware(firmware, name, dbuf, size)) {
-		dev_dbg(device, "using built-in %s\n", name);
+		dev_dbg(device, "using built-in\n");
 		return 0; /* assigned */
 	}
 
@@ -827,8 +824,8 @@
 	if (ret) {
 		if (!(opt_flags & FW_OPT_NO_WARN))
 			dev_warn(device,
-				 "Direct firmware load for %s failed with error %d\n",
-				 name, ret);
+				 "Direct firmware load failed with error %d\n",
+				 ret);
 		if (nondirect)
 			ret = firmware_fallback_sysfs(fw, name, device,
 						      opt_flags, ret);
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2021-06-14 01:15:30.504704095 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_cgs.c	2021-06-14 01:16:26.460820667 +0200
@@ -443,7 +443,7 @@
 
 			err = amdgpu_ucode_validate(adev->pm.fw);
 			if (err) {
-				DRM_ERROR("Failed to load firmware \"%s\"", fw_name);
+				DRM_ERROR("Failed to load firmware");
 				release_firmware(adev->pm.fw);
 				adev->pm.fw = NULL;
 				return err;
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c	2021-06-14 01:15:30.540704172 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_device.c	2021-06-14 01:16:26.464820675 +0200
@@ -1598,15 +1598,13 @@
 	err = request_firmware(&adev->firmware.gpu_info_fw, fw_name, adev->dev);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to load gpu_info firmware \"%s\"\n",
-			fw_name);
+			"Failed to load gpu_info firmware\n");
 		goto out;
 	}
 	err = amdgpu_ucode_validate(adev->firmware.gpu_info_fw);
 	if (err) {
 		dev_err(adev->dev,
-			"Failed to validate gpu_info firmware \"%s\"\n",
-			fw_name);
+			"Failed to validate gpu_info firmware\n");
 		goto out;
 	}
 
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2021-06-14 01:15:30.512704112 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_uvd.c	2021-06-14 01:26:26.857914676 +0200
@@ -189,15 +189,13 @@
 
 	r = request_firmware(&adev->uvd.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_uvd: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->uvd.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_uvd: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_uvd: Can't validate firmware\n");
 		release_firmware(adev->uvd.fw);
 		adev->uvd.fw = NULL;
 		return r;
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2021-06-14 01:15:30.512704112 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vce.c	2021-06-14 01:27:11.405988585 +0200
@@ -158,15 +158,13 @@
 
 	r = request_firmware(&adev->vce.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vce: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->vce.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vce: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vce: Can't validate firmware\n");
 		release_firmware(adev->vce.fw);
 		adev->vce.fw = NULL;
 		return r;
diff -ru a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c
--- a/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c	2021-06-14 01:15:30.544704180 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/amdgpu_vcn.c	2021-06-14 01:31:27.674403292 +0200
@@ -112,15 +112,13 @@
 
 	r = request_firmware(&adev->vcn.fw, fw_name, adev->dev);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vcn: Can't load firmware\n");
 		return r;
 	}
 
 	r = amdgpu_ucode_validate(adev->vcn.fw);
 	if (r) {
-		dev_err(adev->dev, "amdgpu_vcn: Can't validate firmware \"%s\"\n",
-			fw_name);
+		dev_err(adev->dev, "amdgpu_vcn: Can't validate firmware\n");
 		release_firmware(adev->vcn.fw);
 		adev->vcn.fw = NULL;
 		return r;
diff -ru a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c
--- a/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2021-06-14 01:15:30.544704180 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/cik_sdma.c	2021-06-14 01:16:26.464820675 +0200
@@ -144,7 +144,7 @@
 	}
 out:
 	if (err) {
-		pr_err("cik_sdma: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_sdma: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c	2021-06-14 01:15:30.544704180 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v10_0.c	2021-06-14 01:19:58.765234735 +0200
@@ -3675,8 +3675,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx10: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx10: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c	2021-06-14 01:15:30.520704129 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v6_0.c	2021-06-14 01:16:26.464820675 +0200
@@ -381,7 +381,7 @@
 
 out:
 	if (err) {
-		pr_err("gfx6: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx6: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2021-06-14 01:15:30.520704129 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v7_0.c	2021-06-14 01:16:26.464820675 +0200
@@ -976,7 +976,7 @@
 
 out:
 	if (err) {
-		pr_err("gfx7: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("gfx7: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2021-06-14 01:15:30.544704180 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v8_0.c	2021-06-14 01:16:26.468820683 +0200
@@ -1222,8 +1222,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx8: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx8: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c	2021-06-14 01:15:30.544704180 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gfx_v9_0.c	2021-06-14 01:32:32.298505650 +0200
@@ -1366,8 +1366,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.pfp_fw);
 		adev->gfx.pfp_fw = NULL;
 		release_firmware(adev->gfx.me_fw);
@@ -1501,8 +1500,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.rlc_fw);
 		adev->gfx.rlc_fw = NULL;
 	}
@@ -1590,8 +1588,7 @@
 	gfx_v9_0_check_fw_write_wait(adev);
 	if (err) {
 		dev_err(adev->dev,
-			"gfx9: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"gfx9: Failed to load firmware\n");
 		release_firmware(adev->gfx.mec_fw);
 		adev->gfx.mec_fw = NULL;
 		release_firmware(adev->gfx.mec2_fw);
diff -ru a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c	2021-06-14 01:15:30.524704138 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v6_0.c	2021-06-14 01:32:45.474436916 +0200
@@ -140,8 +140,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-		       "si_mc: Failed to load firmware \"%s\"\n",
-		       fw_name);
+		       "si_mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2021-06-14 01:15:30.524704138 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v7_0.c	2021-06-14 01:16:26.472820691 +0200
@@ -163,7 +163,7 @@
 
 out:
 	if (err) {
-		pr_err("cik_mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("cik_mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c
--- a/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2021-06-14 01:15:30.524704138 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/gmc_v8_0.c	2021-06-14 01:16:26.472820691 +0200
@@ -280,7 +280,7 @@
 
 out:
 	if (err) {
-		pr_err("mc: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("mc: Failed to load firmware\n");
 		release_firmware(adev->gmc.fw);
 		adev->gmc.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c
--- a/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c	2021-06-14 01:15:30.532704155 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v10_0.c	2021-06-14 01:21:32.609406505 +0200
@@ -75,8 +75,7 @@
 		release_firmware(adev->psp.ta_fw);
 		adev->psp.ta_fw = NULL;
 		dev_info(adev->dev,
-			 "psp v10.0: Failed to load firmware \"%s\"\n",
-			 fw_name);
+			 "psp v10.0: Failed to load firmware\n");
 	} else {
 		err = amdgpu_ucode_validate(adev->psp.ta_fw);
 		if (err)
@@ -111,8 +110,7 @@
 out:
 	if (err) {
 		dev_err(adev->dev,
-			"psp v10.0: Failed to load firmware \"%s\"\n",
-			fw_name);
+			"psp v10.0: Failed to load firmware\n");
 	}
 
 	return err;
diff -ru a/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c b/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c
--- a/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c	2021-06-14 01:15:30.532704155 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/psp_v11_0.c	2021-06-14 01:21:51.357440156 +0200
@@ -116,7 +116,7 @@
 			release_firmware(adev->psp.ta_fw);
 			adev->psp.ta_fw = NULL;
 			dev_info(adev->dev,
-				 "psp v11.0: Failed to load firmware \"%s\"\n", fw_name);
+				 "psp v11.0: Failed to load firmware\n");
 		} else {
 			err = amdgpu_ucode_validate(adev->psp.ta_fw);
 			if (err)
@@ -145,7 +145,7 @@
 			release_firmware(adev->psp.ta_fw);
 			adev->psp.ta_fw = NULL;
 			dev_info(adev->dev,
-				 "psp v11.0: Failed to load firmware \"%s\"\n", fw_name);
+				 "psp v11.0: Failed to load firmware\n");
 		} else {
 			err = amdgpu_ucode_validate(adev->psp.ta_fw);
 			if (err)
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2021-06-14 01:15:30.532704155 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v2_4.c	2021-06-14 01:16:26.472820691 +0200
@@ -175,7 +175,7 @@
 
 out:
 	if (err) {
-		pr_err("sdma_v2_4: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v2_4: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2021-06-14 01:15:30.532704155 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v3_0.c	2021-06-14 01:16:26.472820691 +0200
@@ -331,7 +331,7 @@
 	}
 out:
 	if (err) {
-		pr_err("sdma_v3_0: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("sdma_v3_0: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c	2021-06-14 01:15:30.532704155 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v4_0.c	2021-06-14 01:16:26.472820691 +0200
@@ -639,7 +639,7 @@
 
 out:
 	if (err) {
-		DRM_ERROR("sdma_v4_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v4_0: Failed to load firmware\n");
 		sdma_v4_0_destroy_inst_ctx(adev);
 	}
 	return err;
diff -ru a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c
--- a/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c	2021-06-14 01:15:30.532704155 +0200
+++ b/drivers/gpu/drm/amd/amdgpu/sdma_v5_0.c	2021-06-14 01:20:49.889329026 +0200
@@ -248,7 +248,7 @@
 	}
 out:
 	if (err) {
-		DRM_ERROR("sdma_v5_0: Failed to load firmware \"%s\"\n", fw_name);
+		DRM_ERROR("sdma_v5_0: Failed to load firmware\n");
 		for (i = 0; i < adev->sdma.num_instances; i++) {
 			release_firmware(adev->sdma.instance[i].fw);
 			adev->sdma.instance[i].fw = NULL;
diff -ru a/drivers/gpu/drm/amd/amdgpu/si_dpm.c b/drivers/gpu/drm/amd/amdgpu/si_dpm.c
--- a/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c	2021-06-14 01:15:30.536704163 +0200
+++ b/drivers/gpu/drm/amd/pm/powerplay/si_dpm.c	2021-06-14 01:16:26.476820699 +0200
@@ -7655,8 +7655,8 @@
 
 out:
 	if (err) {
-		DRM_ERROR("si_smc: Failed to load firmware. err = %d\"%s\"\n",
-			  err, fw_name);
+		DRM_ERROR("si_smc: Failed to load firmware. err = %d\n",
+			  err);
 		release_firmware(adev->pm.fw);
 		adev->pm.fw = NULL;
 	}
diff -ru a/drivers/gpu/drm/drm_edid_load.c b/drivers/gpu/drm/drm_edid_load.c
--- a/drivers/gpu/drm/drm_edid_load.c	2021-06-14 01:15:31.428706050 +0200
+++ b/drivers/gpu/drm/drm_edid_load.c	2021-06-14 01:16:26.476820699 +0200
@@ -195,8 +195,8 @@
 		err = request_firmware(&fw, name, &pdev->dev);
 		platform_device_unregister(pdev);
 		if (err) {
-			DRM_ERROR("Requesting EDID firmware \"%s\" failed (err=%d)\n",
-				  name, err);
+			DRM_ERROR("Requesting EDID firmware failed (err=%d)\n",
+				  err);
 			return ERR_PTR(err);
 		}
 
diff -ru a/drivers/gpu/drm/r128/r128_cce.c b/drivers/gpu/drm/r128/r128_cce.c
--- a/drivers/gpu/drm/r128/r128_cce.c	2021-06-14 01:15:31.724706676 +0200
+++ b/drivers/gpu/drm/r128/r128_cce.c	2021-06-14 01:16:26.476820699 +0200
@@ -163,14 +163,13 @@
 	rc = request_firmware(&fw, FIRMWARE_NAME, &pdev->dev);
 	platform_device_unregister(pdev);
 	if (rc) {
-		pr_err("r128_cce: Failed to load firmware \"%s\"\n",
-		       FIRMWARE_NAME);
+		pr_err("r128_cce: Failed to load firmware\n");
 		return rc;
 	}
 
 	if (fw->size != 256 * 8) {
-		pr_err("r128_cce: Bogus length %zu in firmware \"%s\"\n",
-		       fw->size, FIRMWARE_NAME);
+		pr_err("r128_cce: Bogus length %zu in firmware\n",
+		       fw->size);
 		rc = -EINVAL;
 		goto out_release;
 	}
diff -ru a/drivers/gpu/drm/radeon/cik.c b/drivers/gpu/drm/radeon/cik.c
--- a/drivers/gpu/drm/radeon/cik.c	2021-06-14 01:15:31.732706693 +0200
+++ b/drivers/gpu/drm/radeon/cik.c	2021-06-14 01:16:26.476820699 +0200
@@ -2058,7 +2058,7 @@
 	default: BUG();
 	}
 
-	DRM_INFO("Loading %s Microcode\n", new_chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", new_chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
@@ -2068,16 +2068,15 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2092,15 +2091,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2115,15 +2113,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2138,15 +2135,14 @@
 		if (err)
 			goto out;
 		if (rdev->mec_fw->size != mec_req_size) {
-			pr_err("cik_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mec_fw->size, fw_name);
+			pr_err("cik_cp: Bogus length %zu in firmware\n",
+			       rdev->mec_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->mec_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2176,15 +2172,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("cik_rlc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->rlc_fw->size, fw_name);
+			pr_err("cik_rlc: Bogus length %zu in firmware\n",
+			       rdev->rlc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2199,15 +2194,14 @@
 		if (err)
 			goto out;
 		if (rdev->sdma_fw->size != sdma_req_size) {
-			pr_err("cik_sdma: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->sdma_fw->size, fw_name);
+			pr_err("cik_sdma: Bogus length %zu in firmware\n",
+ 			       rdev->sdma_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->sdma_fw);
 		if (err) {
-			pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_fw: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -2229,16 +2223,15 @@
 			}
 			if ((rdev->mc_fw->size != mc_req_size) &&
 			    (rdev->mc_fw->size != mc2_req_size)){
-				pr_err("cik_mc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->mc_fw->size, fw_name);
+				pr_err("cik_mc: Bogus length %zu in firmware\n",
+				       rdev->mc_fw->size);
 				err = -EINVAL;
 			}
 			DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
 		} else {
 			err = radeon_ucode_validate(rdev->mc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-				       fw_name);
+				pr_err("cik_fw: validation failed for firmware\n");
 				goto out;
 			} else {
 				new_fw++;
@@ -2254,21 +2247,19 @@
 			snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 			err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 			if (err) {
-				pr_err("smc: error loading firmware \"%s\"\n",
-				       fw_name);
+				pr_err("smc: error loading firmware\n");
 				release_firmware(rdev->smc_fw);
 				rdev->smc_fw = NULL;
 				err = 0;
 			} else if (rdev->smc_fw->size != smc_req_size) {
-				pr_err("cik_smc: Bogus length %zu in firmware \"%s\"\n",
-				       rdev->smc_fw->size, fw_name);
+				pr_err("cik_smc: Bogus length %zu in firmware\n",
+				       rdev->smc_fw->size);
 				err = -EINVAL;
 			}
 		} else {
 			err = radeon_ucode_validate(rdev->smc_fw);
 			if (err) {
-				pr_err("cik_fw: validation failed for firmware \"%s\"\n",
-				       fw_name);
+				pr_err("cik_fw: validation failed for firmware\n");
 				goto out;
 			} else {
 				new_fw++;
@@ -2288,8 +2279,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("cik_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("cik_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -ru a/drivers/gpu/drm/radeon/r100.c b/drivers/gpu/drm/radeon/r100.c
--- a/drivers/gpu/drm/radeon/r100.c	2021-06-14 01:15:31.736706702 +0200
+++ b/drivers/gpu/drm/radeon/r100.c	2021-06-14 01:37:19.785010983 +0200
@@ -1048,10 +1048,10 @@
 
 	err = request_firmware(&rdev->me_fw, fw_name, rdev->dev);
 	if (err) {
-		pr_err("radeon_cp: Failed to load firmware \"%s\"\n", fw_name);
+		pr_err("radeon_cp: Failed to load firmware\n");
 	} else if (rdev->me_fw->size % 8) {
-		pr_err("radeon_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		pr_err("radeon_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 		release_firmware(rdev->me_fw);
 		rdev->me_fw = NULL;
diff -ru a/drivers/gpu/drm/radeon/r600.c b/drivers/gpu/drm/radeon/r600.c
--- a/drivers/gpu/drm/radeon/r600.c	2021-06-14 01:15:31.740706710 +0200
+++ b/drivers/gpu/drm/radeon/r600.c	2021-06-14 01:16:26.484820716 +0200
@@ -2549,15 +2549,15 @@
 		rlc_req_size = R600_RLC_UCODE_SIZE * 4;
 	}
 
-	DRM_INFO("Loading %s Microcode\n", chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
 	if (err)
 		goto out;
 	if (rdev->pfp_fw->size != pfp_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->pfp_fw->size, fw_name);
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
+		       rdev->pfp_fw->size);
 		err = -EINVAL;
 		goto out;
 	}
@@ -2567,8 +2567,8 @@
 	if (err)
 		goto out;
 	if (rdev->me_fw->size != me_req_size) {
-		pr_err("r600_cp: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->me_fw->size, fw_name);
+		pr_err("r600_cp: Bogus length %zu in firmware\n",
+		       rdev->me_fw->size);
 		err = -EINVAL;
 	}
 
@@ -2577,8 +2577,8 @@
 	if (err)
 		goto out;
 	if (rdev->rlc_fw->size != rlc_req_size) {
-		pr_err("r600_rlc: Bogus length %zu in firmware \"%s\"\n",
-		       rdev->rlc_fw->size, fw_name);
+		pr_err("r600_rlc: Bogus length %zu in firmware\n",
+		       rdev->rlc_fw->size);
 		err = -EINVAL;
 	}
 
@@ -2586,13 +2586,13 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", smc_chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			pr_err("smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	}
@@ -2600,8 +2600,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("r600_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("r600_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -ru a/drivers/gpu/drm/radeon/radeon_uvd.c b/drivers/gpu/drm/radeon/radeon_uvd.c
--- a/drivers/gpu/drm/radeon/radeon_uvd.c	2021-06-14 01:15:31.752706735 +0200
+++ b/drivers/gpu/drm/radeon/radeon_uvd.c	2021-06-14 01:16:26.484820716 +0200
@@ -140,8 +140,7 @@
 		/* Let's try to load the newer firmware first */
 		r = request_firmware(&rdev->uvd_fw, fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
-				fw_name);
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n");
 		} else {
 			struct common_firmware_header *hdr = (void *)rdev->uvd_fw->data;
 			unsigned version_major, version_minor, family_id;
@@ -175,8 +174,7 @@
 	if (!fw_name || r) {
 		r = request_firmware(&rdev->uvd_fw, legacy_fw_name, rdev->dev);
 		if (r) {
-			dev_err(rdev->dev, "radeon_uvd: Can't load firmware \"%s\"\n",
-				legacy_fw_name);
+			dev_err(rdev->dev, "radeon_uvd: Can't load firmware\n");
 			return r;
 		}
 	}
diff -ru a/drivers/gpu/drm/radeon/radeon_vce.c b/drivers/gpu/drm/radeon/radeon_vce.c
--- a/drivers/gpu/drm/radeon/radeon_vce.c	2021-06-14 01:15:31.752706735 +0200
+++ b/drivers/gpu/drm/radeon/radeon_vce.c	2021-06-14 01:16:26.484820716 +0200
@@ -87,8 +87,7 @@
 
 	r = request_firmware(&rdev->vce_fw, fw_name, rdev->dev);
 	if (r) {
-		dev_err(rdev->dev, "radeon_vce: Can't load firmware \"%s\"\n",
-			fw_name);
+		dev_err(rdev->dev, "radeon_vce: Can't load firmware\n");
 		return r;
 	}
 
diff -ru a/drivers/gpu/drm/radeon/si.c b/drivers/gpu/drm/radeon/si.c
--- a/drivers/gpu/drm/radeon/si.c	2021-06-14 01:15:31.756706744 +0200
+++ b/drivers/gpu/drm/radeon/si.c	2021-06-14 01:16:26.484820716 +0200
@@ -1780,7 +1780,7 @@
 	if (((RREG32(MC_SEQ_MISC0) & 0xff000000) >> 24) == 0x58)
 		si58_fw = true;
 
-	DRM_INFO("Loading %s Microcode\n", new_chip_name);
+	DRM_INFO("Loading Microcode\n");
 
 	snprintf(fw_name, sizeof(fw_name), "radeon/%s_pfp.bin", new_chip_name);
 	err = request_firmware(&rdev->pfp_fw, fw_name, rdev->dev);
@@ -1790,16 +1790,15 @@
 		if (err)
 			goto out;
 		if (rdev->pfp_fw->size != pfp_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->pfp_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->pfp_fw->size);
 			err = -EINVAL;
 			goto out;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->pfp_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1814,15 +1813,14 @@
 		if (err)
 			goto out;
 		if (rdev->me_fw->size != me_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->me_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->me_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->me_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1837,15 +1835,14 @@
 		if (err)
 			goto out;
 		if (rdev->ce_fw->size != ce_req_size) {
-			pr_err("si_cp: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->ce_fw->size, fw_name);
+			pr_err("si_cp: Bogus length %zu in firmware\n",
+			       rdev->ce_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->ce_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1860,15 +1857,14 @@
 		if (err)
 			goto out;
 		if (rdev->rlc_fw->size != rlc_req_size) {
-			pr_err("si_rlc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->rlc_fw->size, fw_name);
+			pr_err("si_rlc: Bogus length %zu in firmware\n",
+			       rdev->rlc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->rlc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1891,16 +1887,15 @@
 		}
 		if ((rdev->mc_fw->size != mc_req_size) &&
 		    (rdev->mc_fw->size != mc2_req_size)) {
-			pr_err("si_mc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->mc_fw->size, fw_name);
+			pr_err("si_mc: Bogus length %zu in firmware\n",
+			       rdev->mc_fw->size);
 			err = -EINVAL;
 		}
 		DRM_INFO("%s: %zu bytes\n", fw_name, rdev->mc_fw->size);
 	} else {
 		err = radeon_ucode_validate(rdev->mc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1918,20 +1913,19 @@
 		snprintf(fw_name, sizeof(fw_name), "radeon/%s_smc.bin", chip_name);
 		err = request_firmware(&rdev->smc_fw, fw_name, rdev->dev);
 		if (err) {
-			pr_err("smc: error loading firmware \"%s\"\n", fw_name);
+			pr_err("smc: error loading firmware\n");
 			release_firmware(rdev->smc_fw);
 			rdev->smc_fw = NULL;
 			err = 0;
 		} else if (rdev->smc_fw->size != smc_req_size) {
-			pr_err("si_smc: Bogus length %zu in firmware \"%s\"\n",
-			       rdev->smc_fw->size, fw_name);
+			pr_err("si_smc: Bogus length %zu in firmware\n",
+			       rdev->smc_fw->size);
 			err = -EINVAL;
 		}
 	} else {
 		err = radeon_ucode_validate(rdev->smc_fw);
 		if (err) {
-			pr_err("si_cp: validation failed for firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: validation failed for firmware\n");
 			goto out;
 		} else {
 			new_fw++;
@@ -1949,8 +1943,7 @@
 out:
 	if (err) {
 		if (err != -EINVAL)
-			pr_err("si_cp: Failed to load firmware \"%s\"\n",
-			       fw_name);
+			pr_err("si_cp: Failed to load firmware\n");
 		release_firmware(rdev->pfp_fw);
 		rdev->pfp_fw = NULL;
 		release_firmware(rdev->me_fw);
diff -ru a/drivers/net/wireless/intel/ipw2x00/ipw2100.c b/drivers/net/wireless/intel/ipw2x00/ipw2100.c
--- a/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2021-06-14 01:15:34.020711528 +0200
+++ b/drivers/net/wireless/intel/ipw2x00/ipw2100.c	2021-06-14 01:16:26.488820724 +0200
@@ -8394,8 +8394,8 @@
 
 	if (rc < 0) {
 		printk(KERN_ERR DRV_NAME ": "
-		       "%s: Firmware '%s' not available or load failed.\n",
-		       priv->net_dev->name, fw_name);
+		       "%s: Firmware not available or load failed.\n",
+		       priv->net_dev->name);
 		return rc;
 	}
 	IPW_DEBUG_INFO("firmware data %p size %zd\n", fw->fw_entry->data,
diff -ru a/drivers/net/wireless/intel/ipw2x00/ipw2200.c b/drivers/net/wireless/intel/ipw2x00/ipw2200.c
--- a/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2021-06-14 01:15:34.020711528 +0200
+++ b/drivers/net/wireless/intel/ipw2x00/ipw2200.c	2021-06-14 01:16:26.488820724 +0200
@@ -3398,12 +3398,12 @@
 	/* ask firmware_class module to get the boot firmware off disk */
 	rc = request_firmware(raw, name, &priv->pci_dev->dev);
 	if (rc < 0) {
-		IPW_ERROR("%s request_firmware failed: Reason %d\n", name, rc);
+		IPW_ERROR("request_firmware failed: Reason %d\n", rc);
 		return rc;
 	}
 
 	if ((*raw)->size < sizeof(*fw)) {
-		IPW_ERROR("%s is too small (%zd)\n", name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small (%zd)\n", (*raw)->size);
 		return -EINVAL;
 	}
 
@@ -3411,13 +3411,12 @@
 
 	if ((*raw)->size < sizeof(*fw) + le32_to_cpu(fw->boot_size) +
 	    le32_to_cpu(fw->ucode_size) + le32_to_cpu(fw->fw_size)) {
-		IPW_ERROR("%s is too small or corrupt (%zd)\n",
-			  name, (*raw)->size);
+		IPW_ERROR("Firmware file is too small or corrupt (%zd)\n",
+			  (*raw)->size);
 		return -EINVAL;
 	}
 
-	IPW_DEBUG_INFO("Read firmware '%s' image v%d.%d (%zd bytes)\n",
-		       name,
+	IPW_DEBUG_INFO("Read firmware image v%d.%d (%zd bytes)\n",
 		       le32_to_cpu(fw->ver) >> 16,
 		       le32_to_cpu(fw->ver) & 0xff,
 		       (*raw)->size - sizeof(*fw));
diff -ru a/drivers/net/wireless/intel/iwlegacy/3945-mac.c b/drivers/net/wireless/intel/iwlegacy/3945-mac.c
--- a/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2021-06-14 01:15:34.024711537 +0200
+++ b/drivers/net/wireless/intel/iwlegacy/3945-mac.c	2021-06-14 01:16:26.488820724 +0200
@@ -1837,7 +1837,7 @@
 		sprintf(buf, "%s%u%s", name_pre, idx, ".ucode");
 		ret = request_firmware(&ucode_raw, buf, &il->pci_dev->dev);
 		if (ret < 0) {
-			IL_ERR("%s firmware file req failed: %d\n", buf, ret);
+			IL_ERR("Firmware file req failed: %d\n", ret);
 			if (ret == -ENOENT)
 				continue;
 			else
@@ -3698,7 +3697,7 @@
 		goto out_unset_hw_params;
 	}
 
-	IL_INFO("Detected Intel Wireless WiFi Link %s\n", il->cfg->name);
+	IL_INFO("Detected Intel Wireless WiFi Link\n");
 
 	/***********************
 	 * 7. Setup Services
diff -ru a/drivers/net/wireless/intel/iwlegacy/4965-mac.c b/drivers/net/wireless/intel/iwlegacy/4965-mac.c
--- a/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2021-06-14 01:15:34.024711537 +0200
+++ b/drivers/net/wireless/intel/iwlegacy/4965-mac.c	2021-06-14 01:16:26.488820724 +0200
@@ -4690,7 +4690,7 @@
 
 	sprintf(il->firmware_name, "%s%s%s", name_pre, tag, ".ucode");
 
-	D_INFO("attempting to load firmware '%s'\n", il->firmware_name);
+	D_INFO("attempting to load firmware\n");
 
 	return request_firmware_nowait(THIS_MODULE, 1, il->firmware_name,
 				       &il->pci_dev->dev, GFP_KERNEL, il,
@@ -4780,8 +4780,7 @@
 
 	if (!ucode_raw) {
 		if (il->fw_idx <= il->cfg->ucode_api_max)
-			IL_ERR("request for firmware file '%s' failed.\n",
-			       il->firmware_name);
+			IL_ERR("request for firmware failed.\n");
 		goto try_again;
 	}
 
diff -ru a/drivers/net/wireless/intel/iwlwifi/dvm/main.c b/drivers/net/wireless/intel/iwlwifi/dvm/main.c
--- a/drivers/net/wireless/intel/iwlwifi/dvm/main.c	2021-06-14 01:15:34.032711554 +0200
+++ b/drivers/net/wireless/intel/iwlwifi/dvm/main.c	2021-06-14 01:16:26.492820732 +0200
@@ -1254,7 +1254,7 @@
 	 ************************/
 	hw = iwl_alloc_all();
 	if (!hw) {
-		pr_err("%s: Cannot allocate network device\n", trans->name);
+		pr_err("Cannot allocate network device\n");
 		goto out;
 	}
 
@@ -1382,8 +1382,7 @@
 	/***********************
 	 * 2. Read REV register
 	 ***********************/
-	IWL_INFO(priv, "Detected %s, REV=0x%X\n",
-		priv->trans->name, priv->trans->hw_rev);
+	IWL_INFO(priv, "Detected, REV=0x%X\n", priv->trans->hw_rev);
 
 	if (iwl_trans_start_hw(priv->trans))
 		goto out_free_hw;
diff -ru a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c
--- a/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2021-06-14 01:15:34.040711570 +0200
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-drv.c	2021-06-14 01:16:26.492820732 +0200
@@ -251,7 +251,6 @@
 	snprintf(drv->firmware_name, sizeof(drv->firmware_name), "%s%s.ucode",
 		 cfg->fw_name_pre, tag);
 
-	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware '%s'\n",
-			  drv->firmware_name);
+	IWL_DEBUG_FW_INFO(drv, "attempting to load firmware\n");
 
 	return request_firmware_nowait(THIS_MODULE, 1, drv->firmware_name,
diff -ru a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c
--- a/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2021-06-14 01:15:34.040711570 +0200
+++ b/drivers/net/wireless/intel/iwlwifi/iwl-nvm-parse.c	2021-06-14 01:16:26.492820732 +0200
@@ -1321,8 +1321,8 @@
 	 */
 	ret = request_firmware(&fw_entry, nvm_file_name, trans->dev);
 	if (ret) {
-		IWL_ERR(trans, "ERROR: %s isn't available %d\n",
-			nvm_file_name, ret);
+		IWL_ERR(trans, "ERROR: firmware isn't available %d\n",
+			ret);
 		return ret;
 	}
 
diff -ru a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c
--- a/drivers/net/wireless/intel/iwlwifi/mvm/ops.c	2021-06-14 01:15:34.048711587 +0200
+++ b/drivers/net/wireless/intel/iwlwifi/mvm/ops.c	2021-06-14 01:16:26.492820732 +0200
@@ -809,8 +809,7 @@
 		goto out_free;
 	}
 
-	IWL_INFO(mvm, "Detected %s, REV=0x%X\n",
-		 mvm->trans->name, mvm->trans->hw_rev);
+	IWL_INFO(mvm, "Detected, REV=0x%X\n", mvm->trans->hw_rev);
 
 	if (iwlwifi_mod_params.nvm_file)
 		mvm->nvm_file_name = iwlwifi_mod_params.nvm_file;
diff -ru a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c
--- a/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2021-06-14 01:15:34.116711731 +0200
+++ b/drivers/net/wireless/realtek/rtl8xxxu/rtl8xxxu_core.c	2021-06-14 01:16:26.492820732 +0200
@@ -2069,9 +2069,9 @@
 	int ret = 0;
 	u16 signature;
 
-	dev_info(dev, "%s: Loading firmware %s\n", DRIVER_NAME, fw_name);
+	dev_info(dev, "%s: Loading firmware\n", DRIVER_NAME);
 	if (request_firmware(&fw, fw_name, &priv->udev->dev)) {
-		dev_warn(dev, "request_firmware(%s) failed\n", fw_name);
+		dev_warn(dev, "request_firmware failed\n");
 		ret = -EAGAIN;
 		goto exit;
 	}
diff -ru a/drivers/net/wireless/realtek/rtlwifi/core.c b/drivers/net/wireless/realtek/rtlwifi/core.c
--- a/drivers/net/wireless/realtek/rtlwifi/core.c	2021-06-14 01:15:34.156711815 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/core.c	2021-06-14 01:16:26.492820732 +0200
@@ -83,8 +83,7 @@
 			err = request_firmware(&firmware,
 					       rtlpriv->cfg->alt_fw_name,
 					       rtlpriv->io.dev);
-			pr_info("Loading alternative firmware %s\n",
-				rtlpriv->cfg->alt_fw_name);
+			pr_info("Loading alternative firmware\n");
 			if (!err)
 				goto found_alt;
 		}
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2021-06-14 01:15:34.124711748 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8188ee/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -143,7 +143,7 @@
 
 	fw_name = "rtlwifi/rtl8188efw.bin";
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2021-06-14 01:15:34.128711756 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192ce/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -146,7 +146,7 @@
 		fw_name = "rtlwifi/rtl8192cfw.bin";
 
 	rtlpriv->max_fw_size = 0x4000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2021-06-14 01:15:34.132711765 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192cu/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -55,7 +55,7 @@
 	}
 	/* provide name of alternative file */
 	rtlpriv->cfg->alt_fw_name = "rtlwifi/rtl8192cufw.bin";
-	pr_info("Loading firmware %s\n", fw_name);
+	pr_info("Loading firmware\n");
 	rtlpriv->max_fw_size = 0x4000;
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      fw_name, rtlpriv->io.dev,
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2021-06-14 01:15:34.132711765 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192de/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -154,7 +154,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	pr_info("Driver for Realtek RTL8192DE WLAN interface\n");
-	pr_info("Loading firmware file %s\n", fw_name);
+	pr_info("Loading firmware\n");
 
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2021-06-14 01:15:34.136711773 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192ee/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -149,7 +149,7 @@
 	fw_name = "rtlwifi/rtl8192eefw.bin";
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2021-06-14 01:15:34.140711782 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8192se/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -69,7 +69,7 @@
 			 "Firmware callback routine entered!\n");
 	complete(&rtlpriv->firmware_loading_complete);
 	if (!firmware) {
-		pr_err("Firmware %s not available\n", fw_name);
+		pr_err("Firmware not available\n");
 		rtlpriv->max_fw_size = 0;
 		return;
 	}
@@ -185,7 +185,7 @@
 	rtlpriv->max_fw_size = RTL8190_MAX_FIRMWARE_CODE_SIZE*2 +
 			       sizeof(struct fw_hdr);
 	pr_info("Driver for Realtek RTL8192SE/RTL8191SE\n"
-		"Loading firmware %s\n", fw_name);
+		"Loading firmware\n");
 	/* request fw */
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2021-06-14 01:15:34.144711790 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8723ae/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -152,7 +152,7 @@
 		fw_name = "rtlwifi/rtl8723fw_B.bin";
 
 	rtlpriv->max_fw_size = 0x6000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2021-06-14 01:15:34.148711798 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8723be/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -156,7 +156,7 @@
 	}
 
 	rtlpriv->max_fw_size = 0x8000;
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
diff -ru a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c
--- a/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2021-06-14 01:15:34.152711807 +0200
+++ b/drivers/net/wireless/realtek/rtlwifi/rtl8821ae/sw.c	2021-06-14 01:16:26.492820732 +0200
@@ -185,7 +185,7 @@
 
 	rtlpriv->max_fw_size = 0x8000;
 	/*load normal firmware*/
-	pr_info("Using firmware %s\n", fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1, fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
 				      rtl_fw_cb);
@@ -196,7 +196,7 @@
 		return 1;
 	}
 	/*load wowlan firmware*/
-	pr_info("Using firmware %s\n", wowlan_fw_name);
+	pr_info("Using firmware\n");
 	err = request_firmware_nowait(THIS_MODULE, 1,
 				      wowlan_fw_name,
 				      rtlpriv->io.dev, GFP_KERNEL, hw,
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/ath3k.c linux-hwe-5.13-5.13.0/drivers/bluetooth/ath3k.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/ath3k.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/ath3k.c	2022-01-06 14:02:09.005670683 -0500
@@ -383,7 +383,7 @@
 
 	ret = request_firmware(&firmware, filename, &udev->dev);
 	if (ret < 0) {
-		BT_ERR("Patch file not found %s", filename);
+		BT_ERR("Patch file not found");
 		return ret;
 	}
 
@@ -446,7 +446,7 @@
 
 	ret = request_firmware(&firmware, filename, &udev->dev);
 	if (ret < 0) {
-		BT_ERR("Configuration file not found %s", filename);
+		BT_ERR("Configuration file not found");
 		return ret;
 	}
 
@@ -505,11 +505,10 @@
 	ret = request_firmware(&firmware, ATH3K_FIRMWARE, &udev->dev);
 	if (ret < 0) {
 		if (ret == -ENOENT)
-			BT_ERR("Firmware file \"%s\" not found",
-							ATH3K_FIRMWARE);
+			BT_ERR("Firmware file not found");
 		else
-			BT_ERR("Firmware file \"%s\" request failed (err=%d)",
-							ATH3K_FIRMWARE, ret);
+			BT_ERR("Firmware file request failed (err=%d)",
+							ret);
 		return ret;
 	}
 
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btintel.c linux-hwe-5.13-5.13.0/drivers/bluetooth/btintel.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btintel.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/btintel.c	2022-01-06 13:52:00.284072017 -0500
@@ -304,8 +304,8 @@
 
 	err = request_firmware_direct(&fw, ddc_name, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to load Intel DDC file %s (%d)",
-			   ddc_name, err);
+		bt_dev_err(hdev, "Failed to load Intel DDC file (%d)",
+			   err);
 		return err;
 	}
 
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btqca.c linux-hwe-5.13-5.13.0/drivers/bluetooth/btqca.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btqca.c	2022-01-06 13:31:26.000000000 -0500
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/btqca.c	2022-01-06 14:19:24.164456053 -0500
@@ -394,20 +394,19 @@
 	const u8 *segment;
 	int ret, size, remain, i = 0;
 
-	bt_dev_info(hdev, "QCA Downloading %s", config->fwname);
+	bt_dev_info(hdev, "QCA loading");
 
 	ret = request_firmware(&fw, config->fwname, &hdev->dev);
 	if (ret) {
-		bt_dev_err(hdev, "QCA Failed to request file: %s (%d)",
-			   config->fwname, ret);
+		bt_dev_err(hdev, "QCA Failed to request file (%d)",
+			   ret);
 		return ret;
 	}
 
 	size = fw->size;
 	data = vmalloc(fw->size);
 	if (!data) {
-		bt_dev_err(hdev, "QCA Failed to allocate memory for file: %s",
-			   config->fwname);
+		bt_dev_err(hdev, "QCA Failed to allocate memory for file");
 		release_firmware(fw);
 		return -ENOMEM;
 	}
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btrtl.c linux-hwe-5.13-5.13.0/drivers/bluetooth/btrtl.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btrtl.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/btrtl.c	2022-01-06 14:04:09.911642928 -0500
@@ -475,7 +475,7 @@
 	const struct firmware *fw;
 	int ret;
 
-	rtl_dev_info(hdev, "loading %s", name);
+	rtl_dev_info(hdev, "loading firmware");
 	ret = request_firmware(&fw, name, &hdev->dev);
 	if (ret < 0)
 		return ret;
@@ -649,8 +649,7 @@
 	btrtl_dev->fw_len = rtl_load_file(hdev, btrtl_dev->ic_info->fw_name,
 					  &btrtl_dev->fw_data);
 	if (btrtl_dev->fw_len < 0) {
-		rtl_dev_err(hdev, "firmware file %s not found",
-			    btrtl_dev->ic_info->fw_name);
+		rtl_dev_err(hdev, "firmware file not found");
 		ret = btrtl_dev->fw_len;
 		goto err_free;
 	}
@@ -667,8 +666,7 @@
 						   &btrtl_dev->cfg_data);
 		if (btrtl_dev->ic_info->config_needed &&
 		    btrtl_dev->cfg_len <= 0) {
-			rtl_dev_err(hdev, "mandatory config file %s not found",
-				    btrtl_dev->ic_info->cfg_name);
+			rtl_dev_err(hdev, "mandatory config file not found");
 			ret = btrtl_dev->cfg_len;
 			goto err_free;
 		}
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btusb.c linux-hwe-5.13-5.13.0/drivers/bluetooth/btusb.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/btusb.c	2022-01-06 13:31:26.000000000 -0500
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/btusb.c	2022-01-06 13:47:17.680749780 -0500
@@ -1995,8 +1995,8 @@
 			return NULL;
 		}
 
-		bt_dev_err(hdev, "failed to open Intel firmware file: %s (%d)",
-			   fwname, ret);
+		bt_dev_err(hdev, "failed to open Intel firmware file (%d)",
+			   ret);
 
 		/* If the correct firmware patch file is not found, use the
 		 * default firmware patch file instead
@@ -2004,8 +2004,7 @@
 		snprintf(fwname, sizeof(fwname), "intel/ibt-hw-%x.%x.bseq",
 			 ver->hw_platform, ver->hw_variant);
 		if (request_firmware(&fw, fwname, &hdev->dev) < 0) {
-			bt_dev_err(hdev, "failed to open default fw file: %s",
-				   fwname);
+			bt_dev_err(hdev, "failed to open default fw file");
 			return NULL;
 		}
 	}
@@ -2581,7 +2580,7 @@
 		}
 
 		bt_dev_err(hdev, "Failed to load Intel firmware file %s (%d)",
-			   fwname, err);
+			   err);
 
 		return err;
 	}
@@ -2750,8 +2749,8 @@
 			return 0;
 		}
 
-		bt_dev_err(hdev, "Failed to load Intel firmware file %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to load Intel firmware file (%d)",
+			   err);
 		return err;
 	}
 
@@ -4191,8 +4190,8 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err) {
-		bt_dev_err(hdev, "failed to request rampatch file: %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "failed to request rampatch file (%d)",
+			   err);
 		return err;
 	}
 
@@ -4252,8 +4251,8 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err) {
-		bt_dev_err(hdev, "failed to request NVM file: %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "failed to request NVM file (%d)",
+			   err);
 		return err;
 	}
 
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_ag6xx.c linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_ag6xx.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_ag6xx.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_ag6xx.c	2022-01-06 13:56:48.375097181 -0500
@@ -195,13 +195,13 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to open Intel bddata file: %s (%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to open Intel bddata file (%d)",
+			   err);
 		goto patch;
 	}
 	fw_ptr = fw->data;
 
-	bt_dev_info(hdev, "Applying bddata (%s)", fwname);
+	bt_dev_info(hdev, "Applying bddata");
 
 	skb = __hci_cmd_sync_ev(hdev, 0xfc2f, fw->size, fw->data,
 				HCI_EV_CMD_STATUS, HCI_CMD_TIMEOUT);
@@ -233,13 +233,13 @@
 
 	err = request_firmware(&fw, fwname, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to open Intel patch file: %s(%d)",
-			   fwname, err);
+		bt_dev_err(hdev, "Failed to open Intel patch file(%d)",
+			   err);
 		goto complete;
 	}
 	fw_ptr = fw->data;
 
-	bt_dev_info(hdev, "Patching firmware file (%s)", fwname);
+	bt_dev_info(hdev, "Patching firmware file");
 
 	/* PBN patch file contains a list of binary patches to be applied on top
 	 * of the embedded firmware. Each patch entry header contains the target
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_intel.c linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_intel.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_intel.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_intel.c	2022-01-06 13:55:26.408500469 -0500
@@ -706,7 +706,7 @@
 		return err;
 	}
 
-	bt_dev_info(hdev, "Found device firmware: %s", fwname);
+	bt_dev_info(hdev, "Found device firmware");
 
 	/* Save the DDC file name for later */
 	switch (ver.hw_variant) {
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_ll.c linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_ll.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_ll.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_ll.c	2022-01-06 14:21:46.930095575 -0500
@@ -539,8 +539,8 @@
 
 	err = request_firmware(&fw, bts_scr_name, &lldev->serdev->dev);
 	if (err || !fw->data || !fw->size) {
-		bt_dev_err(lldev->hu.hdev, "request_firmware failed(errno %d) for %s",
-			   err, bts_scr_name);
+		bt_dev_err(lldev->hu.hdev, "request_firmware failed(errno %d)",
+			   err);
 		return -EINVAL;
 	}
 	ptr = (void *)fw->data;
diff -r -u linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_mrvl.c linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_mrvl.c
--- linux-hwe-5.13-5.13.0.orig/drivers/bluetooth/hci_mrvl.c	2021-06-27 18:21:11.000000000 -0400
+++ linux-hwe-5.13-5.13.0/drivers/bluetooth/hci_mrvl.c	2022-01-06 14:22:37.877253532 -0500
@@ -277,7 +277,7 @@
 
 	err = request_firmware(&fw, name, &hdev->dev);
 	if (err < 0) {
-		bt_dev_err(hdev, "Failed to load firmware file %s", name);
+		bt_dev_err(hdev, "Failed to load firmware file");
 		return err;
 	}
 
